(()=>{var e,t={59144:(e,t,r)=>{"use strict";var s=r(17187),n=r.n(s),a=r(12840),o=r.n(a),i=r(74286),c=r.n(i),l=r(17977),d=r.n(l),u=r(2043),p=r.n(u),h=r(93150),g=r.n(h),m=r(12724),f=r(83560),v=r.n(f),y=r(79826),C=r(75152),S=r(17102);const T="address_book_entries",w="install_date_ext",k="ledger_connection_type",b="networks_added",P="networks_without_ticker",M="nft_autodetection_enabled",E="number_of_accounts",A="number_of_nft_collections",I="number_of_nfts",_="number_of_tokens",N="opensea_api_enabled",x="theme",R="three_box_enabled",O="token_detection_enabled",L="0x0000000000000000",D={path:"/background-process",title:"Background Process",url:"/background-process"},U="Cancel Via Notification Close",F="Cancel Sig Request Via Notification Close",B="App Installed",G="Decryption Approved",j="Decryption Rejected",H="Decryption Requested",$="Encryption Approved",q="Encryption Rejected",K="Encryption Requested",V="NFT Added",W="Permissions Approved",Q="Permissions Rejected",z="Permissions Requested",Y="Phishing Page Displayed",X="Provider Method Called",J="Signature Approved",Z="Signature Rejected",ee="Signature Requested",te="Token Detected",re={ACCOUNTS:"Accounts",APP:"App",AUTH:"Auth",BACKGROUND:"Background",ERROR:"Error",FOOTER:"Footer",HOME:"Home",INPAGE_PROVIDER:"inpage_provider",KEYS:"Keys",MESSAGES:"Messages",NAVIGATION:"Navigation",NETWORK:"Network",ONBOARDING:"Onboarding",PHISHING:"Phishing",RETENTION:"Retention",SETTINGS:"Settings",SNAPS:"Snaps",SWAPS:"Swaps",TRANSACTIONS:"Transactions",WALLET:"Wallet"},se={NETWORK:{CUSTOM_NETWORK_FORM:"custom_network_form",POPULAR_NETWORK_LIST:"popular_network_list"},SWAPS:{MAIN_VIEW:"Main View",TOKEN_VIEW:"Token View"},TOKEN:{CUSTOM:"custom",DAPP:"dapp",DETECTED:"detected",LIST:"list"},TRANSACTION:{DAPP:"dapp",USER:"user"}},ne="ui_customizations",ae={[ne]:{SIWE:"sign_in_with_ethereum"}};function oe(){const{lastError:e}=g().runtime;if(e)return e.stack&&e.message?e:new Error(e.message)}function ie(){const e=oe();return e&&p().error(e),e}var ce=r(19893),le=r(95119),de=r(96486);const ue={version:2,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=2;try{"etherscan"===t.data.config.provider.type&&(t.data.config.provider.type="rpc",t.data.config.provider.rpcTarget="https://rpc.metamask.io/")}catch(e){}return Promise.resolve(t)}},pe={version:3,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=3;try{"https://rawtestrpc.metamask.io/"===t.data.config.provider.rpcTarget&&(t.data.config.provider.rpcTarget="https://testrpc.metamask.io/")}catch(e){}return Promise.resolve(t)}},he={version:4,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=4;try{if("rpc"!==t.data.config.provider.type)return Promise.resolve(t);switch(t.data.config.provider.rpcTarget){case"https://testrpc.metamask.io/":t.data.config.provider={type:"testnet"};break;case"https://rpc.metamask.io/":t.data.config.provider={type:"mainnet"}}}catch(e){}return Promise.resolve(t)}},ge={version:5,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=5;try{const e=function(e){const{config:t}=e,r={...e,KeyringController:{vault:e.vault,selectedAccount:t.selectedAccount,walletNicknames:e.walletNicknames}};return delete r.vault,delete r.walletNicknames,delete r.config.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #5${e.stack}`)}return Promise.resolve(t)}};const me={version:6,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=6;try{const e=function(e){const t=e.KeyringController,r={...e,PreferencesController:{selectedAddress:t.selectedAccount}};return delete r.KeyringController.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #6${e.stack}`)}return Promise.resolve(t)}};const fe={version:7,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=7;try{const e=function(e){const t={...e,TransactionManager:{transactions:e.transactions||[],gasMultiplier:e.gasMultiplier||1}};return delete t.transactions,delete t.gasMultiplier,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #7${e.stack}`)}return Promise.resolve(t)}};const ve={version:8,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=8;try{const e=function(e){const t={...e,NoticeController:{noticesList:e.noticesList||[]}};return delete t.noticesList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #8${e.stack}`)}return Promise.resolve(t)}};const ye={version:9,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=9;try{const e=function(e){const t=(0,de.merge)({},e,{CurrencyController:{currentCurrency:e.currentFiat||e.fiatCurrency||"USD",conversionRate:e.conversionRate,conversionDate:e.conversionDate}});return delete t.currentFiat,delete t.fiatCurrency,delete t.conversionRate,delete t.conversionDate,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #9${e.stack}`)}return Promise.resolve(t)}};const Ce={version:10,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=10;try{const e=function(e){const t=(0,de.merge)({},e,{ShapeShiftController:{shapeShiftTxList:e.shapeShiftTxList||[]}});return delete t.shapeShiftTxList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #10${e.stack}`)}return Promise.resolve(t)}};const Se={version:11,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=11;try{const e=function(e){const t=e;return delete t.TOSHash,delete t.isDisclaimerConfirmed,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #11${e.stack}`)}return Promise.resolve(t)}};const Te={version:12,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=12;try{const e=function(e){const t=e;return t.NoticeController.noticesList.forEach((e=>{e.read&&(e.body="")})),t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #12${e.stack}`)}return Promise.resolve(t)}};const we={version:13,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=13;try{const e=function(e){const t=e,{config:r}=t;r&&r.provider&&"testnet"===r.provider.type&&(t.config.provider.type="ropsten");return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #13${e.stack}`)}return Promise.resolve(t)}};const ke={version:14,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=14;try{const e=function(e){const t=e;return t.NetworkController={},t.NetworkController.provider=t.config.provider,delete t.config.provider,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #14${e.stack}`)}return Promise.resolve(t)}};var be=r(33700);const Pe={version:15,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=15;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=r;t.TransactionController.transactions=e.map((e=>e.err?("Gave up submitting tx."===e.err.message&&(e.status=be.LN.failed),e):e))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #15${e.stack}`)}return Promise.resolve(t)}};const Me={version:16,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=16;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>e.err?("transaction with the same hash was already imported."===e.err&&(e.status=be.LN.submitted,delete e.err),e):e))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #16${e.stack}`)}return Promise.resolve(t)}};const Ee={version:17,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=17;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>(!e.status===be.LN.failed||e.retryCount>0&&e.retryCount<2&&(e.status=be.LN.submitted,delete e.err),e)))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #17${e.stack}`)}return Promise.resolve(t)}};var Ae=r(34901);function Ie(e,t,r){const s=Ae.default.compare(e,t);return s[0]&&(r&&(s[0].note=r),s[0].timestamp=Date.now()),s}function _e(e){const t={...e};return delete t.history,(0,de.cloneDeep)(t)}const Ne={version:18,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=18;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>{if(!e.history||0===e.history.length){const t=_e(e);return e.history=[t],e}const t=(r=e.history,r.map(((e,t)=>0===t?e:Ie(r[t-1],e)))).filter((e=>!Array.isArray(e)||e.length>0));var r;return e.history=t,e}))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #18${e.stack}`)}return Promise.resolve(t)}};const xe={version:19,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=19;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map(((e,t,r)=>{if(e.status!==be.LN.submitted)return e;const s=function(e){const t=e.map((e=>{const{nonce:t}=e.txParams;return parseInt(t||"0x0",16)}));return Math.max.apply(null,t)}(r.filter((e=>e.status===be.LN.confirmed)).filter((t=>t.txParams.from===e.txParams.from)).filter((t=>t.metamaskNetworkId.from===e.metamaskNetworkId.from))),n=function(e,t){const r=e.map((e=>{const{nonce:t}=e.txParams;return parseInt(t,16)}));let s=t;for(;r.includes(s);)s+=1;return s}(r.filter((e=>e.status===be.LN.submitted)).filter((t=>t.txParams.from===e.txParams.from)).filter((t=>t.metamaskNetworkId.from===e.metamaskNetworkId.from)),s),a=Math.max(n,s);return parseInt(e.txParams.nonce,16)>a+1&&(e.status=be.LN.failed,e.err={message:"nonce too high",note:"migration 019 custom error"}),e}))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #19${e.stack}`)}return Promise.resolve(t)}};const Re={version:20,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=20;try{const e=function(e){const t=e;"metamask"in t&&!("firstTimeInfo"in t.metamask)&&(t.metamask.firstTimeInfo={version:"3.12.0",date:Date.now()});return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #20${e.stack}`)}return Promise.resolve(t)}};const Oe={version:21,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=21;try{const e=function(e){const t=e;return delete t.BlacklistController,delete t.RecentBlocks,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #21${e.stack}`)}return Promise.resolve(t)}};const Le={version:22,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=22;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>(e.status!==be.LN.submitted||e.submittedTime||(e.submittedTime=(new Date).getTime()),e)))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #22${e.stack}`)}return Promise.resolve(t)}};const De={version:23,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=23;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;if(e.length<=40)return t;const r=e.reverse();let s=!0;for(;r.length>40&&s;){const e=r.findIndex((e=>e.status===be.LN.failed||e.status===be.LN.rejected||e.status===be.LN.confirmed||e.status===be.LN.dropped));e<0?s=!1:r.splice(e,1)}t.TransactionController.transactions=r.reverse()}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #23${e.stack}`)}return Promise.resolve(t)}};const Ue={version:24,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=24;const r=function(e){const t=e;if(!t.TransactionController)return t;const{transactions:r}=t.TransactionController;return t.TransactionController.transactions=r.map(((e,t)=>(e.status===be.LN.unapproved&&e.txParams&&e.txParams.from&&(e.txParams.from=e.txParams.from.toLowerCase()),e))),t}(t.data);return t.data=r,t}};var Fe=r(97125);const Be={version:25,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=25;const r=function(e){const t=e;if(t.TransactionController&&t.TransactionController.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>(e.status!==be.LN.unapproved||(e.txParams=function(e){const t={from:e=>(0,Fe.L_)(e).toLowerCase(),to:()=>(0,Fe.L_)(e.to).toLowerCase(),nonce:e=>(0,Fe.L_)(e),value:e=>(0,Fe.L_)(e),data:e=>(0,Fe.L_)(e),gas:e=>(0,Fe.L_)(e),gasPrice:e=>(0,Fe.L_)(e)},r={};return Object.keys(t).forEach((s=>{e[s]&&(r[s]=t[s](e[s]))})),r}(e.txParams)),e)))}return t}(t.data);return t.data=r,t}};const Ge={version:26,migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=26;try{const e=t.data;t.data=function(e){if(!e.KeyringController||!e.PreferencesController)return e;if(!e.KeyringController.walletNicknames)return e;return e.PreferencesController.identities=Object.keys(e.KeyringController.walletNicknames).reduce(((t,r)=>(t[r]={name:e.KeyringController.walletNicknames[r],address:r},t)),{}),delete e.KeyringController.walletNicknames,e}(e)}catch(e){return console.warn(`MetaMask Migration #26${e.stack}`),Promise.reject(e)}return Promise.resolve(t)}};const je={version:27,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=27;const r=function(e){const t=e;if(t.TransactionController&&t.TransactionController.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.filter((e=>e.status!==be.LN.rejected))}return t}(t.data);return t.data=r,t}};const He={version:28,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=28;const r=function(e){const t=e;if(t.PreferencesController&&t.PreferencesController.tokens&&t.PreferencesController.identities){const{identities:e,tokens:r}=t.PreferencesController;t.PreferencesController.accountTokens={},Object.keys(e).forEach((e=>{t.PreferencesController.accountTokens[e]={mainnet:r}})),t.PreferencesController.tokens=[]}return t}(t.data);return t.data=r,t}};const $e={version:29,migrate:function(e,t,r){return function(s){const n=(0,de.cloneDeep)(s);n.meta.version=e;try{const e=function(e,t,r){const s=e,{TransactionController:n}=s;if(n&&n.transactions){const{transactions:e}=n;s.TransactionController.transactions=e.map((e=>t(e)?(e.status=be.LN.failed,e.err={message:r,note:`Tx automatically failed by migration because ${r}`},e):e))}return s}(n.data,r,t);n.data=e}catch(t){console.warn(`MetaMask Migration #${e}${t.stack}`)}return Promise.resolve(n)}}(29,"Stuck in approved state for too long.",(e=>{const t=e.status===be.LN.approved,r=e.submittedTime,s=Date.now();return t&&s-r>432e5}))},qe={version:30,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=30;const r=function(e){const t=e;if(e.PreferencesController){const{frequentRpcListDetail:e}=t.PreferencesController;e&&(e.forEach(((t,r)=>{Boolean(t.chainId)&&Number.isNaN(parseInt(t.chainId))&&delete e[r].chainId})),t.PreferencesController.frequentRpcListDetail=e)}e.NetworkController&&(t.NetworkController.network&&Number.isNaN(parseInt(t.NetworkController.network))&&delete t.NetworkController.network,t.NetworkController.provider&&t.NetworkController.provider.chainId&&Number.isNaN(parseInt(t.NetworkController.provider.chainId))&&delete t.NetworkController.provider.chainId);return t}(t.data);return t.data=r,t}};const Ke={version:31,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=31;const r=function(e){const{KeyringController:t,PreferencesController:r}=e;if(t&&r){const{vault:e}=t;r.completedOnboarding=Boolean(e)}return e}(t.data);return t.data=r,t}};const Ve={version:32,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=32;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const{betaUI:e}=t.featureFlags||{};t.completedUiMigration=e}return e}(r),t}};const We={version:33,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=33;const r=function(e){const t=e;e.NoticeController&&delete t.NoticeController;return t}(t.data);return t.data=r,t}};const Qe={version:34,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=34;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const e=t.featureFlags||{};e.privacyMode||void 0!==t.migratedPrivacyMode||(t.migratedPrivacyMode=!0,e.privacyMode=!0)}return e}(r),t}};const ze={version:35,async migrate(e){const t=(0,de.cloneDeep)(e);return t.meta.version=35,t.data=function(e){e.PreferencesController&&void 0!==e.PreferencesController.seedWords&&delete e.PreferencesController.seedWords;return e}(t.data),t}};const Ye={version:36,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=36;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const e=t.featureFlags||{};void 0!==e.privacyMode&&delete e.privacyMode}return e}(r),t}};var Xe=r(75851);const Je={version:37,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=37;const r=t.data;return t.data=function(e){if(e.AddressBookController){const t=e.AddressBookController.addressBook,r=new Set,s={};Object.values(t).forEach((e=>{r.add(e.chainId)}));for(const e of r.values()){s[e]={};for(const r in t)t[r].chainId===e&&(t[r].isEns=!1,(0,Xe.normalizeEnsName)(t[r].name)&&(t[r].isEns=!0),s[e][r]=t[r])}e.AddressBookController.addressBook=s}return e}(r),t}};const Ze={version:38,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=38;const r=t.data;return t.data=function(e){const{ABTestController:t={}}=e,{abTests:r={}}=t;if(r.fullScreenVsPopup)return e;return{...e,ABTestController:{...t,abTests:{...r,fullScreenVsPopup:"control"}}}}(r),t}};var et=r(94280);const tt="SAI";function rt(e={}){return e&&"object"==typeof e&&"DAI"===e.symbol&&"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359"===(0,et.QG)(e.address)}const st={version:39,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=39;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const e=t.tokens||[];if(Array.isArray(e))for(const t of e)rt(t)&&(t.symbol=tt);const r=t.accountTokens||{};if(r&&"object"==typeof r)for(const e of Object.keys(r)){const t=r[e];if(t&&"object"==typeof t)for(const e of Object.keys(t)){const r=t[e];if(Array.isArray(r))for(const e of r)rt(e)&&(e.symbol=tt)}}}return e}(r),t}};const nt={version:40,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=40;const r=t.data;return t.data=function(e){return delete e.ProviderApprovalController,e}(r),t}};const at={version:41,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=41;const r=t.data;return t.data=function(e){e.PreferencesController&&e.PreferencesController.preferences&&(e.PreferencesController.preferences.autoLockTimeLimit=e.PreferencesController.preferences.autoLogoutTimeLimit,delete e.PreferencesController.preferences.autoLogoutTimeLimit);return e}(r),t}};const ot={version:42,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=42;const r=t.data;return t.data=function(e){e.AppStateController?e.AppStateController.connectedStatusPopoverHasBeenShown=!1:e.AppStateController={connectedStatusPopoverHasBeenShown:!1};return e}(r),t}};const it={version:43,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=43;const r=t.data;return t.data=function(e){var t;null!=e&&null!==(t=e.PreferencesController)&&void 0!==t&&t.currentAccountTab&&delete e.PreferencesController.currentAccountTab;return e}(r),t}};const ct={version:44,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=44;const r=t.data;return t.data=function(e){var t;void 0!==(null==e||null===(t=e.AppStateController)||void 0===t?void 0:t.mkrMigrationReminderTimestamp)&&delete e.AppStateController.mkrMigrationReminderTimestamp;return e}(r),t}};const lt={version:45,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=45;const r=t.data;return t.data=function(e){var t;dt.includes(null==e||null===(t=e.PreferencesController)||void 0===t?void 0:t.ipfsGateway)&&(e.PreferencesController.ipfsGateway="dweb.link");return e}(r),t}},dt=["ipfs.io","ipfs.dweb.link"];const ut={version:46,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=46;const r=t.data;return t.data=function(e){void 0!==(null==e?void 0:e.ABTestController)&&delete e.ABTestController;return e}(r),t}};const pt={version:47,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=47;const r=t.data;return t.data=function(e){var t;const r=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions;Array.isArray(r)&&r.forEach((e=>{"number"==typeof e.metamaskNetworkId&&(e.metamaskNetworkId=e.metamaskNetworkId.toString())}));return e}(r),t}};const ht={version:48,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=48;const r=t.data;return t.data=function(e={}){var t,r,s,n,a,o,i,c,l;null===(t=e.NetworkController)||void 0===t||delete t.settings;const d=(null===(r=e.NetworkController)||void 0===r?void 0:r.provider)||{};if(("rpc"!==d.type||"string"==typeof d.chainId&&mt.test(d.chainId))&&"localhost"!==d.type){if(null!==(s=e.NetworkController)&&void 0!==s&&s.provider){var u,p;if("rpcTarget"in e.NetworkController.provider){const t=e.NetworkController.provider.rpcTarget;e.NetworkController.provider.rpcUrl=t}null===(u=e.NetworkController)||void 0===u||(null===(p=u.provider)||void 0===p||delete p.rpcTarget)}}else e.NetworkController.provider={type:"rinkeby",rpcUrl:"",chainId:"0x4",nickname:"",rpcPrefs:{},ticker:"ETH"};e.PreferencesController||(e.PreferencesController={});e.PreferencesController.frequentRpcListDetail||(e.PreferencesController.frequentRpcListDetail=[]);e.PreferencesController.frequentRpcListDetail.unshift({rpcUrl:"http://localhost:8545",chainId:"0x539",ticker:"ETH",nickname:"Localhost 8545",rpcPrefs:{}}),null===(n=e.CachedBalancesController)||void 0===n||delete n.cachedBalances;const h=null===(a=e.TransactionController)||void 0===a?void 0:a.transactions;Array.isArray(h)&&h.forEach((e=>{const t=null==e?void 0:e.metamaskNetworkId;"string"==typeof t&&gt.test(t)&&(e.metamaskNetworkId=parseInt(t,16).toString(10))}));const g=(null===(o=e.AddressBookController)||void 0===o?void 0:o.addressBook)||{};Object.keys(g).forEach((e=>{if(/^\d+$/iu.test(e)){const t=`0x${parseInt(e,10).toString(16)}`;!function(e,t){Object.values(e).forEach((e=>{e&&"object"==typeof e&&(e.chainId=t)}))}(g[e],t),g[t]?function(e,t,r){const s=e[t]||{},n={...e[r]};Object.keys(s).forEach((e=>{if(n[e]&&"object"==typeof n[e]){const t={};new Set([...Object.keys(n[e]),...Object.keys(s[e]||{})]).forEach((r=>{var a;t[r]=n[e][r]||(null===(a=s[e])||void 0===a?void 0:a[r])||""})),n[e]=t}else s[e]&&"object"==typeof s[e]&&(n[e]=s[e])})),e[r]=n}(g,e,t):g[t]=g[e],delete g[e]}})),null===(i=e.IncomingTransactionsController)||void 0===i||null===(c=i.incomingTxLastFetchedBlocksByNetwork)||void 0===c||delete c.localhost;const m=null===(l=e.PreferencesController)||void 0===l?void 0:l.accountTokens;m&&Object.keys(m).forEach((e=>{var t,r;const s=(null===(t=m[e])||void 0===t?void 0:t.localhost)||[];if(s.length>0){const t=m[e].rpc||[];t.length>0?m[e].rpc=function(e,t){const r=a(e),s=a(t),n=[];return new Set([...Object.keys(r),...Object.keys(s)]).forEach((e=>{n.push({...r[e],...s[e]})})),n;function a(e){return e.reduce(((e,t)=>(null!=t&&t.address&&"string"==typeof(null==t?void 0:t.address)&&(e[t.address]=t),e)),{})}}(s,t):m[e].rpc=s}null===(r=m[e])||void 0===r||delete r.localhost}));return e}(r),t}},gt=/^0x[0-9a-f]+$/iu,mt=/^0x[1-9a-f]+[0-9a-f]*$/iu;const ft={version:49,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=49;const r=t.data;return t.data=function(e={}){if(e.PreferencesController){var t;const{metaMetricsId:r,participateInMetaMetrics:s,metaMetricsSendCount:n}=e.PreferencesController;e.MetaMetricsController=null!==(t=e.MetaMetricsController)&&void 0!==t?t:{},void 0!==r&&(e.MetaMetricsController.metaMetricsId=r,delete e.PreferencesController.metaMetricsId),void 0!==s&&(e.MetaMetricsController.participateInMetaMetrics=s,delete e.PreferencesController.participateInMetaMetrics),void 0!==n&&(e.MetaMetricsController.metaMetricsSendCount=n,delete e.PreferencesController.metaMetricsSendCount)}return e}(r),t}};const vt=["METASWAP_GAS_PRICE_ESTIMATES_LAST_RETRIEVED","METASWAP_GAS_PRICE_ESTIMATES","cachedFetch","BASIC_PRICE_ESTIMATES_LAST_RETRIEVED","BASIC_PRICE_ESTIMATES","BASIC_GAS_AND_TIME_API_ESTIMATES","BASIC_GAS_AND_TIME_API_ESTIMATES_LAST_RETRIEVED","GAS_API_ESTIMATES_LAST_RETRIEVED","GAS_API_ESTIMATES"],yt={version:50,async migrate(e){const t=(0,de.cloneDeep)(e);return t.meta.version=50,vt.forEach((e=>{var t;return null===(t=window.localStorage)||void 0===t?void 0:t.removeItem(e)})),t}};var Ct=r(30157);const St={version:51,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=51;const r=t.data;return t.data=function(e){var t,r;const{chainId:s,type:n}=(null==e||null===(t=e.NetworkController)||void 0===t?void 0:t.provider)||{},a=null===(r=Ct.Jl[n])||void 0===r?void 0:r.chainId;a&&s!==a&&(e.NetworkController.provider.chainId=a);return e}(r),t}};const Tt={version:52,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=52;const r=t.data;return t.data=function(e={}){if(e.PreferencesController){const{accountTokens:t,accountHiddenTokens:r,frequentRpcListDetail:s}=e.PreferencesController,n={},a={};if(t&&Object.keys(t).length>0){for(const e of Object.keys(t)){n[e]={},t[e][Ct.Qv.RPC]&&s.forEach((r=>{n[e][r.chainId]=t[e][Ct.Qv.RPC]}));for(const r of Object.keys(t[e]))switch(r){case Ct.Qv.MAINNET:n[e][Ct.vo.MAINNET]=t[e][Ct.Qv.MAINNET];break;case"ropsten":n[e]["0x3"]=t[e].ropsten;break;case"rinkeby":n[e]["0x4"]=t[e].rinkeby;break;case Ct.Qv.GOERLI:n[e][Ct.vo.GOERLI]=t[e][Ct.Qv.GOERLI];break;case"kovan":n[e]["0x2a"]=t[e].kovan}}e.PreferencesController.accountTokens=n}if(r&&Object.keys(r).length>0){for(const e of Object.keys(r)){a[e]={},r[e][Ct.Qv.RPC]&&s.forEach((t=>{a[e][t.chainId]=r[e][Ct.Qv.RPC]}));for(const t of Object.keys(r[e]))switch(t){case Ct.Qv.MAINNET:a[e][Ct.vo.MAINNET]=r[e][Ct.Qv.MAINNET];break;case"ropsten":a[e]["0x3"]=r[e].ropsten;break;case"rinkeby":a[e]["0x4"]=r[e].rinkeby;break;case Ct.Qv.GOERLI:a[e][Ct.vo.GOERLI]=r[e][Ct.Qv.GOERLI];break;case"kovan":a[e]["0x2a"]=r[e].kovan}}e.PreferencesController.accountHiddenTokens=a}}return e}(r),t}};const wt={version:53,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=53;const r=t.data;return t.data=function(e){var t,r;const s=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions,n=null==e||null===(r=e.IncomingTransactionsController)||void 0===r?void 0:r.incomingTransactions;Array.isArray(s)&&s.forEach((e=>{e&&(e.type!==be.iU.retry&&e.type!==be.iU.cancel&&(e.type=e.transactionCategory),delete e.transactionCategory)}));if(n){Object.entries(n).forEach((([t,r])=>{r&&(delete r.transactionCategory,e.IncomingTransactionsController.incomingTransactions[t]={...r,type:be.iU.incoming})}))}return e}(r),t}};function kt(e){return"number"==typeof e||"string"==typeof e&&e.match(/^(0x)?\d+$/u)}const bt={version:54,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=54;const r=function(e){const t=e;if(!t.PreferencesController)return t;const r=(t.PreferencesController.tokens||[]).filter((({decimals:e})=>kt(e)));for(const e of r)"string"==typeof e.decimals&&(e.decimals=parseInt(e.decimals));t.PreferencesController.tokens=r;const{accountTokens:s}=t.PreferencesController;if(s&&"object"==typeof s)for(const e of Object.keys(s)){const t=s[e];if(t&&"object"==typeof t)for(const e of Object.keys(t)){const r=(t[e]||[]).filter((({decimals:e})=>kt(e)));for(const e of r)"string"==typeof e.decimals&&(e.decimals=parseInt(e.decimals));t[e]=r}}return t.PreferencesController.accountTokens=s,t}(t.data);return t.data=r,t}};const Pt={version:55,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=55;const r=t.data;return t.data=function(e){var t;null!=e&&null!==(t=e.IncomingTransactionsController)&&void 0!==t&&t.incomingTxLastFetchedBlocksByNetwork&&(e.IncomingTransactionsController.incomingTxLastFetchedBlockByChainId=(0,de.mapKeys)(e.IncomingTransactionsController.incomingTxLastFetchedBlocksByNetwork,((e,t)=>{var r,s;return null!==(r=null===(s=Ct.Jl[t])||void 0===s?void 0:s.chainId)&&void 0!==r?r:Mt})),delete e.IncomingTransactionsController.incomingTxLastFetchedBlockByChainId.UNKNOWN,delete e.IncomingTransactionsController.incomingTxLastFetchedBlocksByNetwork);return e}(r),t}},Mt="UNKNOWN";Ct.Jl.rinkeby={networkId:"4",chainId:"0x4",ticker:"ETH"},Ct.Jl.ropsten={networkId:"3",chainId:"0x3",ticker:"ETH"},Ct.Jl.kovan={networkId:"42",chainId:"0x2a",ticker:"ETH"};const Et={version:56,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=56;const{PreferencesController:r}=t.data;return Array.isArray(null==r?void 0:r.tokens)&&(r.tokens=r.tokens.filter((({address:e})=>e))),null!=r&&r.accountTokens&&"object"==typeof r.accountTokens&&Object.keys(r.accountTokens).forEach((e=>{Object.keys(r.accountTokens[e]).forEach((t=>{r.accountTokens[e][t]=r.accountTokens[e][t].filter((({address:e})=>e))}))})),null!=r&&r.assetImages&&"undefined"in r.assetImages&&delete r.assetImages.undefined,t}};var At=r(42881);const It={version:57,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=57;const r=t.data;return t.data=function(e){var t;null!=e&&null!==(t=e.TransactionController)&&void 0!==t&&t.transactions&&Array.isArray(e.TransactionController.transactions)&&!e.TransactionController.transactions.some((e=>"object"!=typeof e||void 0===e.txParams))&&(e.TransactionController.transactions=(0,de.keyBy)(e.TransactionController.transactions,(e=>(void 0!==e.id&&null!==e.id||(e.id=(0,At.Z)()),e.id))));return e}(r),t}};const _t={version:58,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=58;const r=t.data;return t.data=function(e){var t;return null===(t=e.AppStateController)||void 0===t||delete t.swapsWelcomeMessageHasBeenShown,e}(r),t}};const Nt={version:59,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=59;const r=t.data;return t.data=function(e){var t;const r=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions;if((0,de.isPlainObject)(r)){const t=(0,de.groupBy)(Object.values(r),(e=>{var t,r;return`${null===(t=e.txParams)||void 0===t?void 0:t.nonce}-${null!==(r=e.chainId)&&void 0!==r?r:e.metamaskNetworkId}`})),s=(0,de.pickBy)(t,(e=>e.some((e=>e.type!==be.iU.cancel&&e.type!==be.iU.retry))));e.TransactionController.transactions=(0,de.keyBy)((0,de.concat)(...Object.values(s)),(e=>e.id))}return e}(r),t}};const xt="2020-08-31",Rt={version:60,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=60;const r=function(e){var t;const r=null==e||null===(t=e.NotificationController)||void 0===t?void 0:t.notifications;var s;(0,de.isPlainObject)(r)&&(null===(s=r[2])||void 0===s?void 0:s.date)===xt&&delete e.NotificationController.notifications[2];return e}(t.data);return t.data=r,t}};const Ot={version:61,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=61;const r=function(e){const t=(new Date).getTime();e.AppStateController?(e.AppStateController.recoveryPhraseReminderHasBeenShown=!1,e.AppStateController.recoveryPhraseReminderLastShown=t):e.AppStateController={recoveryPhraseReminderHasBeenShown:!1,recoveryPhraseReminderLastShown:t};return e}(t.data);return t.data=r,t}};const Lt={version:62,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=62;const r=function(e){if(e.MetaMetricsController){const{metaMetricsSendCount:t}=e.MetaMetricsController;void 0!==t&&delete e.MetaMetricsController.metaMetricsSendCount}return e}(t.data);return t.data=r,t}};const Dt={version:63,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=63;const r=function(e){var t,r,s,n,a,o,i,c;const l=null==e||null===(t=e.PreferencesController)||void 0===t?void 0:t.accountTokens,d=null==e||null===(r=e.PreferencesController)||void 0===r?void 0:r.accountHiddenTokens,u={};l&&Object.keys(l).forEach((e=>{Object.keys(l[e]).forEach((t=>{const r=l[e][t];void 0===u[t]?u[t]={[e]:r}:u[t]={...u[t],[e]:r}}))}));const p={};d&&Object.keys(d).forEach((e=>{Object.keys(d[e]).forEach((t=>{const r=d[e][t];void 0===p[t]?p[t]={[e]:r}:p[t]={...p[t],[e]:r}}))}));e.TokensController?(e.TokensController.allTokens=u,e.TokensController.allIgnoredTokens=p):e.TokensController={allTokens:u,allIgnoredTokens:p};return null==e||(null===(s=e.PreferencesController)||void 0===s||delete s.accountHiddenTokens),null==e||null===(n=e.PreferencesController)||void 0===n||delete n.accountTokens,null==e||null===(a=e.PreferencesController)||void 0===a||delete a.assetImages,null==e||null===(o=e.PreferencesController)||void 0===o||delete o.hiddenTokens,null==e||null===(i=e.PreferencesController)||void 0===i||delete i.tokens,null==e||null===(c=e.PreferencesController)||void 0===c||delete c.suggestedTokens,e}(t.data);return t.data=r,t}};const Ut="sentEther",Ft={version:64,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=64;const r=function(e){var t;const r=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions;if((0,de.isPlainObject)(r))for(const e of Object.values(r))e.type===Ut&&(e.type=be.iU.simpleSend),e.history&&e.history.map((e=>(e.type&&e.type===Ut&&(e.type=be.iU.simpleSend),e)));return e}(t.data);return t.data=r,t}};const Bt={version:65,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=65;const r=function(e){if(e.PreferencesController){var t;const{completedOnboarding:r,firstTimeFlowType:s}=e.PreferencesController;e.OnboardingController=null!==(t=e.OnboardingController)&&void 0!==t?t:{},void 0!==r&&(e.OnboardingController.completedOnboarding=r,delete e.PreferencesController.completedOnboarding),void 0!==s&&(e.OnboardingController.firstTimeFlowType=s,delete e.PreferencesController.firstTimeFlowType)}return e}(t.data);return t.data=r,t}};let Gt,jt,Ht,$t,qt,Kt,Vt,Wt;!function(e){e.ledger="Ledger Hardware",e.trezor="Trezor Hardware",e.lattice="Lattice Hardware",e.qr="QR Hardware Wallet Device",e.hdKeyTree="HD Key Tree",e.imported="Simple Key Pair"}(Gt||(Gt={})),function(e){e.ledger="Ledger",e.trezor="Trezor",e.lattice="Lattice1",e.qr="QR"}(jt||(jt={})),function(e){e.ledger="ledger",e.trezor="trezor",e.lattice="lattice",e.qr="QR Hardware"}(Ht||(Ht={})),function(e){e.none="NONE",e.verified="VERIFIED",e.deviceOpenFailure="DEVICE_OPEN_FAILURE",e.unknownFailure="UNKNOWN_FAILURE"}($t||($t={})),function(e){e.ledger="https://shop.ledger.com/?r=17c4991a03fa",e.gridplus="https://gridplus.io/?afmc=7p",e.trezor="https://shop.trezor.io/product/trezor-one-black?offer_id=35&aff_id=11009",e.keystone="https://shop.keyst.one/?rfsn=6088257.656b3e9&utm_source=refersion&utm_medium=affiliate&utm_campaign=6088257.656b3e9",e.airgap="https://airgap.it/",e.coolwallet="https://www.coolwallet.io/",e.dcent="https://dcentwallet.com/"}(qt||(qt={})),function(e){e.ledger="https://support.ledger.com/hc/en-us/articles/4404366864657-Set-up-and-use-MetaMask-to-access-your-Ledger-Ethereum-ETH-account?docs=true",e.gridplus="https://docs.gridplus.io/setup/metamask",e.trezor="https://wiki.trezor.io/Apps:MetaMask",e.keystone="https://support.keyst.one/3rd-party-wallets/eth-and-web3-wallets-keystone/bind-metamask-with-keystone",e.airgap="https://support.airgap.it/guides/metamask/",e.coolwallet="https://www.coolwallet.io/metamask-step-by-step-guides/",e.dcent="https://medium.com/dcentwallet/dcent-wallet-now-supports-qr-based-protocol-to-link-with-metamask-57555f02603f"}(Kt||(Kt={})),function(e){e.live="ledgerLive",e.webhid="webhid",e.u2f="u2f"}(Vt||(Vt={})),function(e){e.connected="connected",e.notConnected="notConnected",e.unknown="unknown"}(Wt||(Wt={}));const Qt={version:66,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=66;const r=function(e){var t;const r=window.navigator.hid?Vt.webhid:Vt.u2f,s=Boolean(null===(t=e.PreferencesController)||void 0===t?void 0:t.useLedgerLive),n={...e,PreferencesController:{...null==e?void 0:e.PreferencesController,ledgerTransportType:s?Vt.live:r}};return delete n.PreferencesController.useLedgerLive,n}(t.data);return t.data=r,t}};var zt=r(44431),Yt=r.n(zt);const Xt=e=>new(Yt())(e||"0x0",16).gt(0),Jt={version:67,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=67;const r=function(e){var t,r,s;const n=(null==e?void 0:e.PreferencesController)||{},a=n.preferences||{};if(a.showTestNetworks)return e;const o=(null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions)||{},i=(null===(r=e.NetworkController)||void 0===r?void 0:r.provider)||{},c=(null===(s=e.CachedBalancesController)||void 0===s?void 0:s.cachedBalances)||{},l=Ct.mT.includes(null==i?void 0:i.chainId),d=Object.values(o).some((({chainId:e})=>Ct.mT.includes(e))),u=Ct.mT.some((e=>Object.values(c[e]||{}).some(Xt))),p=l||d||u;return{...e,PreferencesController:{...n,preferences:{...a,showTestNetworks:p}}}}(t.data);return t.data=r,t}};const Zt={version:68,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=68;const r=function(e){const{PermissionsController:t={},PermissionsMetadata:r={},...s}=e,{domainMetadata:n={},permissionsHistory:a={},permissionsLog:o=[]}=r;return{...s,PermissionController:er(t),PermissionLogController:{permissionActivityLog:o,permissionHistory:a},SubjectMetadataController:tr(n)}}(t.data);return t.data=r,t}};function er(e){const{domains:t={}}=e;return{subjects:Object.entries(t).reduce(((e,[t,r])=>{const{permissions:[s]}=r,n=s.caveats.find((e=>"exposedAccounts"===e.name)),a={...s,caveats:[{type:"restrictReturnedAccounts",value:n.value}]};return delete a["@context"],e[t]={origin:t,permissions:{eth_accounts:a}},e}),{})}}function tr(e){return{subjectMetadata:Object.entries(e).reduce(((e,[t,r])=>{const{name:s=null,icon:n=null,extensionId:a=null,...o}=r;return delete o.lastUpdated,delete o.host,t&&(e[t]={name:s,iconUrl:n,extensionId:a,...o,origin:t}),e}),{})}}var rr=r(68426);const sr={version:69,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=69;const r=function(e){var t;if("object"==typeof(null==e||null===(t=e.SubjectMetadataController)||void 0===t?void 0:t.subjectMetadata)){const{SubjectMetadataController:{subjectMetadata:t}}=e;Object.values(t).forEach((e=>{e&&"object"==typeof e&&!Array.isArray(e)&&(e.subjectType=e.extensionId?rr.SubjectType.Extension:rr.SubjectType.Website)}))}return e}(t.data);return t.data=r,t}};const nr={version:70,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=70;const r=function(e){var t;if(Array.isArray(null==e||null===(t=e.PermissionLogController)||void 0===t?void 0:t.permissionActivityLog)){const{PermissionLogController:{permissionActivityLog:t}}=e;t.forEach((e=>{e&&"object"==typeof e&&!Array.isArray(e)&&(delete e.request,delete e.response)}))}return e}(t.data);return t.data=r,t}};const ar={version:71,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=71;const r=function(e){e.NotificationController&&(e.AnnouncementController={announcements:e.NotificationController.notifications},delete e.NotificationController);return e}(t.data);return t.data=r,t}};const or={version:72,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=72;const r=function(e){const t=(null==e?void 0:e.PreferencesController)||{};return{...e,PreferencesController:{...t,knownMethodData:{}}}}(t.data);return t.data=r,t}};const ir={version:73,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=73;const r=function(e){const t=(null==e?void 0:e.PreferencesController)||{};return{...e,PreferencesController:{...t,knownMethodData:{}}}}(t.data);return t.data=r,t}};const cr=e=>new(Yt())(e||"0x0",16).gt(0),lr=["0x3","0x2a","0x4"],dr={"0x3":{rpcUrl:(0,Ct.RM)({network:"ropsten"}),nickname:"Ropsten",ticker:"RopstenETH"},"0x2a":{rpcUrl:(0,Ct.RM)({network:"kovan"}),nickname:"Kovan",ticker:"KovanETH"},"0x4":{rpcUrl:(0,Ct.RM)({network:"rinkeby"}),nickname:"Rinkeby",ticker:"RinkebyETH"}},ur={version:74,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=74;const r=function(e){var t,r,s;const n=(null==e?void 0:e.PreferencesController)||{},a=n.preferences||{},o=(null==e?void 0:e.NetworkController)||{},i=(null==o?void 0:o.provider)||{},c=lr.filter((e=>e===(null==i?void 0:i.chainId)));if(!a.showTestNetworks&&0===c.length)return e;const l=(null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions)||{},d=(null===(r=e.CachedBalancesController)||void 0===r?void 0:r.cachedBalances)||{},u=Object.values(l).filter((({chainId:e})=>lr.includes(e))).map((({chainId:e})=>e)),p=lr.filter((e=>Object.values(d[e]||{}).some(cr))),h=(0,de.uniq)([...p,...u,...c]),g=null!==(s=n.frequentRpcListDetail)&&void 0!==s?s:[];h.forEach((e=>{g.find((t=>t.chainId===e))||g.unshift({rpcUrl:dr[e].rpcUrl,chainId:e,ticker:dr[e].ticker,nickname:dr[e].nickname,rpcPrefs:{}})})),g.length&&(n.frequentRpcListDetail=g);if(c.length){const e=c[0];o.provider={...o.provider,type:"rpc",rpcUrl:dr[e].rpcUrl,chainId:e,nickname:dr[e].nickname,ticker:dr[e].ticker}}return{...e,PreferencesController:{...n},NetworkController:{...o}}}(t.data);return t.data=r,t}};const pr={version:75,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=75;const r=function(e){return delete e.ThreeBoxController,e}(t.data);return t.data=r,t}};const hr={version:76,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=76;const r=function(e){var t;if(e.CollectiblesController){const{allCollectibleContracts:t,allCollectibles:r,ignoredCollectibles:s,...n}=e.CollectiblesController;e.NftController={...t?{allNftContracts:t}:{},...r?{allNfts:r}:{},...s?{ignoredNfts:s}:{},...n},delete e.CollectiblesController}null!==(t=e.PreferencesController)&&void 0!==t&&t.useCollectibleDetection&&(e.PreferencesController.useNftDetection=e.PreferencesController.useCollectibleDetection,delete e.PreferencesController.useCollectibleDetection);return e}(t.data);return t.data=r,t}};const gr={version:77,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=77;const r=function(e){const t=(null==e?void 0:e.TokenListController)||{},{tokensChainsCache:r}=t;let s,n;for(const e in r){if(s=r[e].data,n={},Array.isArray(s))for(const e of s)n[e.address]=e;else if(Object.keys(s)[0].toLowerCase()!==s[Object.keys(s)[0]].address.toLowerCase())for(const e in s)n[s[e].address]=s[e];r[e].data=Object.keys(n).length>0?n:s}return t.tokensChainsCache=r,{...e,TokenListController:{...t}}}(t.data);return t.data=r,t}};const mr={version:78,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=78;const r=function(e){var t,r;void 0!==(null==e||null===(t=e.AppStateController)||void 0===t?void 0:t.collectiblesDetectionNoticeDismissed)&&delete e.AppStateController.collectiblesDetectionNoticeDismissed;void 0!==(null==e||null===(r=e.metamask)||void 0===r?void 0:r.collectiblesDropdownState)&&delete e.metamask.collectiblesDropdownState;return e}(t.data);return t.data=r,t}};const fr={version:79,async migrate(e){const t=(0,de.cloneDeep)(e);t.meta.version=79;const r=function(e){var t;void 0!==(null==e||null===(t=e.metamask)||void 0===t?void 0:t.showPortfolioTooltip)&&delete e.metamask.showPortfolioTooltip;return e}(t.data);return t.data=r,t}};const vr=[ue,pe,he,ge,me,fe,ve,ye,Ce,Se,Te,we,ke,Pe,Me,Ee,Ne,xe,Re,Oe,Le,De,Ue,Be,Ge,je,He,$e,qe,Ke,Ve,We,Qe,ze,Ye,Je,Ze,st,nt,at,ot,it,ct,lt,ut,pt,ht,ft,yt,St,Tt,wt,bt,Pt,Et,It,_t,Nt,Rt,Ot,Lt,Dt,Ft,Bt,Qt,Jt,Zt,sr,nr,ar,or,ir,ur,pr,hr,gr,mr,fr];class yr extends(n()){constructor(e={}){super();const t=e.migrations||[];this.migrations=t.sort(((e,t)=>e.version-t.version));const r=this.migrations.slice(-1)[0];this.defaultVersion=e.defaultVersion||r&&r.version||0}async migrateData(e=this.generateInitialState()){const t=this.migrations.filter((function(t){return t.version>e.meta.version}));for(const r of t)try{const t=await r.migrate(e);if(!t.data)throw new Error("Migrator - migration returned empty data");if(void 0!==t.version&&t.meta.version!==r.version)throw new Error("Migrator - Migration did not update version number correctly");e=t}catch(t){const s=t.message;return t.message=`MetaMask Migration Error #${r.version}: ${s}`,this.emit("error",t),e}return e}generateInitialState(e){return{meta:{version:this.defaultVersion},data:e}}}var Cr=r(3178),Sr=r(71371);var Tr=r(13439);function wr(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const kr=(0,Tr.Z)();var br=r(5403),Pr=r(88473),Mr=r(3812),Er=r.n(Mr);class Ar extends Pr.Writable{constructor(e,t){super({objectMode:!0,...t}),this._asyncWriteFn=e}_write(e,t,r){Er()(this._asyncWriteFn(e,t))(r)}}var Ir=r(37253),_r=r.n(Ir);const Nr="onPopupClosed";class xr extends(_r()){constructor(){super(),this.platform=new Cr.Z,this.platform.addOnRemovedListener(this._onWindowClosed.bind(this))}markAsAutomaticallyClosed(){this._popupAutomaticallyClosed=!0}async showPopup(){const e=await this._getPopup();if(e)await this.platform.focusWindow(e.id);else{let e=0,t=0;try{const r=await this.platform.getLastFocusedWindow();t=r.top,e=r.left+(r.width-360)}catch(r){const{screenX:s,screenY:n,outerWidth:a}=window;t=Math.max(n,0),e=Math.max(s+(a-360),0)}const r=await this.platform.openWindow({url:"notification.html",type:"popup",width:360,height:620,left:e,top:t});r.left!==e&&"fullscreen"!==r.state&&await this.platform.updateWindowPosition(r.id,e,t),this._popupId=r.id}}_onWindowClosed(e){e===this._popupId&&(this._popupId=void 0,this.emit(Nr,{automaticallyClosed:this._popupAutomaticallyClosed}),this._popupAutomaticallyClosed=void 0)}async _getPopup(){const e=await this.platform.getAllWindows();return this._getPopupIn(e)}_getPopupIn(e){return e?e.find((e=>e&&"popup"===e.type&&e.id===this._popupId)):null}}var Rr=r(97969),Or=r(88625),Lr=r(48758),Dr=r(22140),Ur=r(67991),Fr=r(84017),Br=r(92532),Gr=r.n(Br),jr=r(52696),Hr=r.n(jr),$r=r(2480),qr=r.n($r),Kr=r(48056),Vr=r(75682),Wr=r.n(Vr),Qr=r(51496),zr=r.n(Qr),Yr=r(79864),Xr=r(55648),Jr=r(74198),Zr=r(40571),es=r(53326),ts=r(21153),rs=r(90004),ss=r(47097),ns=r(51218),as=r(73371),os=r(35923),is=r.n(os),cs=r(55224);const ls={MetaMask:"https://github.com/metamask/eth-phishing-detect/issues/new",PhishFort:"https://github.com/phishfort/phishfort-lists/issues/new"};var ds=r(74530),us=r(32426);const ps={1:{id:1,date:"2021-03-17",image:{src:"images/mobile-link-qr.svg",height:"230px",width:"230px",placeImageBelowDescription:!0}},3:{id:3,date:"2021-03-08"},4:{id:4,date:"2021-05-11",image:{src:"images/source-logos-bsc.svg",width:"100%"}},5:{id:5,date:"2021-06-09"},6:{id:6,date:"2021-05-26"},7:{id:7,date:"2021-09-17"},8:{id:8,date:"2021-11-01"},9:{id:9,date:"2021-12-07",image:{src:"images/txinsights.png",width:"80%"}},10:{id:10,date:"2022-09-15",image:{src:"images/token-detection.svg",width:"100%"}},11:{id:11,date:"2022-09-15"},12:{id:12,date:"2022-05-18",image:{src:"images/darkmode-banner.png",width:"100%"}},13:{id:13,date:"2022-09-15"},14:{id:14,date:"2022-09-15"},15:{id:15,date:"2022-09-15"},17:{id:17,date:null}};function hs(e,t){return"string"==typeof e&&"string"==typeof t&&e.toLowerCase()===t.toLowerCase()}var gs=r(22751),ms=r(8198),fs=r(8735),vs=r(97283);const ys=new ms.vU(fs.abiERC20),Cs=new ms.vU(fs.abiERC721),Ss=new ms.vU(fs.abiERC1155);function Ts(e,t,r){return void 0!==e.chainId?e.chainId===t:e.metamaskNetworkId===r}function ws(e){var t,r;return(0,gs.isHexString)(null==e||null===(t=e.txParams)||void 0===t?void 0:t.maxFeePerGas)&&(0,gs.isHexString)(null==e||null===(r=e.txParams)||void 0===r?void 0:r.maxPriorityFeePerGas)}function ks(e){try{return ys.parseTransaction({data:e})}catch{}try{return Cs.parseTransaction({data:e})}catch{}try{return Ss.parseTransaction({data:e})}catch{}}async function bs(e,t){const{data:r,to:s}=e;let n,a,o;try{({name:n}=r&&ks(r))}catch(e){p().debug("Failed to parse transaction data.",e,r)}if(r&&!s)a=be.iU.deployContract;else{const{contractCode:i,isContractAddress:c}=await(0,vs.N)(t,s);if(o=i,c){const t=[be.iU.tokenMethodApprove,be.iU.tokenMethodSetApprovalForAll,be.iU.tokenMethodTransfer,be.iU.tokenMethodTransferFrom,be.iU.tokenMethodSafeTransferFrom].find((e=>hs(e,n))),s=e.value&&"0x0"!==e.value&&t===be.iU.tokenMethodApprove;a=r&&t&&!s?t:be.iU.contractInteraction}else a=be.iU.simpleSend}return{type:a,getCodeResponse:o}}const Ps=[be.iU.tokenMethodApprove,be.iU.tokenMethodSetApprovalForAll,be.iU.tokenMethodTransfer,be.iU.tokenMethodTransferFrom,be.iU.contractInteraction,be.iU.simpleSend];var Ms=r(3552);Object.keys(Ms).map((e=>e.toLowerCase()));const Es=Object.keys(Ms).reduce(((e,t)=>{const{logo:r,...s}=Ms[t];return{...e,[t.toLowerCase()]:{...s,address:t.toLowerCase(),iconUrl:`images/contract/${r}`,aggregators:[]}}}),{});new(Yt())(2).pow(256).minus(1).toString(10);var As=r(63504),Is=r(72988),_s=r(67193);function Ns(e){return new _s.D(e,10,Is.E.GWEI).toBase(16).toDenomination(Is.E.WEI).toString()}function xs(e){return new _s.D(e,16,Is.E.WEI).toDenomination(Is.E.ETH).toBase(10).toString()}function Rs(e){return(0,gs.addHexPrefix)(e.toString(16))}function Os(e){return new _s.D(e,16,Is.E.WEI).toBase(10).toDenomination(Is.E.GWEI).toString()}function Ls(e){return new _s.D(e,10).toBase(16).toString()}function Ds(e){return new _s.D(e,16).toBase(10).toString()}const Us="main"===process.env.METAMASK_BUILD_TYPE,Fs="flask"===process.env.METAMASK_BUILD_TYPE,Bs="isRunning",Gs=e=>{e===Bs&&console.warn("Warning! You have multiple instances of MetaMask running!")};function js(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class Hs extends m.ObservableStore{constructor({config:e,controllerMessenger:t,state:r,persist:s}){super(r),js(this,"config",{}),this.persist=s,this.controllerMessenger=t,e&&this.updateStructure(e)}updateStructure(e){this.config=e,this.removeAllListeners();for(const t of Object.keys(e)){if(!e[t])throw new Error(`Undefined '${t}'`);const r=e[t];r.subscribe?e[t].subscribe((e=>{this.updateState({[t]:e})})):this.controllerMessenger.subscribe(`${r.name}:stateChange`,(r=>{let s=r;this.persist&&(s=(0,Jr.getPersistentState)(r,e[t].metadata)),this.updateState({[t]:s})}))}}getFlatState(){if(!this.config)return{};let e={};for(const t of Object.keys(this.config)){const r=this.config[t],s=r.getState?r.getState():r.state;e={...e,...s}}return e}}var $s=r(12352),qs=r.n($s),Ks=r(241),Vs=r(68945),Ws=r(45875),Qs=r.n(Ws);class zs{constructor(e={}){const t={accounts:{},currentBlockGasLimit:""};this.store=new m.ObservableStore(t),this.resetState=()=>{this.store.updateState(t)},this._provider=e.provider,this._query=qs()(new(Wr())(this._provider)),this._blockTracker=e.blockTracker,this._currentBlockNumber=this._blockTracker.getCurrentBlock(),this._blockTracker.once("latest",(e=>{this._currentBlockNumber=e})),this._updateForBlock=this._updateForBlock.bind(this),this.getCurrentChainId=e.getCurrentChainId,this.getNetworkIdentifier=e.getNetworkIdentifier,this.preferencesController=e.preferencesController,this.onboardingController=e.onboardingController,this.onboardingController.store.subscribe((0,Fe.HB)((async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:s}=t;!r&&s&&this._updateAccounts()}),this.onboardingController.store.getState())),this.preferencesController.store.subscribe((0,Fe.HB)((async(e,t)=>{const{selectedAddress:r}=e,{selectedAddress:s,useMultiAccountBalanceChecker:n}=t;r===s||n||this._updateAccounts()}),this.onboardingController.store.getState())),this.ethersProvider=new Ks.Q(this._provider)}start(){this._blockTracker.removeListener("latest",this._updateForBlock),this._blockTracker.addListener("latest",this._updateForBlock),this._updateAccounts()}stop(){this._blockTracker.removeListener("latest",this._updateForBlock)}syncWithAddresses(e){const{accounts:t}=this.store.getState(),r=Object.keys(t),s=[];e.forEach((e=>{r.includes(e)||s.push(e)}));const n=[];r.forEach((t=>{e.includes(t)||n.push(t)})),this.addAccounts(s),this.removeAccount(n)}addAccounts(e){const{accounts:t}=this.store.getState();e.forEach((e=>{t[e]={}})),this.store.updateState({accounts:t}),this._currentBlockNumber&&this._updateAccounts()}removeAccount(e){const{accounts:t}=this.store.getState();e.forEach((e=>{delete t[e]})),this.store.updateState({accounts:t})}clearAccounts(){this.store.updateState({accounts:{}})}async _updateForBlock(e){this._currentBlockNumber=e;const t=await this._query.getBlockByNumber(e,!1);if(!t)return;const r=t.gasLimit;this.store.updateState({currentBlockGasLimit:r});try{await this._updateAccounts()}catch(e){p().error(e)}}async _updateAccounts(){const{completedOnboarding:e}=this.onboardingController.store.getState();if(!e)return;const{useMultiAccountBalanceChecker:t}=this.preferencesController.store.getState();let r=[];if(t){const{accounts:e}=this.store.getState();r=Object.keys(e)}else{r=[this.preferencesController.getSelectedAddress()]}const s=this.getCurrentChainId(),n=this.getNetworkIdentifier();if(n===Ct.Jz||"http://127.0.0.1:8545"===n)await Promise.all(r.map(this._updateAccount.bind(this)));else switch(s){case Ct.vo.MAINNET:await this._updateAccountsViaBalanceChecker(r,"0xb1f8e55c7f64d203c1400b9d8555d050f94adf39");break;case Ct.vo.GOERLI:await this._updateAccountsViaBalanceChecker(r,"0x9788C4E93f9002a7ad8e72633b11E8d1ecd51f9b");break;case Ct.vo.SEPOLIA:await this._updateAccountsViaBalanceChecker(r,"");break;case Ct.vo.BSC:await this._updateAccountsViaBalanceChecker(r,"0x2352c63A83f9Fd126af8676146721Fa00924d7e4");break;case Ct.vo.OPTIMISM:await this._updateAccountsViaBalanceChecker(r,"0xB1c568e9C3E6bdaf755A60c7418C269eb11524FC");break;case Ct.vo.POLYGON:await this._updateAccountsViaBalanceChecker(r,"0x2352c63A83f9Fd126af8676146721Fa00924d7e4");break;case Ct.vo.AVALANCHE:await this._updateAccountsViaBalanceChecker(r,"0xD023D153a0DFa485130ECFdE2FAA7e612EF94818");break;case Ct.vo.FANTOM:await this._updateAccountsViaBalanceChecker(r,"0x07f697424ABe762bB808c109860c04eA488ff92B");break;case Ct.vo.ARBITRUM:await this._updateAccountsViaBalanceChecker(r,"0x151E24A486D7258dd7C33Fb67E4bB01919B7B32c");break;default:await Promise.all(r.map(this._updateAccount.bind(this)))}}async _updateAccount(e){const{useMultiAccountBalanceChecker:t}=this.preferencesController.store.getState();let r="0x0";try{r=await this._query.getBalance(e)}catch(e){var s,n;if("eth_getBalance"!==(null===(s=e.data)||void 0===s||null===(n=s.request)||void 0===n?void 0:n.method))throw e}const a={address:e,balance:r},{accounts:o}=this.store.getState();if(!o[e])return;let i=o;t||(i={},Object.keys(o).forEach((t=>{e!==t&&(i[t]={address:t,balance:null})}))),i[e]=a,this.store.updateState({accounts:i})}async _updateAccountsViaBalanceChecker(e,t){const{accounts:r}=this.store.getState(),s={};Object.keys(r).forEach((t=>{e.includes(t)||(s[t]={address:t,balance:null})})),this.ethersProvider=new Ks.Q(this._provider);const n=await new Vs.Contract(t,Qs(),this.ethersProvider),a=["0x0000000000000000000000000000000000000000"];try{const t=await n.balances(e,a);e.forEach(((e,r)=>{const n=t[r]?t[r].toHexString():"0x0";s[e]={address:e,balance:n}})),this.store.updateState({accounts:s})}catch(t){p().warn("MetaMask - Account Tracker single call balance fetch failed",t),Promise.all(e.map(this._updateAccount.bind(this)))}}}var Ys=r(66832),Xs=r(64728),Js=r(80481),Zs=r.n(Js);function en(e){return Number.isSafeInteger(e)&&e>0&&e<=Ct.V$}function tn(e){return"string"==typeof e&&/^0x[1-9a-f]+[0-9a-f]*$/iu.test(e)}var rn=r(60751);const sn={methodNames:[C.C7.ADD_ETHEREUM_CHAIN],implementation:async function(e,t,r,s,{addCustomRpc:n,getCurrentChainId:a,getCurrentRpcUrl:o,findCustomRpcBy:i,updateRpcTarget:c,requestUserApproval:l,sendMetrics:d}){var u;if(null===(u=e.params)||void 0===u||!u[0]||"object"!=typeof e.params[0])return s(y.ethErrors.rpc.invalidParams({message:`Expected single, object parameter. Received:\n${JSON.stringify(e.params)}`}));const{origin:p}=e,{chainId:h,chainName:g=null,blockExplorerUrls:m=null,nativeCurrency:f=null,rpcUrls:v}=e.params[0],S=Object.keys((0,de.omit)(e.params[0],["chainId","chainName","blockExplorerUrls","iconUrls","rpcUrls","nativeCurrency"]));if(S.length>0)return s(y.ethErrors.rpc.invalidParams({message:`Received unexpected keys on object parameter. Unsupported keys:\n${S}`}));const T=e=>{try{const t=new URL(e);return"localhost"===t.hostname||"127.0.0.1"===t.hostname}catch(e){return!1}},w=Array.isArray(v)?v.find((e=>T(e)||Zs().isHttpsUri(e))):null,k=null!==m&&Array.isArray(m)?m.find((e=>T(e)||Zs().isHttpsUri(e))):null;if(!w)return s(y.ethErrors.rpc.invalidParams({message:`Expected an array with at least one valid string HTTPS url 'rpcUrls', Received:\n${v}`}));if(null!==m&&!k)return s(y.ethErrors.rpc.invalidParams({message:`Expected null or array with at least one valid string HTTPS URL 'blockExplorerUrl'. Received: ${m}`}));const b="string"==typeof h&&h.toLowerCase();if(!tn(b))return s(y.ethErrors.rpc.invalidParams({message:`Expected 0x-prefixed, unpadded, non-zero hexadecimal string 'chainId'. Received:\n${h}`}));if(!en(parseInt(b,16)))return s(y.ethErrors.rpc.invalidParams({message:`Invalid chain ID "${b}": numerical value greater than max safe value. Received:\n${h}`}));const P=i({chainId:b});if(P&&P.rpcUrl===w){t.result=null;const e=a(),r=o();if(e===b&&r===w)return s();try{await c(await l({origin:p,type:C.C7.SWITCH_ETHEREUM_CHAIN,requestData:{rpcUrl:P.rpcUrl,chainId:P.chainId,nickname:P.nickname,ticker:P.ticker}})),t.result=null}catch(e){if(e.code!==y.errorCodes.provider.userRejectedRequest)return s(e)}return s()}let M;try{M=await(0,rn.v)(w,"eth_chainId")}catch(e){return s(y.ethErrors.rpc.internal({message:`Request for method 'eth_chainId on ${w} failed`,data:{networkErr:e}}))}if(b!==M)return s(y.ethErrors.rpc.invalidParams({message:`Chain ID returned by RPC URL ${w} does not match ${b}`,data:{chainId:M}}));if("string"!=typeof g||!g)return s(y.ethErrors.rpc.invalidParams({message:`Expected non-empty string 'chainName'. Received:\n${g}`}));const E=g.length>100?g.substring(0,100):g;if(null!==f){if("object"!=typeof f||Array.isArray(f))return s(y.ethErrors.rpc.invalidParams({message:`Expected null or object 'nativeCurrency'. Received:\n${f}`}));if(18!==f.decimals)return s(y.ethErrors.rpc.invalidParams({message:`Expected the number 18 for 'nativeCurrency.decimals' when 'nativeCurrency' is provided. Received: ${f.decimals}`}));if(!f.symbol||"string"!=typeof f.symbol)return s(y.ethErrors.rpc.invalidParams({message:`Expected a string 'nativeCurrency.symbol'. Received: ${f.symbol}`}))}const A=(null==f?void 0:f.symbol)||C.hQ;if(A!==C.hQ&&("string"!=typeof A||A.length<2||A.length>6))return s(y.ethErrors.rpc.invalidParams({message:`Expected 2-6 character string 'nativeCurrency.symbol'. Received:\n${A}`}));if(P&&P.chainId===b&&P.ticker!==A)return s(y.ethErrors.rpc.invalidParams({message:`nativeCurrency.symbol does not match currency symbol for a network the user already has added with the same chainId. Received:\n${A}`}));try{await n(await l({origin:p,type:C.C7.ADD_ETHEREUM_CHAIN,requestData:{chainId:b,blockExplorerUrl:k,chainName:E,rpcUrl:w,ticker:A}})),d({event:"Custom Network Added",category:re.NETWORK,referrer:{url:p},properties:{chain_id:b,symbol:A,source:se.TRANSACTION.DAPP}}),t.result=null}catch(e){return s(e)}try{await c(await l({origin:p,type:C.C7.SWITCH_ETHEREUM_CHAIN,requestData:{rpcUrl:w,chainId:b,nickname:E,ticker:A}}))}catch(e){if(e.code!==y.errorCodes.provider.userRejectedRequest)return s(e)}return s()},hookNames:{addCustomRpc:!0,getCurrentChainId:!0,getCurrentRpcUrl:!0,findCustomRpcBy:!0,updateRpcTarget:!0,requestUserApproval:!0,sendMetrics:!0}};const nn={methodNames:[C.C7.ETH_ACCOUNTS],implementation:async function(e,t,r,s,{getAccounts:n}){return t.result=await n(),s()},hookNames:{getAccounts:!0}};const an={methodNames:[C.C7.GET_PROVIDER_STATE],implementation:async function(e,t,r,s,{getProviderState:n}){return t.result={...await n(e.origin)},s()},hookNames:{getProviderState:!0}};const on={methodNames:[C.C7.LOG_WEB3_SHIM_USAGE],implementation:function(e,t,r,s,{sendMetrics:n,getWeb3ShimUsageState:a,setWeb3ShimUsageRecorded:o}){const{origin:i}=e;void 0===a(i)&&(o(i),n({event:"Website Accessed window.web3 Shim",category:re.INPAGE_PROVIDER,referrer:{url:i}},{excludeMetaMetricsId:!0}));return t.result=!0,s()},hookNames:{sendMetrics:!0,getWeb3ShimUsageState:!0,setWeb3ShimUsageRecorded:!0}};const cn={methodNames:[C.C7.ETH_REQUEST_ACCOUNTS],implementation:async function(e,t,r,s,{origin:n,getAccounts:a,getUnlockPromise:o,hasPermission:i,requestAccountsPermission:c}){if(ln.has(n))return t.error=y.ethErrors.rpc.resourceUnavailable(`Already processing ${C.C7.ETH_REQUEST_ACCOUNTS}. Please wait.`),s();if(i(C.C7.ETH_ACCOUNTS)){try{ln.add(n),await o(!0),t.result=await a(),s()}catch(e){s(e)}finally{ln.delete(n)}return}try{await c()}catch(e){return t.error=e,s()}const l=await a();l.length>0?t.result=l:t.error=y.ethErrors.rpc.internal("Accounts unexpectedly unavailable. Please report this bug.");return s()},hookNames:{origin:!0,getAccounts:!0,getUnlockPromise:!0,hasPermission:!0,requestAccountsPermission:!0}},ln=new Set;const dn=[...[sn,nn,an,on,cn,{methodNames:[C.C7.SEND_METADATA],implementation:function(e,t,r,s,{addSubjectMetadata:n,subjectType:a}){const{origin:o,params:i}=e;if(!i||"object"!=typeof i||Array.isArray(i))return s(y.ethErrors.rpc.invalidParams({data:i}));{const{icon:e=null,name:t=null,...r}=i;n({...r,iconUrl:e,name:t,subjectType:a,origin:o})}return t.result=!0,s()},hookNames:{addSubjectMetadata:!0,subjectType:!0}},{methodNames:[C.C7.SWITCH_ETHEREUM_CHAIN],implementation:async function(e,t,r,s,{getCurrentChainId:n,findCustomRpcBy:a,setProviderType:o,updateRpcTarget:i,requestUserApproval:c}){var l;if(null===(l=e.params)||void 0===l||!l[0]||"object"!=typeof e.params[0])return s(y.ethErrors.rpc.invalidParams({message:`Expected single, object parameter. Received:\n${JSON.stringify(e.params)}`}));const{origin:d}=e,{chainId:u}=e.params[0],p=Object.keys((0,de.omit)(e.params[0],["chainId"]));if(p.length>0)return s(y.ethErrors.rpc.invalidParams({message:`Received unexpected keys on object parameter. Unsupported keys:\n${p}`}));const h="string"==typeof u&&u.toLowerCase();if(!tn(h))return s(y.ethErrors.rpc.invalidParams({message:`Expected 0x-prefixed, unpadded, non-zero hexadecimal string 'chainId'. Received:\n${u}`}));if(!en(parseInt(h,16)))return s(y.ethErrors.rpc.invalidParams({message:`Invalid chain ID "${h}": numerical value greater than max safe value. Received:\n${u}`}));const g=function(e,t){if(e in Ct.QB)return{chainId:e,ticker:Ct.CE.ETH,nickname:Ct.kW[e],rpcUrl:Ct.By[e],type:Ct.QB[e]};return t({chainId:e})}(h,a);if(g){if(n()===h)return t.result=null,s();try{const e=await c({origin:d,type:C.C7.SWITCH_ETHEREUM_CHAIN,requestData:g});u in Ct.QB&&e.type!==Ct.Qv.LOCALHOST?o(e.type):await i(e),t.result=null}catch(e){return s(e)}return s()}return s(y.ethErrors.provider.custom({code:4902,message:`Unrecognized chain ID "${u}". Try adding the chain using ${C.C7.ADD_ETHEREUM_CHAIN} first.`}))},hookNames:{getCurrentChainId:!0,findCustomRpcBy:!0,setProviderType:!0,updateRpcTarget:!0,requestUserApproval:!0}},{methodNames:[C.C7.WATCH_ASSET,C.C7.WATCH_ASSET_LEGACY],implementation:async function(e,t,r,s,{handleWatchAssetRequest:n}){try{const{options:r,type:a}=e.params,o=await n(r,a);return await o.result,t.result=!0,s()}catch(e){return"User rejected to watch the asset."===e.message?s(y.ethErrors.provider.userRejectedRequest()):s(e)}},hookNames:{handleWatchAssetRequest:!0}},{methodNames:[C.C7.ENABLE_DESKTOP],implementation:async function(e,t,r,s,{testDesktopConnection:n,generateOtp:a}){const o=await n(),i=o.isConnected?await a():void 0;return t.result={...o,otp:i},s()},hookNames:{testDesktopConnection:!0,generateOtp:!0}}],...ss.permissionRpcMethods.handlers],un=dn.reduce(((e,t)=>{for(const r of t.methodNames)e.set(r,t);return e}),new Map),pn=Array.from(new Set((0,de.flatten)(dn.map((({hookNames:e})=>Object.keys(e))))).values());const hn=Ys.handlers.reduce(((e,t)=>{for(const r of t.methodNames)e.set(r,t);return e}),new Map);var gn=r(78117),mn=r(74971),fn=r.n(mn),vn=r(88189),yn=r.n(vn);class Cn{static getNetworkEnsSupport(e){return Boolean(yn()[e])}constructor({network:e,provider:t}={}){const r=Ct.IT[e],s=yn()[e],n=new Ks.Q(t,{chainId:parseInt(e,10),name:r,ensAddress:s});this._ethProvider=n}lookup(e){return this._ethProvider.resolveName(e)}reverse(e){return this._ethProvider.lookupAddress(e)}}class Sn{constructor({ens:e,provider:t,onNetworkDidChange:r,getCurrentChainId:s}={}){const n={ensResolutionsByAddress:{}};if(this._ens=e,!this._ens){const e=s(),r=Ct.fI[e];Cn.getNetworkEnsSupport(r)&&(this._ens=new Cn({network:r,provider:t}))}this.store=new m.ObservableStore(n),this.resetState=()=>{this.store.updateState(n)},r((()=>{this.store.putState(n);const e=s(),r=Ct.fI[e];Cn.getNetworkEnsSupport(r)?this._ens=new Cn({network:r,provider:t}):delete this._ens}))}reverseResolveAddress(e){return this._reverseResolveAddress((0,et.QG)(e))}async _reverseResolveAddress(e){if(!this._ens)return;const t=this.store.getState();if(t.ensResolutionsByAddress[e])return t.ensResolutionsByAddress[e];let r,s;try{r=await this._ens.reverse(e)}catch(e){return void p().debug(e)}try{s=await this._ens.lookup(r)}catch(e){return void p().debug(e)}return"0x0000000000000000000000000000000000000000"!==s&&"0x"!==s&&(0,et.QG)(s)===e?(this._updateResolutionsByAddress(e,fn().toASCII(r)),r):void 0}_updateResolutionsByAddress(e,t){const r=this.store.getState();this.store.putState({ensResolutionsByAddress:{...r.ensResolutionsByAddress,[e]:t}})}}var Tn=r(48583),wn=r(73620),kn=r(98406),bn=r.n(kn),Pn=r(68961),Mn=r.n(Pn),En=r(68609),An=r(6842);function In({network:e}){if(!Ct.Jl[e])throw new Error(`createInfuraClient - unknown network "${e}"`);const{chainId:t,networkId:r}=Ct.Jl[e];return(0,Or.createScaffoldMiddleware)({eth_chainId:t,net_version:r})}function _n(e){return(t,r,s,n)=>"eth_chainId"===t.method?(r.result=e,n()):s()}const Nn=process.env.METAMASK_ENV,xn=(0,Tr.Z)();let Rn;Rn=process.env.IN_TEST?{type:Ct.Qv.RPC,rpcUrl:"http://localhost:8545",chainId:"0x539",nickname:"Localhost 8545"}:process.env.METAMASK_DEBUG||"test"===Nn?{type:Ct.Qv.GOERLI,chainId:Ct.vo.GOERLI,ticker:Ct.VL.GOERLI}:{type:Ct.Qv.MAINNET,chainId:Ct.vo.MAINNET};const On={ticker:"ETH",...Rn},Ln={EIPS:{1559:void 0}},Dn="networkDidChange",Un="networkWillChange",Fn="infuraIsBlocked",Bn="infuraIsUnblocked";class Gn extends(n()){constructor({state:e={},infuraProjectId:t}={}){if(super(),this.providerStore=new m.ObservableStore(e.provider||{...On}),this.previousProviderStore=new m.ObservableStore(this.providerStore.getState()),this.networkStore=new m.ObservableStore("loading"),this.networkDetails=new m.ObservableStore(e.networkDetails||{...Ln}),this.store=new m.ComposedStore({provider:this.providerStore,previousProviderStore:this.previousProviderStore,network:this.networkStore,networkDetails:this.networkDetails}),this._provider=null,this._blockTracker=null,this._providerProxy=null,this._blockTrackerProxy=null,!t||"string"!=typeof t)throw new Error("Invalid Infura project ID");this._infuraProjectId=t,this.on(Dn,(()=>{this.lookupNetwork()}))}async destroy(){var e;await(null===(e=this._blockTracker)||void 0===e?void 0:e.destroy())}async initializeProvider(){const{type:e,rpcUrl:t,chainId:r}=this.providerStore.getState();this._configureProvider({type:e,rpcUrl:t,chainId:r}),await this.lookupNetwork()}getProviderAndBlockTracker(){return{provider:this._providerProxy,blockTracker:this._blockTrackerProxy}}async getEIP1559Compatibility(){const{EIPS:e}=this.networkDetails.getState();if(void 0!==e[1559])return e[1559];const t=await this._getLatestBlock(),r=t&&void 0!==t.baseFeePerGas;return this._setNetworkEIPSupport(1559,r),r}async lookupNetwork(){if(!this._provider)return void p().warn("NetworkController - lookupNetwork aborted due to missing provider");const{chainId:e}=this.providerStore.getState();if(!e)return p().warn("NetworkController - lookupNetwork aborted due to missing chainId"),this._setNetworkState("loading"),void this._clearNetworkDetails();const t=this.networkStore.getState(),{type:r}=this.providerStore.getState();let s,n;Ct.Sf.includes(r)?this._checkInfuraAvailability(r):this.emit(Bn);try{s=await this._getNetworkId()}catch(e){n=e}t===this.networkStore.getState()&&(n?(this._setNetworkState("loading"),this._clearNetworkDetails()):(this._setNetworkState(s),await this.getEIP1559Compatibility()))}setRpcTarget(e,t,r="ETH",s="",n){Tn.strict.ok(tn(t),`Invalid chain ID "${t}": invalid hex string.`),Tn.strict.ok(en(parseInt(t,16)),`Invalid chain ID "${t}": numerical value greater than max safe value.`),this._setProviderConfig({type:Ct.Qv.RPC,rpcUrl:e,chainId:t,ticker:r,nickname:s,rpcPrefs:n})}setProviderType(e){Tn.strict.notStrictEqual(e,Ct.Qv.RPC,`NetworkController - cannot call "setProviderType" with type "${Ct.Qv.RPC}". Use "setRpcTarget"`),Tn.strict.ok(Ct.Sf.includes(e),`Unknown Infura provider type "${e}".`);const{chainId:t,ticker:r}=Ct.Jl[e];this._setProviderConfig({type:e,rpcUrl:"",chainId:t,ticker:null!=r?r:"ETH",nickname:""})}resetConnection(){this._setProviderConfig(this.providerStore.getState())}rollbackToPreviousProvider(){const e=this.previousProviderStore.getState();this.providerStore.updateState(e),this._switchNetwork(e)}async _getNetworkId(){const e=new(Wr())(this._provider);return await new Promise(((t,r)=>{e.sendAsync({method:"net_version"},((e,s)=>{e?r(e):t(s)}))}))}_getLatestBlock(){return new Promise(((e,t)=>{const{provider:r}=this.getProviderAndBlockTracker();new(Wr())(r).sendAsync({method:"eth_getBlockByNumber",params:["latest",!1]},((r,s)=>r?t(r):e(s)))}))}_setNetworkState(e){this.networkStore.putState(e)}_setNetworkEIPSupport(e,t){this.networkDetails.updateState({EIPS:{[e]:t}})}_clearNetworkDetails(){this.networkDetails.putState({...Ln})}_setProviderConfig(e){this.previousProviderStore.updateState(this.providerStore.getState()),this.providerStore.updateState(e),this._switchNetwork(e)}async _checkInfuraAvailability(e){const t=`https://${e}.infura.io/v3/${this._infuraProjectId}`;let r=!1;this.once(Dn,(()=>{r=!0}));try{const e=await xn(t,{method:"POST",body:JSON.stringify({jsonrpc:"2.0",method:"eth_blockNumber",params:[],id:1})});if(r)return;if(e.ok)this.emit(Bn);else{const t=await e.json();if(r)return;t.error===Ct.b0&&this.emit(Fn)}}catch(e){p().warn("MetaMask - Infura availability check failed",e)}}_switchNetwork(e){this.emit(Un),this._setNetworkState("loading"),this._clearNetworkDetails(),this._configureProvider(e),this.emit(Dn,e.type)}_configureProvider({type:e,rpcUrl:t,chainId:r}){if(Ct.Sf.includes(e))this._configureInfuraProvider(e,this._infuraProjectId);else{if(e!==Ct.Qv.RPC)throw new Error(`NetworkController - _configureProvider - unknown type "${e}"`);this._configureStandardProvider(t,r)}}_configureInfuraProvider(e,t){p().info("NetworkController - configureInfuraProvider",e);const r=function({network:e,projectId:t}){const r=(0,En.createInfuraMiddleware)({network:e,projectId:t,maxAttempts:5,source:"metamask"}),s=(0,Dr.providerFromMiddleware)(r),n=new An.PollingBlockTracker({provider:s});return{networkMiddleware:(0,Or.mergeMiddleware)([In({network:e}),(0,Dr.createBlockCacheMiddleware)({blockTracker:n}),(0,Dr.createInflightCacheMiddleware)(),(0,Dr.createBlockRefMiddleware)({blockTracker:n,provider:s}),(0,Dr.createRetryOnEmptyMiddleware)({blockTracker:n,provider:s}),(0,Dr.createBlockTrackerInspectorMiddleware)({blockTracker:n}),r]),blockTracker:n}}({network:e,projectId:t});this._setNetworkClient(r)}_configureStandardProvider(e,t){p().info("NetworkController - configureStandardProvider",e);const r=function({rpcUrl:e,chainId:t}){const r=process.env.IN_TEST?{pollingInterval:S.sh}:{},s=(0,Dr.createFetchMiddleware)({rpcUrl:e}),n=(0,Dr.providerFromMiddleware)(s),a=new An.PollingBlockTracker({...r,provider:n}),o=process.env.IN_TEST?[(0,Or.createAsyncMiddleware)((async(e,t,r)=>("eth_estimateGas"===e.method&&await new Promise((e=>setTimeout(e,2*S.sh))),r())))]:[];return{networkMiddleware:(0,Or.mergeMiddleware)([...o,_n(t),(0,Dr.createBlockRefRewriteMiddleware)({blockTracker:a}),(0,Dr.createBlockCacheMiddleware)({blockTracker:a}),(0,Dr.createInflightCacheMiddleware)(),(0,Dr.createBlockTrackerInspectorMiddleware)({blockTracker:a}),s]),blockTracker:a}}({rpcUrl:e,chainId:t});this._setNetworkClient(r)}_setNetworkClient({networkMiddleware:e,blockTracker:t}){const r=(0,Dr.providerFromMiddleware)(e),s=bn()({provider:r,blockTracker:t}),n=Mn()({provider:r,blockTracker:t}),a=new Or.JsonRpcEngine;n.events.on("notification",(e=>a.emit("notification",e))),a.push(s),a.push(n.middleware),a.push(e);const o=(0,Dr.providerFromEngine)(a);this._setProviderAndBlockTracker({provider:o,blockTracker:t})}_setProviderAndBlockTracker({provider:e,blockTracker:t}){this._providerProxy?this._providerProxy.setTarget(e):this._providerProxy=(0,wn.createSwappableProxy)(e),this._blockTrackerProxy?this._blockTrackerProxy.setTarget(t):this._blockTrackerProxy=(0,wn.createEventEmitterProxy)(t,{eventFilter:"skipInternal"}),this._provider=e,this._blockTracker=t}}var jn,Hn,$n;jn=Gn,$n=On,(Hn=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(Hn="defaultProviderConfig"))in jn?Object.defineProperty(jn,Hn,{value:$n,enumerable:!0,configurable:!0,writable:!0}):jn[Hn]=$n;var qn=r(50144),Kn=r(17470);class Vn{constructor(e={}){const t={frequentRpcListDetail:[],useBlockie:!1,useNonceField:!1,usePhishDetect:!0,dismissSeedBackUpReminder:!1,disabledRpcMethodPreferences:{eth_sign:!1},useMultiAccountBalanceChecker:!0,useTokenDetection:!1,useNftDetection:!1,useCurrencyRateCheck:!0,openSeaEnabled:!1,advancedGasFee:null,featureFlags:{showIncomingTransactions:!0},knownMethodData:{},currentLocale:e.initLangCode,identities:{},lostIdentities:{},forgottenPassword:!1,preferences:{autoLockTimeLimit:void 0,showFiatInTestnets:!1,showTestNetworks:!1,useNativeCurrencyAsPrimaryCurrency:!0,hideZeroBalanceTokens:!1},ipfsGateway:Ct.Dt,infuraBlocked:null,ledgerTransportType:window.navigator.hid?Vt.webhid:Vt.u2f,transactionSecurityCheckEnabled:!1,theme:Kn.f.os,...e.initState};this.network=e.network,this.store=new m.ObservableStore(t),this.store.setMaxListeners(13),this.openPopup=e.openPopup,this.tokenListController=e.tokenListController,this._subscribeToInfuraAvailability(),r.g.setPreference=(e,t)=>this.setFeatureFlag(e,t)}setPasswordForgotten(e){this.store.updateState({forgottenPassword:e})}setUseBlockie(e){this.store.updateState({useBlockie:e})}setUseNonceField(e){this.store.updateState({useNonceField:e})}setUsePhishDetect(e){this.store.updateState({usePhishDetect:e})}setUseMultiAccountBalanceChecker(e){this.store.updateState({useMultiAccountBalanceChecker:e})}setUseTokenDetection(e){this.store.updateState({useTokenDetection:e}),this.tokenListController.updatePreventPollingOnNetworkRestart(!e),e?this.tokenListController.start():(this.tokenListController.clearingTokenListData(),this.tokenListController.stop())}setUseNftDetection(e){this.store.updateState({useNftDetection:e})}setUseCurrencyRateCheck(e){this.store.updateState({useCurrencyRateCheck:e})}setOpenSeaEnabled(e){this.store.updateState({openSeaEnabled:e})}setAdvancedGasFee(e){this.store.updateState({advancedGasFee:e})}setTheme(e){this.store.updateState({theme:e})}setTransactionSecurityCheckEnabled(e){this.store.updateState({transactionSecurityCheckEnabled:e})}addKnownMethodData(e,t){const{knownMethodData:r}=this.store.getState();r[e]=t,this.store.updateState({knownMethodData:r})}setCurrentLocale(e){const t=["ar","dv","fa","he","ku"].includes(e)?"rtl":"auto";return this.store.updateState({currentLocale:e,textDirection:t}),t}setAddresses(e){const t=this.store.getState().identities,r=e.reduce(((e,r,s)=>{const n=t[r]||{};return e[r]={name:`Account ${s+1}`,address:r,...n},e}),{});this.store.updateState({identities:r})}removeAddress(e){const{identities:t}=this.store.getState();if(!t[e])throw new Error(`${e} can't be deleted cause it was not found`);if(delete t[e],this.store.updateState({identities:t}),e===this.getSelectedAddress()){const[e]=Object.keys(t);this.setSelectedAddress(e)}return e}addAddresses(e){const{identities:t}=this.store.getState();e.forEach((e=>{if(t[e])return;const r=Object.keys(t).length;t[e]={name:`Account ${r+1}`,address:e}})),this.store.updateState({identities:t})}syncAddresses(e){if(!Array.isArray(e)||0===e.length)throw new Error("Expected non-empty array of addresses. Error #11201");const{identities:t,lostIdentities:r}=this.store.getState(),s={};Object.keys(t).forEach((r=>{e.includes(r)||(s[r]=t[r],delete t[r])})),Object.keys(s).length>0&&Object.keys(s).forEach((e=>{r[e]=s[e]})),this.store.updateState({identities:t,lostIdentities:r}),this.addAddresses(e);let n=this.getSelectedAddress();return e.includes(n)||([n]=e,this.setSelectedAddress(n)),n}setSelectedAddress(e){const t=(0,qn.normalize)(e),{identities:r}=this.store.getState(),s=r[t];if(!s)throw new Error(`Identity for '${t} not found`);s.lastSelected=Date.now(),this.store.updateState({identities:r,selectedAddress:t})}getSelectedAddress(){return this.store.getState().selectedAddress}async setAccountLabel(e,t){if(!e)throw new Error(`setAccountLabel requires a valid address, got ${String(e)}`);const r=(0,qn.normalize)(e),{identities:s}=this.store.getState();return s[r]=s[r]||{},s[r].name=t,this.store.updateState({identities:s}),t}upsertToFrequentRpcList(e,t,r="ETH",s="",n={}){const a=this.getFrequentRpcListDetail(),o=a.findIndex((t=>t.rpcUrl===e));if(-1===o){if(!tn(t))throw new Error(`Invalid chainId: "${t}"`);a.push({rpcUrl:e,chainId:t,ticker:r,nickname:s,rpcPrefs:n}),this.store.updateState({frequentRpcListDetail:a})}else a.splice(o,1,{rpcUrl:e,chainId:t,ticker:r,nickname:s,rpcPrefs:n})}async removeFromFrequentRpcList(e){const t=this.getFrequentRpcListDetail(),r=t.findIndex((t=>t.rpcUrl===e));return-1!==r&&t.splice(r,1),this.store.updateState({frequentRpcListDetail:t}),t}getFrequentRpcListDetail(){return this.store.getState().frequentRpcListDetail}async setFeatureFlag(e,t){const r={...this.store.getState().featureFlags,[e]:t};return this.store.updateState({featureFlags:r}),r}async setPreference(e,t){const r={...this.getPreferences(),[e]:t};return this.store.updateState({preferences:r}),r}getPreferences(){return this.store.getState().preferences}getIpfsGateway(){return this.store.getState().ipfsGateway}async setIpfsGateway(e){return this.store.updateState({ipfsGateway:e}),e}setLedgerTransportPreference(e){return this.store.updateState({ledgerTransportType:e}),e}getLedgerTransportPreference(){return this.store.getState().ledgerTransportType}async setDismissSeedBackUpReminder(e){await this.store.updateState({dismissSeedBackUpReminder:e})}async setDisabledRpcMethodPreference(e,t){const r={...this.store.getState().disabledRpcMethodPreferences,[e]:t};this.store.updateState({disabledRpcMethodPreferences:r})}getRpcMethodPreferences(){return this.store.getState().disabledRpcMethodPreferences}_subscribeToInfuraAvailability(){this.network.on(Fn,(()=>{this._setInfuraBlocked(!0)})),this.network.on(Bn,(()=>{this._setInfuraBlocked(!1)}))}_setInfuraBlocked(e){const{infuraBlocked:t}=this.store.getState();t!==e&&this.store.updateState({infuraBlocked:e})}}const Wn="AUTO_LOCK_TIMEOUT_ALARM",Qn="METAMETRICS_FINALIZE_EVENT_FRAGMENT_ALARM";r(98954),r(22423);class zn extends(n()){constructor(e={}){const{addUnlockListener:t,isUnlocked:r,initState:s,onInactiveTimeout:n,showUnlockRequest:a,preferencesStore:o,qrHardwareStore:i}=e;super(),this.onInactiveTimeout=n||(()=>{}),this.store=new m.ObservableStore({timeoutMinutes:0,connectedStatusPopoverHasBeenShown:!0,defaultHomeActiveTabName:null,browserEnvironment:{},popupGasPollTokens:[],notificationGasPollTokens:[],fullScreenGasPollTokens:[],recoveryPhraseReminderHasBeenShown:!1,recoveryPhraseReminderLastShown:(new Date).getTime(),outdatedBrowserWarningLastShown:(new Date).getTime(),nftsDetectionNoticeDismissed:!1,showTestnetMessageInDropdown:!0,showBetaHeader:"beta"===process.env.METAMASK_BUILD_TYPE,trezorModel:null,...s,qrHardware:{},nftsDropdownState:{},usedNetworks:{"0x1":!0,"0x5":!0,"0x539":!0}}),this.timer=null,this.isUnlocked=r,this.waitingForUnlock=[],t(this.handleUnlock.bind(this)),this._showUnlockRequest=a,o.subscribe((({preferences:e})=>{this.store.getState().timeoutMinutes!==e.autoLockTimeLimit&&this._setInactiveTimeout(e.autoLockTimeLimit)})),i.subscribe((e=>{this.store.updateState({qrHardware:e})}));const{preferences:c}=o.getState();this._setInactiveTimeout(c.autoLockTimeLimit)}getUnlockPromise(e){return new Promise((t=>{this.isUnlocked()?t():this.waitForUnlock(t,e)}))}waitForUnlock(e,t){this.waitingForUnlock.push({resolve:e}),this.emit(Ni.UPDATE_BADGE),t&&this._showUnlockRequest()}handleUnlock(){if(this.waitingForUnlock.length>0){for(;this.waitingForUnlock.length>0;)this.waitingForUnlock.shift().resolve();this.emit(Ni.UPDATE_BADGE)}}setDefaultHomeActiveTabName(e){this.store.updateState({defaultHomeActiveTabName:e})}setConnectedStatusPopoverHasBeenShown(){this.store.updateState({connectedStatusPopoverHasBeenShown:!0})}setRecoveryPhraseReminderHasBeenShown(){this.store.updateState({recoveryPhraseReminderHasBeenShown:!0})}setRecoveryPhraseReminderLastShown(e){this.store.updateState({recoveryPhraseReminderLastShown:e})}setOutdatedBrowserWarningLastShown(e){this.store.updateState({outdatedBrowserWarningLastShown:e})}setLastActiveTime(){this._resetTimer()}_setInactiveTimeout(e){this.store.updateState({timeoutMinutes:e}),this._resetTimer()}_resetTimer(){const{timeoutMinutes:e}=this.store.getState();this.timer?clearTimeout(this.timer):ce.A&&chrome.alarms.clear(Wn),e&&(ce.A?(chrome.alarms.create(Wn,{delayInMinutes:e,periodInMinutes:e}),chrome.alarms.onAlarm.addListener((e=>{e.name===Wn&&(this.onInactiveTimeout(),chrome.alarms.clear(Wn))}))):this.timer=setTimeout((()=>this.onInactiveTimeout()),e*S.EB))}setBrowserEnvironment(e,t){this.store.updateState({browserEnvironment:{os:e,browser:t}})}addPollingToken(e,t){if(t!==C.UO[C.Ms]){const r=this.store.getState()[t];this.store.updateState({[t]:[...r,e]})}}removePollingToken(e,t){if(t!==C.UO[C.Ms]){const r=this.store.getState()[t];this.store.updateState({[t]:r.filter((t=>t!==e))})}}clearPollingTokens(){this.store.updateState({popupGasPollTokens:[],notificationGasPollTokens:[],fullScreenGasPollTokens:[]})}setShowTestnetMessageInDropdown(e){this.store.updateState({showTestnetMessageInDropdown:e})}setShowBetaHeader(e){this.store.updateState({showBetaHeader:e})}setTrezorModel(e){this.store.updateState({trezorModel:e})}updateNftDropDownState(e){this.store.updateState({nftsDropdownState:e})}setFirstTimeUsedNetwork(e){const t=this.store.getState(),{usedNetworks:r}=t;r[e]=!0,this.store.updateState({usedNetworks:r})}}class Yn{constructor(e={}){const{accountTracker:t,getCurrentChainId:r}=e;this.accountTracker=t,this.getCurrentChainId=r;const s={cachedBalances:{},...e.initState};this.store=new m.ObservableStore(s),this._registerUpdates()}async updateCachedBalances({accounts:e}){const t=this.getCurrentChainId(),r=await this._generateBalancesToCache(e,t);this.store.updateState({cachedBalances:r})}_generateBalancesToCache(e,t){const{cachedBalances:r}=this.store.getState(),s={...r[t]};Object.keys(e).forEach((t=>{const r=e[t];r.balance&&(s[t]=r.balance)}));return{...r,[t]:s}}clearCachedBalances(){this.store.updateState({cachedBalances:{}})}_registerUpdates(){const e=this.updateCachedBalances.bind(this);this.accountTracker.store.subscribe(e)}}let Xn;!function(e){e.unconnectedAccount="unconnectedAccount",e.web3ShimUsage="web3ShimUsage",e.invalidCustomNetwork="invalidCustomNetwork"}(Xn||(Xn={}));const Jn=[Xn.unconnectedAccount,Xn.web3ShimUsage];let Zn;!function(e){e[e.recorded=1]="recorded",e[e.dismissed=2]="dismissed"}(Zn||(Zn={}));const ea={alertEnabledness:Jn.reduce(((e,t)=>(e[t]=!0,e)),{}),unconnectedAccountAlertShownOrigins:{},web3ShimUsageOrigins:{}};class ta{constructor(e={}){const{initState:t={},preferencesStore:r}=e,s={...ea,alertEnabledness:{...ea.alertEnabledness,...t.alertEnabledness}};this.store=new m.ObservableStore(s),this.selectedAddress=r.getState().selectedAddress,r.subscribe((({selectedAddress:e})=>{this.store.getState().unconnectedAccountAlertShownOrigins&&this.selectedAddress!==e&&(this.selectedAddress=e,this.store.updateState({unconnectedAccountAlertShownOrigins:{}}))}))}setAlertEnabledness(e,t){let{alertEnabledness:r}=this.store.getState();r={...r},r[e]=t,this.store.updateState({alertEnabledness:r})}setUnconnectedAccountAlertShown(e){let{unconnectedAccountAlertShownOrigins:t}=this.store.getState();t={...t},t[e]=!0,this.store.updateState({unconnectedAccountAlertShownOrigins:t})}getWeb3ShimUsageState(e){return this.store.getState().web3ShimUsageOrigins[e]}setWeb3ShimUsageRecorded(e){this._setWeb3ShimUsageState(e,Zn.recorded)}setWeb3ShimUsageAlertDismissed(e){this._setWeb3ShimUsageState(e,Zn.dismissed)}_setWeb3ShimUsageState(e,t){let{web3ShimUsageOrigins:r}=this.store.getState();r={...r},r[e]=t,this.store.updateState({web3ShimUsageOrigins:r})}}function ra(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class sa{constructor(e={}){ra(this,"registerOnboarding",(async(e,t)=>{if(this.store.getState().completedOnboarding)return void p().debug("Ignoring registerOnboarding; user already onboarded");const r={...this.store.getState().onboardingTabs};r[e]&&r[e]===t||(p().debug(`Registering onboarding tab at location '${e}' with tabId '${t}'`),r[e]=t,this.store.updateState({onboardingTabs:r}))}));const t={seedPhraseBackedUp:null,firstTimeFlowType:null,completedOnboarding:!1,...e.initState,onboardingTabs:{}};this.store=new m.ObservableStore(t)}setSeedPhraseBackedUp(e){this.store.updateState({seedPhraseBackedUp:e})}async completeOnboarding(){return this.store.updateState({completedOnboarding:!0}),!0}setFirstTimeFlowType(e){this.store.updateState({firstTimeFlowType:e})}}class na{constructor(e={}){const{preferencesController:t,addressBookController:r,trackMetaMetricsEvent:s}=e;this.preferencesController=t,this.addressBookController=r,this._trackMetaMetricsEvent=s}async restoreUserData(e){const t=this.preferencesController.store.getState(),{preferences:r,addressBook:s}=JSON.parse(e);r&&(r.identities=t.identities,r.lostIdentities=t.lostIdentities,r.selectedAddress=t.selectedAddress,this.preferencesController.store.updateState(r)),s&&this.addressBookController.update(s,!0),r&&s&&this._trackMetaMetricsEvent({event:"User Data Imported",category:"Backup"})}async backupUserData(){const e={preferences:{...this.preferencesController.store.getState()},addressBook:{...this.addressBookController.state}};delete e.preferences.identities,delete e.preferences.lostIdentities,delete e.preferences.selectedAddress;const t=JSON.stringify(e),r=new Date,s=e=>function(e,t){return e.toString().padStart(t,"0")}(e,2);return{fileName:`MetaMaskUserData.${r.getFullYear()}_${s(r.getMonth()+1)}_${s(r.getDay())}_${s(r.getHours())}_${s(r.getMinutes())}_${s(r.getDay())}.json`,data:t}}}var aa=r(13550),oa=r.n(aa);const ia=(0,Tr.Z)();class ca{constructor(e={}){const{blockTracker:t,onNetworkDidChange:r,getCurrentChainId:s,preferencesController:n,onboardingController:a}=e;this.blockTracker=t,this.getCurrentChainId=s,this.preferencesController=n,this.onboardingController=a,this._onLatestBlock=async e=>{const t=this.preferencesController.getSelectedAddress(),r=parseInt(e,16);await this._update(t,r)};const o={incomingTransactions:{},incomingTxLastFetchedBlockByChainId:Object.keys(Ct.YV).reduce(((e,t)=>(e[t]=null,e)),{}),...e.initState};this.store=new m.ObservableStore(o),this.preferencesController.store.subscribe((0,Fe.HB)(((e,t)=>{const{featureFlags:{showIncomingTransactions:r}={}}=e,{featureFlags:{showIncomingTransactions:s}={}}=t;s!==r&&(!r||s?this.start():this.stop())}),this.preferencesController.store.getState())),this.preferencesController.store.subscribe((0,Fe.HB)((async(e,t)=>{const{selectedAddress:r}=e,{selectedAddress:s}=t;s!==r&&await this._update(s)}),this.preferencesController.store.getState())),this.onboardingController.store.subscribe((0,Fe.HB)((async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:s}=t;if(!r&&s){const e=this.preferencesController.getSelectedAddress();await this._update(e)}}),this.onboardingController.store.getState())),r((async()=>{const e=this.preferencesController.getSelectedAddress();await this._update(e)}))}start(){const{featureFlags:e={}}=this.preferencesController.store.getState(),{showIncomingTransactions:t}=e;t&&(this.blockTracker.removeListener("latest",this._onLatestBlock),this.blockTracker.addListener("latest",this._onLatestBlock))}stop(){this.blockTracker.removeListener("latest",this._onLatestBlock)}async _update(e,t){const{completedOnboarding:r}=this.onboardingController.store.getState(),s=this.getCurrentChainId();if(Object.hasOwnProperty.call(Ct.YV,s)&&e&&r)try{var n;const r=this.store.getState(),a=parseInt(this.blockTracker.getCurrentBlock(),16),o=r.incomingTxLastFetchedBlockByChainId[s],i=null!==(n=null!=o?o:t)&&void 0!==n?n:a,c=await this._getNewIncomingTransactions(e,i,s);let l=i;c.forEach((e=>{e.blockNumber&&parseInt(l,10)<parseInt(e.blockNumber,10)&&(l=parseInt(e.blockNumber,10))})),this.store.updateState({incomingTxLastFetchedBlockByChainId:{...r.incomingTxLastFetchedBlockByChainId,[s]:l+1},incomingTransactions:c.reduce(((e,t)=>(e[t.hash]=t,e)),{...r.incomingTransactions})})}catch(e){p().error(e)}}async _getNewIncomingTransactions(e,t,r){const s=Ct.YV[r].domain;let n=`${`https://${Ct.YV[r].subdomain}.${s}`}/api?module=account&action=txlist&address=${e}&tag=latest&page=1`;t&&(n+=`&startBlock=${parseInt(t,10)}`);const a=await ia(n),{status:o,result:i}=await a.json();let c=[];if("1"===o&&Array.isArray(i)&&i.length>0){const t={},s=[];i.forEach((e=>{t[e.hash]||(s.push(this._normalizeTxFromEtherscan(e,r)),t[e.hash]=1)})),c=s.filter((t=>{var r,s;return(null===(r=t.txParams)||void 0===r||null===(s=r.to)||void 0===s?void 0:s.toLowerCase())===e.toLowerCase()})),c.sort(((e,t)=>e.time<t.time?-1:1))}return c}_normalizeTxFromEtherscan(e,t){const r=1e3*parseInt(e.timeStamp,10),s="0"===e.isError?be.LN.confirmed:be.LN.failed,n={from:e.from,gas:Rs(new(oa())(e.gas)),nonce:Rs(new(oa())(e.nonce)),to:e.to,value:Rs(new(oa())(e.value))};return e.gasPrice?n.gasPrice=Rs(new(oa())(e.gasPrice)):e.maxFeePerGas&&(n.maxFeePerGas=Rs(new(oa())(e.maxFeePerGas)),n.maxPriorityFeePerGas=Rs(new(oa())(e.maxPriorityFeePerGas))),{blockNumber:e.blockNumber,id:(0,At.Z)(),chainId:t,metamaskNetworkId:Ct.YV[t].networkId,status:s,time:r,txParams:n,hash:e.hash,type:be.iU.incoming}}}class la extends(n()){constructor({metricsEvent:e,securityProviderRequest:t}){super(),this.memStore=new m.ObservableStore({unapprovedMsgs:{},unapprovedMsgCount:0}),this.resetState=()=>{this.memStore.updateState({unapprovedMsgs:{},unapprovedMsgCount:0})},this.messages=[],this.metricsEvent=e,this.securityProviderRequest=t}get unapprovedMsgCount(){return Object.keys(this.getUnapprovedMsgs()).length}getUnapprovedMsgs(){return this.messages.filter((e=>"unapproved"===e.status)).reduce(((e,t)=>(e[t.id]=t,e)),{})}async addUnapprovedMessageAsync(e,t){const r=await this.addUnapprovedMessage(e,t);return await new Promise(((t,s)=>{this.once(`${r}:finished`,(r=>{switch(r.status){case"signed":return t(r.rawSig);case"rejected":return s(y.ethErrors.provider.userRejectedRequest("MetaMask Message Signature: User denied message signature."));case"errored":return s(new Error(`MetaMask Message Signature: ${r.error}`));default:return s(new Error(`MetaMask Message Signature: Unknown problem: ${JSON.stringify(e)}`))}}))}))}async addUnapprovedMessage(e,t){t&&(e.origin=t.origin),e.data=da(e.data);const r=(new Date).getTime(),s=(0,At.Z)(),n={id:s,msgParams:e,time:r,status:"unapproved",type:C.C7.ETH_SIGN};this.addMsg(n);const a=await this.securityProviderRequest(n,n.type);return n.securityProviderResponse=a,this.emit("update"),s}addMsg(e){this.messages.push(e),this._saveMsgList()}getMsg(e){return this.messages.find((t=>t.id===e))}approveMessage(e){return this.setMsgStatusApproved(e.metamaskId),this.prepMsgForSigning(e)}setMsgStatusApproved(e){this._setMsgStatus(e,"approved")}setMsgStatusSigned(e,t){const r=this.getMsg(e);r.rawSig=t,this._updateMsg(r),this._setMsgStatus(e,"signed")}async prepMsgForSigning(e){return delete e.metamaskId,e}rejectMsg(e,t){if(t){const r=this.getMsg(e);this.metricsEvent({event:t,category:re.TRANSACTIONS,properties:{action:"Sign Request",type:r.type}})}this._setMsgStatus(e,"rejected")}errorMessage(e,t){const r=this.getMsg(e);r.error=t,this._updateMsg(r),this._setMsgStatus(e,"errored")}clearUnapproved(){this.messages=this.messages.filter((e=>"unapproved"!==e.status)),this._saveMsgList()}_setMsgStatus(e,t){const r=this.getMsg(e);if(!r)throw new Error(`MessageManager - Message not found for id: "${e}".`);r.status=t,this._updateMsg(r),this.emit(`${e}:${t}`,r),"rejected"!==t&&"signed"!==t||this.emit(`${e}:finished`,r)}_updateMsg(e){const t=this.messages.findIndex((t=>t.id===e.id));-1!==t&&(this.messages[t]=e),this._saveMsgList()}_saveMsgList(){const e=this.getUnapprovedMsgs(),t=Object.keys(e).length;this.memStore.updateState({unapprovedMsgs:e,unapprovedMsgCount:t}),this.emit(Ni.UPDATE_BADGE)}}function da(e){return"0x"===e.slice(0,2)?e:(0,gs.bufferToHex)(Buffer.from(e,"utf8"))}const ua=/^[0-9A-Fa-f]+$/gu;class pa extends(n()){constructor(e){super(),this.memStore=new m.ObservableStore({unapprovedDecryptMsgs:{},unapprovedDecryptMsgCount:0}),this.resetState=()=>{this.memStore.updateState({unapprovedDecryptMsgs:{},unapprovedDecryptMsgCount:0})},this.messages=[],this.metricsEvent=e.metricsEvent}get unapprovedDecryptMsgCount(){return Object.keys(this.getUnapprovedMsgs()).length}getUnapprovedMsgs(){return this.messages.filter((e=>"unapproved"===e.status)).reduce(((e,t)=>(e[t.id]=t,e)),{})}addUnapprovedMessageAsync(e,t){return new Promise(((r,s)=>{if(!e.from)return void s(new Error("MetaMask Decryption: from field is required."));const n=this.addUnapprovedMessage(e,t);this.once(`${n}:finished`,(t=>{switch(t.status){case"decrypted":return void r(t.rawData);case"rejected":return void s(y.ethErrors.provider.userRejectedRequest("MetaMask Decryption: User denied message decryption."));case"errored":return void s(new Error("This message cannot be decrypted"));default:s(new Error(`MetaMask Decryption: Unknown problem: ${JSON.stringify(e)}`))}}))}))}addUnapprovedMessage(e,t){p().debug(`DecryptMessageManager addUnapprovedMessage: ${JSON.stringify(e)}`),t&&(e.origin=t.origin),e.data=this.normalizeMsgData(e.data);const r=(new Date).getTime(),s=(0,At.Z)(),n={id:s,msgParams:e,time:r,status:"unapproved",type:C.C7.ETH_DECRYPT};return this.addMsg(n),this.emit("update"),s}addMsg(e){this.messages.push(e),this._saveMsgList()}getMsg(e){return this.messages.find((t=>t.id===e))}approveMessage(e){return this.setMsgStatusApproved(e.metamaskId),this.prepMsgForDecryption(e)}setMsgStatusApproved(e){this._setMsgStatus(e,"approved")}setMsgStatusDecrypted(e,t){const r=this.getMsg(e);r.rawData=t,this._updateMsg(r),this._setMsgStatus(e,"decrypted")}async prepMsgForDecryption(e){return delete e.metamaskId,e}rejectMsg(e,t){t&&this.metricsEvent({event:t,category:re.MESSAGES,properties:{action:"Decrypt Message Request"}}),this._setMsgStatus(e,"rejected")}errorMessage(e,t){const r=this.getMsg(e);r.error=t,this._updateMsg(r),this._setMsgStatus(e,"errored")}clearUnapproved(){this.messages=this.messages.filter((e=>"unapproved"!==e.status)),this._saveMsgList()}_setMsgStatus(e,t){const r=this.getMsg(e);if(!r)throw new Error(`DecryptMessageManager - Message not found for id: "${e}".`);r.status=t,this._updateMsg(r),this.emit(`${e}:${t}`,r),"rejected"!==t&&"decrypted"!==t&&"errored"!==t||this.emit(`${e}:finished`,r)}_updateMsg(e){const t=this.messages.findIndex((t=>t.id===e.id));-1!==t&&(this.messages[t]=e),this._saveMsgList()}_saveMsgList(){const e=this.getUnapprovedMsgs(),t=Object.keys(e).length;this.memStore.updateState({unapprovedDecryptMsgs:e,unapprovedDecryptMsgCount:t}),this.emit(Ni.UPDATE_BADGE)}normalizeMsgData(e){try{const t=(0,et.MT)(e);if(t.match(ua))return(0,Fe.L_)(t)}catch(e){p().debug("Message was not hex encoded, interpreting as utf8.")}return(0,gs.bufferToHex)(Buffer.from(e,"utf8"))}}class ha extends(n()){constructor(e){super(),this.memStore=new m.ObservableStore({unapprovedEncryptionPublicKeyMsgs:{},unapprovedEncryptionPublicKeyMsgCount:0}),this.resetState=()=>{this.memStore.updateState({unapprovedEncryptionPublicKeyMsgs:{},unapprovedEncryptionPublicKeyMsgCount:0})},this.messages=[],this.metricsEvent=e.metricsEvent}get unapprovedEncryptionPublicKeyMsgCount(){return Object.keys(this.getUnapprovedMsgs()).length}getUnapprovedMsgs(){return this.messages.filter((e=>"unapproved"===e.status)).reduce(((e,t)=>(e[t.id]=t,e)),{})}addUnapprovedMessageAsync(e,t){return new Promise(((r,s)=>{if(!e)return void s(new Error("MetaMask Message: address field is required."));const n=this.addUnapprovedMessage(e,t);this.once(`${n}:finished`,(t=>{switch(t.status){case"received":return void r(t.rawData);case"rejected":return void s(y.ethErrors.provider.userRejectedRequest("MetaMask EncryptionPublicKey: User denied message EncryptionPublicKey."));default:s(new Error(`MetaMask EncryptionPublicKey: Unknown problem: ${JSON.stringify(e)}`))}}))}))}addUnapprovedMessage(e,t){p().debug("EncryptionPublicKeyManager addUnapprovedMessage: address");const r=(new Date).getTime(),s=(0,At.Z)(),n={id:s,msgParams:e,time:r,status:"unapproved",type:C.C7.ETH_GET_ENCRYPTION_PUBLIC_KEY};return t&&(n.origin=t.origin),this.addMsg(n),this.emit("update"),s}addMsg(e){this.messages.push(e),this._saveMsgList()}getMsg(e){return this.messages.find((t=>t.id===e))}approveMessage(e){return this.setMsgStatusApproved(e.metamaskId),this.prepMsgForEncryptionPublicKey(e)}setMsgStatusApproved(e){this._setMsgStatus(e,"approved")}setMsgStatusReceived(e,t){const r=this.getMsg(e);r.rawData=t,this._updateMsg(r),this._setMsgStatus(e,"received")}async prepMsgForEncryptionPublicKey(e){return delete e.metamaskId,e}rejectMsg(e,t){t&&this.metricsEvent({event:t,category:re.MESSAGES,properties:{action:"Encryption public key Request"}}),this._setMsgStatus(e,"rejected")}errorMessage(e,t){const r=this.getMsg(e);r.error=t,this._updateMsg(r),this._setMsgStatus(e,"errored")}clearUnapproved(){this.messages=this.messages.filter((e=>"unapproved"!==e.status)),this._saveMsgList()}_setMsgStatus(e,t){const r=this.getMsg(e);if(!r)throw new Error(`EncryptionPublicKeyManager - Message not found for id: "${e}".`);r.status=t,this._updateMsg(r),this.emit(`${e}:${t}`,r),"rejected"!==t&&"received"!==t||this.emit(`${e}:finished`,r)}_updateMsg(e){const t=this.messages.findIndex((t=>t.id===e.id));-1!==t&&(this.messages[t]=e),this._saveMsgList()}_saveMsgList(){const e=this.getUnapprovedMsgs(),t=Object.keys(e).length;this.memStore.updateState({unapprovedEncryptionPublicKeyMsgs:e,unapprovedEncryptionPublicKeyMsgCount:t}),this.emit(Ni.UPDATE_BADGE)}}var ga=r(20200);const ma=e=>{try{const{data:t}=e,r=(e=>{try{const t=(0,et.MT)(e),r=Buffer.from(t,"hex");return 32===r.length?e:r.toString("utf8")}catch(t){return p().error(t),e}})(t);return{isSIWEMessage:!0,parsedMessage:new ga.Pp(r)}}catch(e){return{isSIWEMessage:!1,parsedMessage:null}}},fa=/^[0-9A-Fa-f]+$/gu;class va extends(n()){constructor({metricsEvent:e,securityProviderRequest:t}){super(),this.memStore=new m.ObservableStore({unapprovedPersonalMsgs:{},unapprovedPersonalMsgCount:0}),this.resetState=()=>{this.memStore.updateState({unapprovedPersonalMsgs:{},unapprovedPersonalMsgCount:0})},this.messages=[],this.metricsEvent=e,this.securityProviderRequest=t}get unapprovedPersonalMsgCount(){return Object.keys(this.getUnapprovedMsgs()).length}getUnapprovedMsgs(){return this.messages.filter((e=>"unapproved"===e.status)).reduce(((e,t)=>(e[t.id]=t,e)),{})}addUnapprovedMessageAsync(e,t){return new Promise(((r,s)=>{e.from?this.addUnapprovedMessage(e,t).then((t=>{this.once(`${t}:finished`,(t=>{switch(t.status){case"signed":return void r(t.rawSig);case"rejected":return void s(y.ethErrors.provider.userRejectedRequest("MetaMask Message Signature: User denied message signature."));case"errored":return void s(new Error(`MetaMask Message Signature: ${t.error}`));default:s(new Error(`MetaMask Message Signature: Unknown problem: ${JSON.stringify(e)}`))}}))})):s(new Error("MetaMask Message Signature: from field is required."))}))}async addUnapprovedMessage(e,t){p().debug(`PersonalMessageManager addUnapprovedMessage: ${JSON.stringify(e)}`),t&&(e.origin=t.origin),e.data=this.normalizeMsgData(e.data);const r=ma(e);if(e.siwe=r,r.isSIWEMessage&&t.origin){const{host:e}=new URL(t.origin);if(r.parsedMessage.domain!==e)throw new Error(`SIWE domain is not valid: "${e}" !== "${r.parsedMessage.domain}"`)}const s=(new Date).getTime(),n=(0,At.Z)(),a={id:n,msgParams:e,time:s,status:"unapproved",type:C.C7.PERSONAL_SIGN};this.addMsg(a);const o=await this.securityProviderRequest(a,a.type);return a.securityProviderResponse=o,this.emit("update"),n}addMsg(e){this.messages.push(e),this._saveMsgList()}getMsg(e){return this.messages.find((t=>t.id===e))}approveMessage(e){return this.setMsgStatusApproved(e.metamaskId),this.prepMsgForSigning(e)}setMsgStatusApproved(e){this._setMsgStatus(e,"approved")}setMsgStatusSigned(e,t){const r=this.getMsg(e);r.rawSig=t,this._updateMsg(r),this._setMsgStatus(e,"signed")}async prepMsgForSigning(e){return delete e.metamaskId,e}rejectMsg(e,t){if(t){const r=this.getMsg(e);this.metricsEvent({event:t,category:re.TRANSACTIONS,properties:{action:"Sign Request",type:r.type}})}this._setMsgStatus(e,"rejected")}errorMessage(e,t){const r=this.getMsg(e);r.error=t,this._updateMsg(r),this._setMsgStatus(e,"errored")}clearUnapproved(){this.messages=this.messages.filter((e=>"unapproved"!==e.status)),this._saveMsgList()}_setMsgStatus(e,t){const r=this.getMsg(e);if(!r)throw new Error(`PersonalMessageManager - Message not found for id: "${e}".`);r.status=t,this._updateMsg(r),this.emit(`${e}:${t}`,r),"rejected"!==t&&"signed"!==t||this.emit(`${e}:finished`,r)}_updateMsg(e){const t=this.messages.findIndex((t=>t.id===e.id));-1!==t&&(this.messages[t]=e),this._saveMsgList()}_saveMsgList(){const e=this.getUnapprovedMsgs(),t=Object.keys(e).length;this.memStore.updateState({unapprovedPersonalMsgs:e,unapprovedPersonalMsgCount:t}),this.emit(Ni.UPDATE_BADGE)}normalizeMsgData(e){try{const t=(0,et.MT)(e);if(t.match(fa))return(0,Fe.L_)(t)}catch(e){p().debug("Message was not hex encoded, interpreting as utf8.")}return(0,gs.bufferToHex)(Buffer.from(e,"utf8"))}}var ya=r(40660);class Ca extends(n()){constructor({getCurrentChainId:e,metricsEvent:t,securityProviderRequest:r}){super(),this._getCurrentChainId=e,this.memStore=new m.ObservableStore({unapprovedTypedMessages:{},unapprovedTypedMessagesCount:0}),this.resetState=()=>{this.memStore.updateState({unapprovedTypedMessages:{},unapprovedTypedMessagesCount:0})},this.messages=[],this.metricsEvent=t,this.securityProviderRequest=r}get unapprovedTypedMessagesCount(){return Object.keys(this.getUnapprovedMsgs()).length}getUnapprovedMsgs(){return this.messages.filter((e=>"unapproved"===e.status)).reduce(((e,t)=>(e[t.id]=t,e)),{})}async addUnapprovedMessageAsync(e,t,r){return new Promise(((s,n)=>{this.addUnapprovedMessage(e,t,r).then((t=>{this.once(`${t}:finished`,(t=>{switch(t.status){case"signed":return s(t.rawSig);case"rejected":return n(y.ethErrors.provider.userRejectedRequest("MetaMask Message Signature: User denied message signature."));case"errored":return n(new Error(`MetaMask Message Signature: ${t.error}`));default:return n(new Error(`MetaMask Message Signature: Unknown problem: ${JSON.stringify(e)}`))}}))}))}))}async addUnapprovedMessage(e,t,r){e.version=r,t&&(e.origin=t.origin),this.validateParams(e),p().debug(`TypedMessageManager addUnapprovedMessage: ${JSON.stringify(e)}`);const s=(new Date).getTime(),n=(0,At.Z)(),a={id:n,msgParams:e,time:s,status:"unapproved",type:C.C7.ETH_SIGN_TYPED_DATA};this.addMsg(a);const o=await this.securityProviderRequest(a,a.type);return a.securityProviderResponse=o,this.emit("update"),n}validateParams(e){switch(Tn.strict.ok(e&&"object"==typeof e,"Params must be an object."),Tn.strict.ok("data"in e,'Params must include a "data" field.'),Tn.strict.ok("from"in e,'Params must include a "from" field.'),Tn.strict.ok("string"==typeof e.from&&(0,et.Pv)(e.from,{allowNonPrefixed:!1}),'"from" field must be a valid, lowercase, hexadecimal Ethereum address string.'),e.version){case"V1":Tn.strict.ok(Array.isArray(e.data),'"params.data" must be an array.'),Tn.strict.doesNotThrow((()=>{(0,qn.typedSignatureHash)(e.data)}),"Signing data must be valid EIP-712 typed data.");break;case"V3":case"V4":{let t;Tn.strict.equal(typeof e.data,"string",'"params.data" must be a string.'),Tn.strict.doesNotThrow((()=>{t=JSON.parse(e.data)}),'"data" must be a valid JSON string.');const r=ya.validate(t,qn.TYPED_MESSAGE_SCHEMA);if(0!==r.errors.length)throw y.ethErrors.rpc.invalidParams({message:"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.",data:r.errors.map((e=>e.message.toString()))});Tn.strict.ok(t.primaryType in t.types,`Primary type of "${t.primaryType}" has no type definition.`);let{chainId:s}=t.domain;if(s){const e=parseInt(this._getCurrentChainId(),16);Tn.strict.ok(!Number.isNaN(e),`Cannot sign messages for chainId "${s}", because MetaMask is switching networks.`),"string"==typeof s&&(s=parseInt(s,s.startsWith("0x")?16:10)),Tn.strict.equal(s,e,`Provided chainId "${s}" must match the active chainId "${e}"`)}break}default:Tn.strict.fail(`Unknown typed data version "${e.version}"`)}}addMsg(e){this.messages.push(e),this._saveMsgList()}getMsg(e){return this.messages.find((t=>t.id===e))}approveMessage(e){return this.setMsgStatusApproved(e.metamaskId),this.prepMsgForSigning(e)}setMsgStatusApproved(e){this._setMsgStatus(e,"approved")}setMsgStatusSigned(e,t){const r=this.getMsg(e);r.rawSig=t,this._updateMsg(r),this._setMsgStatus(e,"signed")}async prepMsgForSigning(e){return delete e.metamaskId,delete e.version,e}rejectMsg(e,t){if(t){const r=this.getMsg(e);this.metricsEvent({event:t,category:re.TRANSACTIONS,properties:{action:"Sign Request",version:r.msgParams.version,type:r.type}})}this._setMsgStatus(e,"rejected")}errorMessage(e,t){const r=this.getMsg(e);r.error=t,this._updateMsg(r),this._setMsgStatus(e,"errored")}clearUnapproved(){this.messages=this.messages.filter((e=>"unapproved"!==e.status)),this._saveMsgList()}_setMsgStatus(e,t){const r=this.getMsg(e);if(!r)throw new Error(`TypedMessageManager - Message not found for id: "${e}".`);r.status=t,this._updateMsg(r),this.emit(`${e}:${t}`,r),"rejected"!==t&&"signed"!==t&&"errored"!==t||this.emit(`${e}:finished`,r)}_updateMsg(e){const t=this.messages.findIndex((t=>t.id===e.id));-1!==t&&(this.messages[t]=e),this._saveMsgList()}_saveMsgList(){const e=this.getUnapprovedMsgs(),t=Object.keys(e).length;this.memStore.updateState({unapprovedTypedMessages:e,unapprovedTypedMessagesCount:t}),this.emit(Ni.UPDATE_BADGE)}}var Sa=r(97369),Ta=r.n(Sa),wa=r(2832),ka=r.n(wa),ba=r(66052),Pa=r(29807),Ma=r.n(Pa);function Ea(e){let{name:t}=e;t=void 0===t?"Error":String(t);let r=e.message;return r=void 0===r?"":String(r),""===t?e.stack=e.message:""===r?e.stack=e.name:e.stack||(e.stack=`${e.name}: ${e.message}`),e}const Aa=parseInt("21000",10).toString(16),Ia={SIMPLE:(0,gs.addHexPrefix)(Aa),BASE_TOKEN_ESTIMATE:(0,gs.addHexPrefix)(1e5.toString(16))};let _a,Na,xa;!function(e){e.feeMarket="fee-market",e.legacy="legacy",e.ethGasPrice="eth_gasPrice",e.none="none"}(_a||(_a={})),function(e){e.low="low",e.medium="medium",e.high="high"}(Na||(Na={})),function(e){e.tenPercentIncreased="tenPercentIncreased",e.low="low",e.medium="medium",e.high="high",e.custom="custom",e.dAppSuggested="dappSuggested"}(xa||(xa={}));const Ra="custom";let Oa,La;!function(e){e.speedUp="speed-up",e.cancel="cancel",e.modifyInPlace="modify-in-place",e.swaps="swaps"}(Oa||(Oa={})),function(e){e[e.notBusy=0]="notBusy",e[e.stable=.33]="stable",e[e.busy=.66]="busy"}(La||(La={}));var Da=r(22576);function Ua(e="0",t="0"){return new _s.D(e,16).times(new _s.D(t,16)).toString()}function Fa(e,t){const r=Math.pow(10,Number(t||0));return new(Yt())(String(e)).div(r)}function Ba(e,t,r,s,n,a,o){var i;const c=null==t?void 0:t.txReceipt,l=(null==t||null===(i=t.txReceipt)||void 0===i?void 0:i.type)===be.dE.feeMarket;if((0,Da.X)(e,o)){if(!(c&&t&&t.postTxBalance&&t.preTxBalance))return null;if(t.swapMetaData&&t.preTxBalance===t.postTxBalance)return t.swapMetaData.token_to_amount;let e=new _s.D("0x0",16);a&&a.txReceipt&&(e=new _s.D(Ua(a.txReceipt.gasUsed,l?a.txReceipt.effectiveGasPrice:a.txParams.gasPrice),16));const r=Ua(c.gasUsed,l?c.effectiveGasPrice:t.txParams.gasPrice),s=new _s.D(r,16).add(e),n=new _s.D(t.preTxBalance,16).minus(s);return new _s.D(t.postTxBalance,16,Is.E.WEI).minus(n).toDenomination(Is.E.ETH).toBase(10).round(6).toString()}const d=null==c?void 0:c.logs;if(d&&"0x0"!==(null==c?void 0:c.status)){const e=d.find((e=>{const t=e.topics&&"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"===e.topics[0],n=e.address===r,a=e.topics&&e.topics[2]&&e.topics[2].match(s.slice(2));return t&&n&&a}));return e?(u=Fa(e.data,n).toString(10),p=6,new(Yt())(u).toPrecision(p).replace(/(\.[0-9]*[1-9])0*|(\.0*)/u,"$1")):""}var u,p;return null}const Ga="fee-market",ja="legacy";var Ha=r(64914),$a=r.n(Ha);const qa={from:Fe.L_,to:(e,t)=>t?(0,Fe.L_)(e).toLowerCase():(0,Fe.L_)(e),nonce:Fe.L_,value:Fe.L_,data:Fe.L_,gas:Fe.L_,gasPrice:Fe.L_,maxFeePerGas:Fe.L_,maxPriorityFeePerGas:Fe.L_,type:Fe.L_,estimateSuggested:e=>e,estimateUsed:e=>e};function Ka(e,t=!0){const r=Va(e,t);return Ya(r),r}function Va(e,t=!0){const r={};for(const s in qa)e[s]&&(r[s]=qa[s](e[s],t));return r}function Wa(e,t,r){if(void 0!==e[r])throw y.ethErrors.rpc.invalidParams(`Invalid transaction params: specified ${t} but also included ${r}, these cannot be mixed`)}function Qa(e,t){if("string"!=typeof e[t])throw y.ethErrors.rpc.invalidParams(`Invalid transaction params: ${t} is not a string. got: (${e[t]})`)}function za(e,t){switch(t){case"maxFeePerGas":case"maxPriorityFeePerGas":if(e.type&&e.type!==be.dE.feeMarket)throw y.ethErrors.rpc.invalidParams(`Invalid transaction envelope type: specified type "${e.type}" but including maxFeePerGas and maxPriorityFeePerGas requires type: "${be.dE.feeMarket}"`);break;default:if(e.type&&e.type===be.dE.feeMarket)throw y.ethErrors.rpc.invalidParams(`Invalid transaction envelope type: specified type "${e.type}" but included a gasPrice instead of maxFeePerGas and maxPriorityFeePerGas`)}}function Ya(e,t=!0){if(!e||"object"!=typeof e||Array.isArray(e))throw y.ethErrors.rpc.invalidParams("Invalid transaction params: must be an object.");if(!e.to&&!e.data)throw y.ethErrors.rpc.invalidParams('Invalid transaction params: must specify "data" for contract deployments, or "to" (and optionally "data") for all other types of transactions.');if(ws({txParams:e})&&!t)throw y.ethErrors.rpc.invalidParams("Invalid transaction params: params specify an EIP-1559 transaction but the current network does not support EIP-1559");Object.entries(e).forEach((([t,r])=>{switch(t){case"from":!function(e){if("string"!=typeof e.from)throw y.ethErrors.rpc.invalidParams(`Invalid "from" address "${e.from}": not a string.`);if(!(0,et.Pv)(e.from,{allowNonPrefixed:!1}))throw y.ethErrors.rpc.invalidParams('Invalid "from" address.')}(e);break;case"to":!function(e){if("0x"===e.to||null===e.to){if(!e.data)throw y.ethErrors.rpc.invalidParams('Invalid "to" address.');delete e.to}else if(void 0!==e.to&&!(0,et.Pv)(e.to,{allowNonPrefixed:!1}))throw y.ethErrors.rpc.invalidParams('Invalid "to" address.')}(e);break;case"gasPrice":za(e,"gasPrice"),Wa(e,"gasPrice","maxFeePerGas"),Wa(e,"gasPrice","maxPriorityFeePerGas"),Qa(e,"gasPrice");break;case"maxFeePerGas":za(e,"maxFeePerGas"),Wa(e,"maxFeePerGas","gasPrice"),Qa(e,"maxFeePerGas");break;case"maxPriorityFeePerGas":za(e,"maxPriorityFeePerGas"),Wa(e,"maxPriorityFeePerGas","gasPrice"),Qa(e,"maxPriorityFeePerGas");break;case"value":if(Qa(e,"value"),r.toString().includes("-"))throw y.ethErrors.rpc.invalidParams(`Invalid transaction value "${r}": not a positive number.`);if(r.toString().includes("."))throw y.ethErrors.rpc.invalidParams(`Invalid transaction value of "${r}": number must be in wei.`);if(!r.match(/^0x[a-fA-F0-9]+$/u))throw y.ethErrors.rpc.invalidParams(`Invalid transaction value of "${r}": not a valid hex string.`);break;case"chainId":if("number"!=typeof r&&"string"!=typeof r)throw y.ethErrors.rpc.invalidParams(`Invalid transaction params: ${t} is not a Number or hex string. got: (${r})`);break;case"data":!function(e){if(null!==e){const t=new ms.vU($a());try{t.parseTransaction({data:e})}catch(e){if(e.message.match(/BUFFER_OVERRUN/))throw y.ethErrors.rpc.invalidParams("Invalid transaction params: data out-of-bounds, BUFFER_OVERRUN.")}}}(r),Qa(e,"data");break;default:Qa(e,t)}}))}function Xa(e){return"string"==typeof e?e:e.toString(16)}const Ja="There was an error when resubmitting this transaction.";class Za extends(_r()){constructor({initState:e,txHistoryLimit:t,getNetworkState:r,getCurrentChainId:s}){super(),this.store=new m.ObservableStore({transactions:{},...e}),this.txHistoryLimit=t,this.getNetworkState=r,this.getCurrentChainId=s}generateTxMeta(e={}){var t;const r=this.getNetworkState(),s=this.getCurrentChainId();if("loading"===r)throw new Error("MetaMask is having trouble connecting to the network");let n=null;return e.txParams&&"string"==typeof e.origin&&e.origin!==C.jr&&(void 0!==e.txParams.gasPrice?n={gasPrice:e.txParams.gasPrice}:void 0===e.txParams.maxFeePerGas&&void 0===e.txParams.maxPriorityFeePerGas||(n={maxPriorityFeePerGas:e.txParams.maxPriorityFeePerGas,maxFeePerGas:e.txParams.maxFeePerGas}),void 0!==e.txParams.gas&&(n={...n,gas:e.txParams.gas})),{id:(0,At.Z)(),time:(new Date).getTime(),status:be.LN.unapproved,metamaskNetworkId:r,originalGasEstimate:null===(t=e.txParams)||void 0===t?void 0:t.gas,userEditedGasLimit:!1,chainId:s,loadingDefaults:!0,dappSuggestedGasFees:n,sendFlowHistory:[],...e}}getUnapprovedTxList(){const e=this.getCurrentChainId(),t=this.getNetworkState();return(0,de.pickBy)(this.store.getState().transactions,(r=>r.status===be.LN.unapproved&&Ts(r,e,t)))}getApprovedTransactions(e){const t={status:be.LN.approved};return e&&(t.from=e),this.getTransactions({searchCriteria:t})}getPendingTransactions(e){const t={status:be.LN.submitted};return e&&(t.from=e),this.getTransactions({searchCriteria:t})}getConfirmedTransactions(e){const t={status:be.LN.confirmed};return e&&(t.from=e),this.getTransactions({searchCriteria:t})}getTransactionWithActionId(e){return(0,de.values)((0,de.pickBy)(this.store.getState().transactions,(t=>t.actionId===e)))[0]}addTransaction(e){e.txParams&&(e.txParams=Ka(e.txParams,!1)),this.once(`${e.id}:signed`,(()=>{this.removeAllListeners(`${e.id}:rejected`)})),this.once(`${e.id}:rejected`,(()=>{this.removeAllListeners(`${e.id}:signed`)})),e.history=[];const t=_e(e);e.history.push(t);const r=this.getTransactions({filterToCurrentNetwork:!1}),{txHistoryLimit:s}=this,n=new Set,a=r.reverse().filter((e=>{const{nonce:t,from:r}=e.txParams,{chainId:a,metamaskNetworkId:o,status:i}=e,c=`${t}-${null!=a?a:o}-${r}`;return!n.has(c)&&(!(n.size<s-1||!1===[be.LN.rejected,be.LN.confirmed,be.LN.failed,be.LN.dropped].includes(i))||(n.add(c),!1))})).map((e=>e.id));return this._deleteTransactions(a),this._addTransactionsToState([e]),e}addExternalTransaction(e){var t;const r=null==e||null===(t=e.txParams)||void 0===t?void 0:t.from,s=this.getConfirmedTransactions(r);return(({txMeta:e,pendingTransactions:t,confirmedTransactions:r}={})=>{if(!e||!e.txParams)throw y.ethErrors.rpc.invalidParams('"txMeta" or "txMeta.txParams" is missing');if(e.status!==be.LN.confirmed)throw y.ethErrors.rpc.invalidParams('External transaction status should be "confirmed"');const s=e.txParams.nonce;if(t&&t.length>0&&t.find((e=>{var t;return(null===(t=e.txParams)||void 0===t?void 0:t.nonce)===s})))throw y.ethErrors.rpc.invalidParams("External transaction nonce should not be in pending txs");if(r&&r.length>0&&r.find((e=>{var t;return(null===(t=e.txParams)||void 0===t?void 0:t.nonce)===s})))throw y.ethErrors.rpc.invalidParams("External transaction nonce should not be in confirmed txs")})({txMeta:e,pendingTransactions:this.getPendingTransactions(r),confirmedTransactions:s}),this._addTransactionsToState([e]),e}getTransaction(e){const{transactions:t}=this.store.getState();return t[e]}updateTransaction(e,t){if(e.txParams)try{e.txParams=Ka(e.txParams,!1)}catch(t){if(e.warning.message!==Ja)throw t;return void this.setTxStatusFailed(e.id,t)}this._updateTransactionHistory(e,t)}_updateTransactionHistory(e,t){const r=_e(e),s=(n=e.history,(0,de.cloneDeep)(n).reduce(((e,t)=>Ae.default.applyPatch(e,t).newDocument)));var n;const a=Ie(s,r,t);a.length&&e.history.push(a);const o=e.id;this.store.updateState({transactions:{...this.store.getState().transactions,[o]:e}})}getTransactions({searchCriteria:e={},initialList:t,filterToCurrentNetwork:r=!0,limit:s}={}){const n=this.getCurrentChainId(),a=this.getNetworkState(),o=(0,de.mapValues)(e,(e=>"function"==typeof e?e:t=>t===e)),i=t?(0,de.keyBy)(t,"id"):this.store.getState().transactions,c=(0,de.sortBy)((0,de.pickBy)(i,(e=>{if(r&&!1===Ts(e,n,a))return!1;for(const[t,r]of Object.entries(o))if(t in e.txParams){if(!1===r(e.txParams[t]))return!1}else if(!1===r(e[t]))return!1;return!0})),"time");if(void 0!==s){const e=new Set,t=[];for(let r=c.length-1;r>-1;r--){const n=c[r],{nonce:a}=n.txParams;if(!e.has(a)){if(!(e.size<s))continue;e.add(a)}t.unshift(n)}return t}return c}setTxStatusRejected(e){this._setTransactionStatus(e,be.LN.rejected),this._deleteTransaction(e)}setTxStatusUnapproved(e){this._setTransactionStatus(e,be.LN.unapproved)}setTxStatusApproved(e){this._setTransactionStatus(e,be.LN.approved)}setTxStatusSigned(e){this._setTransactionStatus(e,be.LN.signed)}setTxStatusSubmitted(e){const t=this.getTransaction(e);t.submittedTime=(new Date).getTime(),this.updateTransaction(t,"txStateManager - add submitted time stamp"),this._setTransactionStatus(e,be.LN.submitted)}setTxStatusConfirmed(e){this._setTransactionStatus(e,be.LN.confirmed)}setTxStatusDropped(e){this._setTransactionStatus(e,be.LN.dropped)}setTxStatusFailed(e,t){var r;const s=t||new Error("Internal metamask failure"),n=this.getTransaction(e);n.err={message:(null===(r=s.message)||void 0===r?void 0:r.toString())||s.toString(),rpc:s.value,stack:s.stack},this._updateTransactionHistory(n,"transactions:tx-state-manager#fail - add error"),this._setTransactionStatus(e,be.LN.failed)}wipeTransactions(e){const{transactions:t}=this.store.getState(),r=this.getNetworkState(),s=this.getCurrentChainId();this.store.updateState({transactions:(0,de.omitBy)(t,(t=>t.txParams.from===e&&Ts(t,s,r)))})}clearUnapprovedTxs(){this.store.updateState({transactions:(0,de.omitBy)(this.store.getState().transactions,(e=>e.status===be.LN.unapproved))})}_setTransactionStatus(e,t){const r=this.getTransaction(e);if(r){r.status=t;try{this._updateTransactionHistory(r,`txStateManager: setting status to ${t}`),this.emit(`${r.id}:${t}`,e),this.emit("tx:status-update",e,t),[be.LN.submitted,be.LN.rejected,be.LN.failed].includes(t)&&this.emit(`${r.id}:finished`,r),this.emit(Ni.UPDATE_BADGE)}catch(e){p().error(e)}}}_addTransactionsToState(e){this.store.updateState({transactions:e.reduce(((e,t)=>(e[t.id]=t,e)),this.store.getState().transactions)})}_deleteTransaction(e){const{transactions:t}=this.store.getState();delete t[e],this.store.updateState({transactions:t})}_deleteTransactions(e){const{transactions:t}=this.store.getState();e.forEach((e=>{delete t[e]})),this.store.updateState({transactions:t})}}class eo{constructor(e){this.query=new(Ta())(e)}async analyzeGasUsage(e){const t=await this.query.getBlockByNumber("latest",!1),r=(0,Fe.mh)(t.gasLimit);let s,n=Rs((0,Fe.Wu)(r,19,20));try{n=await this.estimateTxGas(e)}catch(e){p().warn(e),s={reason:e.message,errorKey:e.errorKey,debug:{blockNumber:t.number,blockGasLimit:t.gasLimit}}}return{blockGasLimit:t.gasLimit,estimatedGasHex:n,simulationFails:s}}async estimateTxGas(e){const t=(0,de.cloneDeep)(e.txParams);return delete t.gasPrice,delete t.maxFeePerGas,delete t.maxPriorityFeePerGas,await this.query.estimateGas(t)}addGasBuffer(e,t,r=1.5){const s=(0,Fe.mh)(e),n=(0,Fe.mh)(t).muln(.9),a=s.muln(r);return s.gt(n)?Rs(s):a.lt(n)?Rs(a):Rs(n)}async getBufferedGasLimit(e,t){const{blockGasLimit:r,estimatedGasHex:s,simulationFails:n}=await this.analyzeGasUsage(e);return{gasLimit:this.addGasBuffer((0,gs.addHexPrefix)(s),r,t),simulationFails:n}}}function to(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class ro extends(_r()){constructor(e){super(),to(this,"DROPPED_BUFFER_COUNT",3),to(this,"droppedBlocksBufferByHash",new Map),this.query=e.query||new(Ta())(e.provider),this.nonceTracker=e.nonceTracker,this.getPendingTransactions=e.getPendingTransactions,this.getCompletedTransactions=e.getCompletedTransactions,this.publishTransaction=e.publishTransaction,this.approveTransaction=e.approveTransaction,this.confirmTransaction=e.confirmTransaction}async updatePendingTxs(){const e=await this.nonceTracker.getGlobalLock();try{const e=this.getPendingTransactions();await Promise.all(e.map((e=>this._checkPendingTx(e))))}catch(e){p().error("PendingTransactionTracker - Error updating pending transactions"),p().error(e)}e.releaseLock()}async resubmitPendingTxs(e){const t=this.getPendingTransactions();if(t.length)for(const n of t)try{await this._resubmitTx(n,e)}catch(e){var r,s;const t=(null===(r=e.value)||void 0===r||null===(s=r.message)||void 0===s?void 0:s.toLowerCase())||e.message.toLowerCase();if(t.includes("replacement transaction underpriced")||t.includes("known transaction")||t.includes("gas price too low to replace")||t.includes("transaction with the same hash was already imported")||t.includes("gateway timeout")||t.includes("nonce too low"))return;n.warning={error:t,message:Ja},this.emit("tx:warning",n,e)}}async _resubmitTx(e,t){e.firstRetryBlockNumber||this.emit("tx:block-update",e,t);const r=e.firstRetryBlockNumber||t,s=Number.parseInt(t,16)-Number.parseInt(r,16),n=e.retryCount||0;if(s<Math.min(50,Math.pow(2,n)))return;if(!("rawTx"in e))return this.approveTransaction(e.id);const{rawTx:a}=e,o=await this.publishTransaction(a);return this.emit("tx:retry",e),o}async _checkPendingTx(e){const t=e.hash,r=e.id;if(e.status===be.LN.submitted){if(!t){const e=new Error("We had an error while submitting this transaction, please try again.");return e.name="NoTxHashError",void this.emit("tx:failed",r,e)}if(await this._checkIfNonceIsTaken(e))this.emit("tx:dropped",r);else{try{const e=await this.query.getTransactionReceipt(t);if(null!=e&&e.blockNumber){const{baseFeePerGas:t,timestamp:s}=await this.query.getBlockByHash(null==e?void 0:e.blockHash,!1);return void this.emit("tx:confirmed",r,e,t,s)}}catch(t){return e.warning={error:t.message,message:"There was a problem loading this transaction."},void this.emit("tx:warning",e,t)}await this._checkIfTxWasDropped(e)&&this.emit("tx:dropped",r)}}}async _checkIfTxWasDropped(e){const{hash:t,txParams:{nonce:r,from:s}}=e,n=await this.query.getTransactionCount(s);if(parseInt(r,16)>=n.toNumber())return!1;this.droppedBlocksBufferByHash.has(t)||this.droppedBlocksBufferByHash.set(t,0);const a=this.droppedBlocksBufferByHash.get(t);return a<this.DROPPED_BUFFER_COUNT?(this.droppedBlocksBufferByHash.set(t,a+1),!1):(this.droppedBlocksBufferByHash.delete(t),!0)}async _checkIfNonceIsTaken(e){const t=e.txParams.from;return this.getCompletedTransactions(t).some((t=>!(t.id===e.id)&&t.txParams.nonce===e.txParams.nonce))}}const so=[be.iU.swap,be.iU.swapApproval],no=[...so,be.iU.simpleSend,be.iU.tokenMethodTransfer,be.iU.tokenMethodTransferFrom,be.iU.contractInteraction],ao="failed on-chain";class oo extends(_r()){constructor(e){super(),this.getNetworkState=e.getNetworkState,this._getCurrentChainId=e.getCurrentChainId,this.getProviderConfig=e.getProviderConfig,this._getCurrentNetworkEIP1559Compatibility=e.getCurrentNetworkEIP1559Compatibility,this._getCurrentAccountEIP1559Compatibility=e.getCurrentAccountEIP1559Compatibility,this.preferencesStore=e.preferencesStore||new m.ObservableStore({}),this.provider=e.provider,this.getPermittedAccounts=e.getPermittedAccounts,this.blockTracker=e.blockTracker,this.signEthTx=e.signTransaction,this.inProcessOfSigning=new Set,this._trackMetaMetricsEvent=e.trackMetaMetricsEvent,this._getParticipateInMetrics=e.getParticipateInMetrics,this._getEIP1559GasFeeEstimates=e.getEIP1559GasFeeEstimates,this.createEventFragment=e.createEventFragment,this.updateEventFragment=e.updateEventFragment,this.finalizeEventFragment=e.finalizeEventFragment,this.getEventFragmentById=e.getEventFragmentById,this.getDeviceModel=e.getDeviceModel,this.getAccountType=e.getAccountType,this.getTokenStandardAndDetails=e.getTokenStandardAndDetails,this.securityProviderRequest=e.securityProviderRequest,this.memStore=new m.ObservableStore({}),this.resetState=()=>{this._updateMemstore()},this.query=new(Ta())(this.provider),this.txGasUtil=new eo(this.provider),this._mapMethods(),this.txStateManager=new Za({initState:e.initState,txHistoryLimit:e.txHistoryLimit,getNetworkState:this.getNetworkState,getCurrentChainId:e.getCurrentChainId}),this.store=this.txStateManager.store,this.nonceTracker=new(Ma())({provider:this.provider,blockTracker:this.blockTracker,getPendingTransactions:(...t)=>[...this.txStateManager.getPendingTransactions(...t),...e.getExternalPendingTransactions(...t)],getConfirmedTransactions:this.txStateManager.getConfirmedTransactions.bind(this.txStateManager)}),this.pendingTxTracker=new ro({provider:this.provider,nonceTracker:this.nonceTracker,publishTransaction:e=>this.query.sendRawTransaction(e),getPendingTransactions:()=>[...this.txStateManager.getPendingTransactions(),...this.txStateManager.getApprovedTransactions()],approveTransaction:this.approveTransaction.bind(this),getCompletedTransactions:this.txStateManager.getConfirmedTransactions.bind(this.txStateManager)}),this.txStateManager.store.subscribe((()=>this.emit(Ni.UPDATE_BADGE))),this._setupListeners(),this._updateMemstore(),this.txStateManager.store.subscribe((()=>this._updateMemstore())),e.onNetworkStateChange((()=>{this._onBootCleanUp(),this._updateMemstore()})),this._updatePendingTxsAfterFirstBlock(),this._onBootCleanUp()}getChainId(){const e=this.getNetworkState(),t=this._getCurrentChainId(),r=parseInt(t,16);return"loading"===e||Number.isNaN(r)?0:r}async getEIP1559Compatibility(e){const t=await this._getCurrentNetworkEIP1559Compatibility(),r=await this._getCurrentAccountEIP1559Compatibility(e);return t&&r}async getCommonConfiguration(e){const{type:t,nickname:r}=this.getProviderConfig(),s=await this.getEIP1559Compatibility(e)?Ct.iB.LONDON:Ct.iB.BERLIN;if(t!==Ct.Qv.RPC&&t!==Ct.Qv.SEPOLIA)return new(ka())({chain:t,hardfork:s});const n=parseInt(this._getCurrentChainId(),16),a=this.getNetworkState(),o={name:r,chainId:n,networkId:"loading"===a?0:parseInt(a,10)};return ka().forCustomChain(Ct.Qv.MAINNET,o,s)}addTransaction(e){this.txStateManager.addTransaction(e),this.emit(`${e.id}:unapproved`,e),this._trackTransactionMetricsEvent(e,be.d0.added,e.actionId)}wipeTransactions(e){this.txStateManager.wipeTransactions(e)}async newUnapprovedTransaction(e,t={}){p().debug(`MetaMaskController newUnapprovedTransaction ${JSON.stringify(e)}`);const r=await this.addUnapprovedTransaction(t.method,e,t.origin,void 0,void 0,t.id);return new Promise(((e,t)=>{this.txStateManager.once(`${r.id}:finished`,(r=>{switch(r.status){case be.LN.submitted:return e(r.hash);case be.LN.rejected:return t(Ea(y.ethErrors.provider.userRejectedRequest("MetaMask Tx Signature: User denied transaction signature.")));case be.LN.failed:return t(Ea(y.ethErrors.rpc.internal(r.err.message)));default:return t(Ea(y.ethErrors.rpc.internal(`MetaMask Tx Signature: Unknown problem: ${JSON.stringify(r.txParams)}`)))}}))}))}_getTransaction(e){const{transactions:t}=this.store.getState();return t[e]}_isUnapprovedTransaction(e){return this.txStateManager.getTransaction(e).status===be.LN.unapproved}_throwErrorIfNotUnapprovedTx(e,t){if(!this._isUnapprovedTransaction(e))throw new Error(`TransactionsController: Can only call ${t} on an unapproved transaction.\n         Current tx status: ${this.txStateManager.getTransaction(e).status}`)}_updateTransaction(e,t,r){const s=this.txStateManager.getTransaction(e),n=(0,de.merge)(s,t);this.txStateManager.updateTransaction(n,r)}updatePreviousGasParams(e,{maxFeePerGas:t,maxPriorityFeePerGas:r,gasLimit:s}){const n={previousGas:{maxFeePerGas:t,maxPriorityFeePerGas:r,gasLimit:s}};n.previousGas=(0,de.pickBy)(n.previousGas);const a=`Update Previous Gas for ${e}`;return this._updateTransaction(e,n,a),this._getTransaction(e)}async updateEditableParams(e,{data:t,from:r,to:s,value:n,gas:a,gasPrice:o}){this._throwErrorIfNotUnapprovedTx(e,"updateEditableParams");const i={txParams:{data:t,from:r,to:s,value:n,gas:a,gasPrice:o}};i.txParams=(0,de.pickBy)(i.txParams,(e=>void 0!==e));const c=this._getTransaction(e),{type:l}=await bs({...c.txParams,...i.txParams},this.query);i.type=l;const d=`Update Editable Params for ${e}`;return this._updateTransaction(e,i,d),this._getTransaction(e)}updateTransactionGasFees(e,{gas:t,gasLimit:r,gasPrice:s,maxPriorityFeePerGas:n,maxFeePerGas:a,estimateUsed:o,estimateSuggested:i,defaultGasEstimates:c,originalGasEstimate:l,userEditedGasLimit:d,userFeeLevel:u}){this._throwErrorIfNotUnapprovedTx(e,"updateTransactionGasFees");let p={txParams:{gas:t,gasLimit:r,gasPrice:s,maxPriorityFeePerGas:n,maxFeePerGas:a},estimateUsed:o,estimateSuggested:i,defaultGasEstimates:c,originalGasEstimate:l,userEditedGasLimit:d,userFeeLevel:u};p.txParams=(0,de.pickBy)(p.txParams),p=(0,de.pickBy)(p);const h=`Update Transaction Gas Fees for ${e}`;return this._updateTransaction(e,p,h),this._getTransaction(e)}updateTransactionEstimatedBaseFee(e,{estimatedBaseFee:t,decEstimatedBaseFee:r}){this._throwErrorIfNotUnapprovedTx(e,"updateTransactionEstimatedBaseFee");let s={estimatedBaseFee:t,decEstimatedBaseFee:r};s=(0,de.pickBy)(s);const n=`Update Transaction Estimated Base Fees for ${e}`;return this._updateTransaction(e,s,n),this._getTransaction(e)}updateSwapApprovalTransaction(e,{type:t,sourceTokenSymbol:r}){this._throwErrorIfNotUnapprovedTx(e,"updateSwapApprovalTransaction");let s={type:t,sourceTokenSymbol:r};s=(0,de.pickBy)(s);const n=`Update Swap Approval Transaction for ${e}`;return this._updateTransaction(e,s,n),this._getTransaction(e)}updateSwapTransaction(e,{sourceTokenSymbol:t,destinationTokenSymbol:r,type:s,destinationTokenDecimals:n,destinationTokenAddress:a,swapMetaData:o,swapTokenValue:i,estimatedBaseFee:c,approvalTxId:l}){this._throwErrorIfNotUnapprovedTx(e,"updateSwapTransaction");let d={sourceTokenSymbol:t,destinationTokenSymbol:r,type:s,destinationTokenDecimals:n,destinationTokenAddress:a,swapMetaData:o,swapTokenValue:i,estimatedBaseFee:c,approvalTxId:l};d=(0,de.pickBy)(d);const u=`Update Swap Transaction for ${e}`;return this._updateTransaction(e,d,u),this._getTransaction(e)}updateTransactionUserSettings(e,{userEditedGasLimit:t,userFeeLevel:r}){this._throwErrorIfNotUnapprovedTx(e,"updateTransactionUserSettings");let s={userEditedGasLimit:t,userFeeLevel:r};s=(0,de.pickBy)(s);const n=`Update User Settings for ${e}`;return this._updateTransaction(e,s,n),this._getTransaction(e)}updateTransactionSendFlowHistory(e,t,r){var s;this._throwErrorIfNotUnapprovedTx(e,"updateTransactionSendFlowHistory");const n=this._getTransaction(e);if(t===((null==n||null===(s=n.sendFlowHistory)||void 0===s?void 0:s.length)||0)){var a;const t=`Update sendFlowHistory for ${e}`;this.txStateManager.updateTransaction({...n,sendFlowHistory:[...null!==(a=null==n?void 0:n.sendFlowHistory)&&void 0!==a?a:[],...r]},t)}return this._getTransaction(e)}async addTransactionGasDefaults(e){const t=await async function(e,t){const{to:r}=e,{contractCode:s}=await(0,vs.N)(t,r);return s}(e.txParams,this.query);let r=e;try{r=await this.addTxGasDefaults(e,t)}catch(t){throw p().warn(t),r=this.txStateManager.getTransaction(e.id),r.loadingDefaults=!1,this.txStateManager.updateTransaction(e,"Failed to calculate gas defaults."),t}return r.loadingDefaults=!1,this.txStateManager.updateTransaction(r,"Added new unapproved transaction."),r}async addUnapprovedTransaction(e,t,r,s,n=[],a){if(void 0!==s&&!no.includes(s))throw new Error(`TransactionController - invalid transactionType value: ${s}`);if(a){let e=this.txStateManager.getTransactionWithActionId(a);if(e)return this.emit("newUnapprovedTx",e),e=await this.addTransactionGasDefaults(e),e}const o=Va(t);Ya(o,await this.getEIP1559Compatibility());let i=this.txStateManager.generateTxMeta({txParams:o,origin:r,sendFlowHistory:n});if(a&&(i.actionId=a),r===C.jr){if(o.from!==this.getSelectedAddress())throw y.ethErrors.rpc.internal({message:"Internally initiated transaction is using invalid account.",data:{origin:r,fromAddress:o.from,selectedAddress:this.getSelectedAddress()}})}else{if(!(await this.getPermittedAccounts(r)).includes(o.from))throw y.ethErrors.provider.unauthorized({data:{origin:r}})}const{type:c}=await bs(o,this.query);if(i.type=s||c,i.txParams.value=i.txParams.value?(0,Fe.L_)(i.txParams.value):"0x0",e&&this.securityProviderRequest){const t=await this.securityProviderRequest(i,e);i.securityProviderResponse=t}return this.addTransaction(i),this.emit("newUnapprovedTx",i),i=await this.addTransactionGasDefaults(i),i}async addTxGasDefaults(e,t){const r=e.txParams.type!==be.dE.legacy&&await this.getEIP1559Compatibility(),{gasPrice:s,maxFeePerGas:n,maxPriorityFeePerGas:a}=await this._getDefaultGasFees(e,r),{gasLimit:o,simulationFails:i}=await this._getDefaultGasLimit(e,t);if(e=this.txStateManager.getTransaction(e.id),i&&(e.simulationFails=i),r){const t=this.getAdvancedGasFee();Boolean(t)&&!so.includes(e.type)?(e.userFeeLevel=Ra,e.txParams.maxFeePerGas=Ns(t.maxBaseFee),e.txParams.maxPriorityFeePerGas=Ns(t.priorityFee)):!e.txParams.gasPrice||e.txParams.maxFeePerGas||e.txParams.maxPriorityFeePerGas?(n&&a&&!e.txParams.maxFeePerGas&&!e.txParams.maxPriorityFeePerGas||e.origin===C.jr?e.userFeeLevel=Na.medium:e.userFeeLevel=xa.dAppSuggested,n&&!e.txParams.maxFeePerGas&&(e.txParams.maxFeePerGas=n),a&&!e.txParams.maxPriorityFeePerGas&&(e.txParams.maxPriorityFeePerGas=a),s&&!e.txParams.maxFeePerGas&&(e.txParams.maxFeePerGas=s),e.txParams.maxFeePerGas&&!e.txParams.maxPriorityFeePerGas&&(e.txParams.maxPriorityFeePerGas=e.txParams.maxFeePerGas)):(e.txParams.maxFeePerGas=e.txParams.gasPrice,e.txParams.maxPriorityFeePerGas=e.txParams.gasPrice,e.origin===C.jr?e.userFeeLevel=Ra:e.userFeeLevel=xa.dAppSuggested),delete e.txParams.gasPrice}else delete e.txParams.maxPriorityFeePerGas,delete e.txParams.maxFeePerGas;return!s||e.txParams.gasPrice||e.txParams.maxPriorityFeePerGas||e.txParams.maxFeePerGas||(e.txParams.gasPrice=s),o&&!e.txParams.gas&&(e.txParams.gas=o,e.originalGasEstimate=o),e.defaultGasEstimates={estimateType:e.userFeeLevel,gas:e.txParams.gas,gasPrice:e.txParams.gasPrice,maxFeePerGas:e.txParams.maxFeePerGas,maxPriorityFeePerGas:e.txParams.maxPriorityFeePerGas},e}async _getDefaultGasFees(e,t){if(!t&&e.txParams.gasPrice||t&&e.txParams.maxFeePerGas&&e.txParams.maxPriorityFeePerGas)return{};try{const{gasFeeEstimates:e,gasEstimateType:r}=await this._getEIP1559GasFeeEstimates();if(t&&r===_a.feeMarket){const{medium:{suggestedMaxPriorityFeePerGas:t,suggestedMaxFeePerGas:r}={}}=e;if(t&&r)return{maxFeePerGas:Ns(r),maxPriorityFeePerGas:Ns(t)}}else{if(r===_a.legacy)return{gasPrice:Ns(e.medium)};if(r===_a.ethGasPrice)return{gasPrice:Ns(e.gasPrice)}}}catch(e){console.error(e)}const r=await this.query.gasPrice();return{gasPrice:r&&(0,Fe.L_)(r.toString(16))}}async _getDefaultGasLimit(e){const t=this._getCurrentChainId(),r=Ct.EQ[t],s=(0,Fe.B9)(t);if(e.txParams.gas)return{};if(e.txParams.to&&e.type===be.iU.simpleSend&&"custom"!==s&&!e.txParams.data)return{gasLimit:Ia.SIMPLE};const{blockGasLimit:n,estimatedGasHex:a,simulationFails:o}=await this.txGasUtil.analyzeGasUsage(e);return{gasLimit:this.txGasUtil.addGasBuffer((0,Fe.L_)(a),n,r),simulationFails:o}}generateNewGasParams(e,t={},r=11){const{txParams:s}=e,n={},a={};var o;t.gasLimit&&(a.gas=null!==(o=null==t?void 0:t.gas)&&void 0!==o?o:Ia.SIMPLE);return t.estimateSuggested&&(a.estimateSuggested=t.estimateSuggested),t.estimateUsed&&(a.estimateUsed=t.estimateUsed),ws(e)?(n.maxFeePerGas=s.maxFeePerGas,n.maxPriorityFeePerGas=s.maxPriorityFeePerGas,a.maxFeePerGas=(null==t?void 0:t.maxFeePerGas)||Rs((0,Fe.Wu)((0,Fe.mh)(s.maxFeePerGas),r,10)),a.maxPriorityFeePerGas=(null==t?void 0:t.maxPriorityFeePerGas)||Rs((0,Fe.Wu)((0,Fe.mh)(s.maxPriorityFeePerGas),r,10))):(n.gasPrice=s.gasPrice,a.gasPrice=(null==t?void 0:t.gasPrice)||Rs((0,Fe.Wu)((0,Fe.mh)(s.gasPrice),r,10))),{previousGasParams:n,newGasParams:a}}async createCancelTransaction(e,t,{estimatedBaseFee:r,actionId:s}={}){if(s){const e=this.txStateManager.getTransactionWithActionId(s);if(e)return e}const n=this.txStateManager.getTransaction(e),{txParams:a}=n,{from:o,nonce:i}=a,{previousGasParams:c,newGasParams:l}=this.generateNewGasParams(n,{...t,gasLimit:t.gasLimit||Ia.SIMPLE}),d=this.txStateManager.generateTxMeta({txParams:{from:o,to:o,nonce:i,value:"0x0",...l},previousGasParams:c,loadingDefaults:!1,status:be.LN.approved,type:be.iU.cancel,actionId:s});return r&&(d.estimatedBaseFee=r),this.addTransaction(d),await this.approveTransaction(d.id,s),d}async createSpeedUpTransaction(e,t,{estimatedBaseFee:r,actionId:s}={}){if(s){const e=this.txStateManager.getTransactionWithActionId(s);if(e)return e}const n=this.txStateManager.getTransaction(e),{txParams:a}=n,{previousGasParams:o,newGasParams:i}=this.generateNewGasParams(n,t),c=this.txStateManager.generateTxMeta({txParams:{...a,...i},previousGasParams:o,loadingDefaults:!1,status:be.LN.approved,type:be.iU.retry,originalType:n.type,actionId:s});return r&&(c.estimatedBaseFee=r),this.addTransaction(c),await this.approveTransaction(c.id,s),c}async updateTransaction(e){this.txStateManager.updateTransaction(e,"confTx: user updated transaction")}async updateAndApproveTransaction(e,t){this.txStateManager.updateTransaction(e,"confTx: user approved transaction"),await this.approveTransaction(e.id,t)}async approveTransaction(e,t){const r=this.txStateManager.getTransaction(e);if(this.inProcessOfSigning.has(e))return;let s;this.inProcessOfSigning.add(e);try{this.txStateManager.setTxStatusApproved(e);const n=r.txParams.from;let{customNonceValue:a}=r;a=Number(a),s=await this.nonceTracker.getNonceLock(n);const o=r.previousGasParams?r.txParams.nonce:s.nextNonce,i=0===a?a:a||o;r.txParams.nonce=(0,Fe.L_)(i.toString(16)),r.nonceDetails=s.nonceDetails,a&&(r.nonceDetails.customNonceValue=a),this.txStateManager.updateTransaction(r,"transactions#approveTransaction");const c=await this.signTransaction(e);await this.publishTransaction(e,c,t),this._trackTransactionMetricsEvent(r,be.d0.approved,t),s.releaseLock()}catch(r){try{this._failTransaction(e,r,t)}catch(e){p().error(e)}throw s&&s.releaseLock(),r}finally{this.inProcessOfSigning.delete(e)}}async approveTransactionsWithSameNonce(e=[]){if(0===e.length)return"";const t=e[0],r=await this.getCommonConfiguration(t.from),s=ba.TransactionFactory.fromTxData(t,{common:r}),n=(0,gs.bufferToHex)(s.serialize());if(this.inProcessOfSigning.has(n))return"";let a,o;this.inProcessOfSigning.add(n);try{const r=t.from;o=await this.nonceTracker.getNonceLock(r);const s=o.nextNonce;a=await Promise.all(e.map((e=>(e.nonce=(0,Fe.L_)(s.toString(16)),this.signExternalTransaction(e)))))}catch(e){throw p().error(e),e}finally{o&&o.releaseLock(),this.inProcessOfSigning.delete(n)}return a}async signExternalTransaction(e){const t=Va(e),r=this.getChainId(),s=ws({txParams:t})?be.dE.feeMarket:be.dE.legacy,n={...t,type:s,gasLimit:t.gas,chainId:new _s.D(r,10).toPrefixedHexString()},a=n.from,o=await this.getCommonConfiguration(a),i=ba.TransactionFactory.fromTxData(n,{common:o}),c=await this.signEthTx(i,a);return(0,gs.bufferToHex)(c.serialize())}async signTransaction(e){const t=this.txStateManager.getTransaction(e),r=this.getChainId(),s=ws(t)?be.dE.feeMarket:be.dE.legacy,n={...t.txParams,type:s,chainId:r,gasLimit:t.txParams.gas},a=n.from,o=await this.getCommonConfiguration(n.from),i=ba.TransactionFactory.fromTxData(n,{common:o}),c=await this.signEthTx(i,a);t.r=(0,gs.bufferToHex)(c.r),t.s=(0,gs.bufferToHex)(c.s),t.v=(0,gs.bufferToHex)(c.v),this.txStateManager.updateTransaction(t,"transactions#signTransaction: add r, s, v values"),this.txStateManager.setTxStatusSigned(t.id);return(0,gs.bufferToHex)(c.serialize())}async publishTransaction(e,t,r){const s=this.txStateManager.getTransaction(e);if(s.rawTx=t,s.type===be.iU.swap){const e=await this.query.getBalance(s.txParams.from);s.preTxBalance=e.toString(16)}let n;this.txStateManager.updateTransaction(s,"transactions#publishTransaction");try{n=await this.query.sendRawTransaction(t)}catch(e){if(!e.message.toLowerCase().includes("known transaction"))throw e;n=(0,gs.keccak)((0,gs.toBuffer)((0,Fe.L_)(t),"hex")).toString("hex"),n=(0,Fe.L_)(n)}this.setTxHash(e,n),this.txStateManager.setTxStatusSubmitted(e),this._trackTransactionMetricsEvent(s,be.d0.submitted,r)}async updatePostTxBalance({txMeta:e,txId:t,numberOfAttempts:r=6}){const s=await this.query.getBalance(e.txParams.from),n=this.txStateManager.getTransaction(t),a=n.approvalTxId?this.txStateManager.getTransaction(n.approvalTxId):null;n.postTxBalance=s.toString(16);(0,Da.N)(e.destinationTokenAddress,e.chainId)&&e.preTxBalance===n.postTxBalance&&r>0?setTimeout((()=>{this.updatePostTxBalance({txMeta:e,txId:t,numberOfAttempts:r-1})}),5e3):(this.txStateManager.updateTransaction(n,"transactions#confirmTransaction - add postTxBalance"),this._trackSwapsMetrics(n,a))}async confirmTransaction(e,t,r,s){const n=this.txStateManager.getTransaction(e);if(n)try{const a=Xa(t.gasUsed);n.txReceipt={...t,gasUsed:a},r&&(n.baseFeePerGas=r),s&&(n.blockTimestamp=s),this.txStateManager.setTxStatusConfirmed(e),this._markNonceDuplicatesDropped(e);const{submittedTime:o}=n,i={gas_used:a};o&&(i.completion_time=this._getTransactionCompletionTime(o)),"0x0"===t.status&&(i.status=ao),this._trackTransactionMetricsEvent(n,be.d0.finalized,void 0,i),this.txStateManager.updateTransaction(n,"transactions#confirmTransaction - add txReceipt"),n.type===be.iU.swap&&await this.updatePostTxBalance({txMeta:n,txId:e})}catch(e){p().error(e)}}async confirmExternalTransaction(e,t,r){if(await this.txStateManager.addExternalTransaction(e),!e)return;const s=e.id;try{const n=Xa(t.gasUsed);e.txReceipt={...t,gasUsed:n},r&&(e.baseFeePerGas=r),this.txStateManager.setTxStatusConfirmed(s),this._markNonceDuplicatesDropped(s);const{submittedTime:a}=e,o={gas_used:n};a&&(o.completion_time=this._getTransactionCompletionTime(a)),"0x0"===t.status&&(o.status=ao),this._trackTransactionMetricsEvent(e,be.d0.finalized,void 0,o),this.txStateManager.updateTransaction(e,"transactions#confirmTransaction - add txReceipt"),e.type===be.iU.swap&&await this.updatePostTxBalance({txMeta:e,txId:s})}catch(e){p().error(e)}}async cancelTransaction(e,t){const r=this.txStateManager.getTransaction(e);this.txStateManager.setTxStatusRejected(e),this._trackTransactionMetricsEvent(r,be.d0.rejected,t)}setTxHash(e,t){const r=this.txStateManager.getTransaction(e);r.hash=t,this.txStateManager.updateTransaction(r,"transactions#setTxHash")}async createTransactionEventFragment(e,t,r){const s=this.txStateManager.getTransaction(e),{properties:n,sensitiveProperties:a}=await this._buildEventFragmentProperties(s);this._createTransactionEventFragment(s,t,n,a,r)}_mapMethods(){this.getState=()=>this.memStore.getState(),this.getSelectedAddress=()=>this.preferencesStore.getState().selectedAddress,this.getUnapprovedTxCount=()=>Object.keys(this.txStateManager.getUnapprovedTxList()).length,this.getPendingTxCount=e=>this.txStateManager.getPendingTransactions(e).length,this.getTransactions=e=>this.txStateManager.getTransactions(e),this.getAdvancedGasFee=()=>this.preferencesStore.getState().advancedGasFee}async _updatePendingTxsAfterFirstBlock(){await this.blockTracker.getLatestBlock(),await this.pendingTxTracker.updatePendingTxs()}_onBootCleanUp(){this.txStateManager.getTransactions({searchCriteria:{status:be.LN.unapproved,loadingDefaults:!0}}).forEach((e=>{this.addTxGasDefaults(e).then((e=>{e.loadingDefaults=!1,this.txStateManager.updateTransaction(e,"transactions: gas estimation for tx on boot")})).catch((t=>{const r=this.txStateManager.getTransaction(e.id);r.loadingDefaults=!1,this.txStateManager.updateTransaction(r,"failed to estimate gas during boot cleanup."),this._failTransaction(r.id,t)}))})),this.txStateManager.getTransactions({searchCriteria:{status:be.LN.approved}}).forEach((e=>{this.approveTransaction(e.id)}))}_setupListeners(){this.txStateManager.on("tx:status-update",this.emit.bind(this,"tx:status-update")),this._setupBlockTrackerListener(),this.pendingTxTracker.on("tx:warning",(e=>{this.txStateManager.updateTransaction(e,"transactions/pending-tx-tracker#event: tx:warning")})),this.pendingTxTracker.on("tx:failed",((e,t)=>{this._failTransaction(e,t)})),this.pendingTxTracker.on("tx:confirmed",((e,t,r,s)=>this.confirmTransaction(e,t,r,s))),this.pendingTxTracker.on("tx:dropped",(e=>{this._dropTransaction(e)})),this.pendingTxTracker.on("tx:block-update",((e,t)=>{e.firstRetryBlockNumber||(e.firstRetryBlockNumber=t,this.txStateManager.updateTransaction(e,"transactions/pending-tx-tracker#event: tx:block-update"))})),this.pendingTxTracker.on("tx:retry",(e=>{"retryCount"in e||(e.retryCount=0),e.retryCount+=1,this.txStateManager.updateTransaction(e,"transactions/pending-tx-tracker#event: tx:retry")}))}_markNonceDuplicatesDropped(e){const t=this.txStateManager.getTransaction(e),{nonce:r,from:s}=t.txParams,n=this.txStateManager.getTransactions({searchCriteria:{nonce:r,from:s}});n.length&&n.forEach((r=>{r.id!==e&&(r.replacedBy=t.hash,r.replacedById=t.id,this.txStateManager.updateTransaction(t,"transactions/pending-tx-tracker#event: tx:confirmed reference to confirmed txHash with same nonce"),r.status!==be.LN.failed&&this._dropTransaction(r.id))}))}_setupBlockTrackerListener(){let e=!1;const t=this._onLatestBlock.bind(this),{blockTracker:r,txStateManager:s}=this;function n(){const n=s.getPendingTransactions();!e&&n.length>0?(r.on("latest",t),e=!0):e&&!n.length&&(r.removeListener("latest",t),e=!1)}s.on("tx:status-update",n),n()}async _onLatestBlock(e){try{await this.pendingTxTracker.updatePendingTxs()}catch(e){p().error(e)}try{await this.pendingTxTracker.resubmitPendingTxs(e)}catch(e){p().error(e)}}_updateMemstore(){const e=this.txStateManager.getUnapprovedTxList(),t=this.txStateManager.getTransactions({limit:100});this.memStore.updateState({unapprovedTxs:e,currentNetworkTxList:t})}_calculateTransactionsCost(e,t){let r="0x0";null!=t&&t.txReceipt&&(r=Ua(t.txReceipt.gasUsed,t.txReceipt.effectiveGasPrice));const s=Ua(e.txReceipt.gasUsed,e.txReceipt.effectiveGasPrice),n=new(Yt())(s,16).plus(r,16).toString(16);return{approvalGasCostInEth:Number(xs(r)),tradeGasCostInEth:Number(xs(s)),tradeAndApprovalGasCostInEth:Number(xs(n))}}_trackSwapsMetrics(e,t){if(this._getParticipateInMetrics()&&e.swapMetaData)if("0x0"===e.txReceipt.status)this._trackMetaMetricsEvent({event:"Swap Failed",sensitiveProperties:{...e.swapMetaData},category:re.SWAPS});else{const r=Ba(e.destinationTokenSymbol,e,e.destinationTokenAddress,e.txParams.from,e.destinationTokenDecimals,t,e.chainId),s=r?`${new(Yt())(r,10).div(e.swapMetaData.token_to_amount,10).times(100).round(2)}%`:null,n=e.txReceipt.gasUsed&&e.swapMetaData.estimated_gas?`${new(Yt())(e.txReceipt.gasUsed,16).div(e.swapMetaData.estimated_gas,10).times(100).round(2)}%`:null,a=this._calculateTransactionsCost(e,t);this._trackMetaMetricsEvent({event:"Swap Completed",category:re.SWAPS,sensitiveProperties:{...e.swapMetaData,token_to_amount_received:r,quote_vs_executionRatio:s,estimated_vs_used_gasRatio:n,approval_gas_cost_in_eth:a.approvalGasCostInEth,trade_gas_cost_in_eth:a.tradeGasCostInEth,trade_and_approval_gas_cost_in_eth:a.tradeAndApprovalGasCostInEth}})}}_allowanceAmountInRelationToDappProposedValue(e,t,r){return e===be.Rq.custom&&t&&r?`${new(Yt())(t,10).div(r,10).times(100).round(2)}`:null}_allowanceAmountInRelationToTokenBalance(e,t,r){return(e===be.Rq.custom||e===be.Rq.dappProposed)&&t&&r?`${new(Yt())(t,16).div(r,10).times(100).round(2)}`:null}async _buildEventFragmentProperties(e,t){const{type:r,time:s,status:n,chainId:a,origin:o,txParams:{gasPrice:i,gas:c,maxFeePerGas:l,maxPriorityFeePerGas:d,estimateSuggested:u,estimateUsed:p},defaultGasEstimates:h,originalType:g,replacedById:m,metamaskNetworkId:f,customTokenAmount:v,dappProposedTokenAmount:y,currentTokenBalance:S,originalApprovalAmount:T,finalApprovalAmount:w,contractMethodName:k}=e,b=o===C.jr?"user":"dapp",{assetType:P,tokenStandard:M}=await async function(e,t,r){let s=e.type;if(!1===Ps.includes(e.type)){const r=await bs(e.txParams,t);s=r.type}if([be.iU.tokenMethodApprove,be.iU.tokenMethodSetApprovalForAll,be.iU.tokenMethodTransfer,be.iU.tokenMethodTransferFrom].find((e=>e===s))||s===be.iU.contractInteraction)try{const t=await r(e.txParams.to);if(t.standard)return{assetType:t.standard===be.Yn.ERC20?be.h3.token:be.h3.NFT,tokenStandard:t.standard}}catch{}return s===be.iU.contractInteraction?{assetType:be.h3.unknown,tokenStandard:be.Yn.none}:{assetType:be.h3.native,tokenStandard:be.Yn.none}}(e,this.query,this.getTokenStandardAndDetails),E={};if(ws(e)?(E.max_fee_per_gas=l,E.max_priority_fee_per_gas=d):E.gas_price=i,h){const{estimateType:t}=h;if(t){E.default_estimate=t;let r=e.defaultGasEstimates.maxFeePerGas,s=e.defaultGasEstimates.maxPriorityFeePerGas;if([Na.low,Na.medium,Na.high].includes(t)){var A,I;const{gasFeeEstimates:e}=await this._getEIP1559GasFeeEstimates();var _,N;if(null!=e&&null!==(A=e[t])&&void 0!==A&&A.suggestedMaxFeePerGas)r=null===(_=e[t])||void 0===_?void 0:_.suggestedMaxFeePerGas,E.default_max_fee_per_gas=r;if(null!=e&&null!==(I=e[t])&&void 0!==I&&I.suggestedMaxPriorityFeePerGas)s=null===(N=e[t])||void 0===N?void 0:N.suggestedMaxPriorityFeePerGas,E.default_max_priority_fee_per_gas=s}}e.defaultGasEstimates.gas&&(E.default_gas=e.defaultGasEstimates.gas),e.defaultGasEstimates.gasPrice&&(E.default_gas_price=e.defaultGasEstimates.gasPrice)}u&&(E.estimate_suggested=u),p&&(E.estimate_used=p),null!=t&&t.gas_used&&(E.gas_used=t.gas_used);const x=this._getGasValuesInGWEI(E);let R="0";e.txParams.maxFeePerGas&&(R="2");const O=[be.iU.contractInteraction,be.iU.tokenMethodApprove,be.iU.tokenMethodSafeTransferFrom,be.iU.tokenMethodSetApprovalForAll,be.iU.tokenMethodTransfer,be.iU.tokenMethodTransferFrom,be.iU.smart,be.iU.swap,be.iU.swapApproval].includes(r),L="Approve";let D,U,F,B,G=be.iU.simpleSend;r===be.iU.cancel?G=be.iU.cancel:r===be.iU.retry?G=g:r===be.iU.deployContract?G=be.iU.deployContract:O&&(G=be.iU.contractInteraction,U=k,U===L&&M===be.Yn.ERC20&&("0"===y||"0"===v?D=be.Rq.revoke:v?D=be.Rq.custom:y&&(D=be.Rq.dappProposed),F=this._allowanceAmountInRelationToDappProposedValue(D,T,w),B=this._allowanceAmountInRelationToTokenBalance(D,y,S)));const j=this._getTransaction(m),H={RETRY:be.iU.retry,CANCEL:be.iU.cancel,SAME_NONCE:"other"};let $;null!=t&&t.dropped&&($=H.SAME_NONCE,(null==j?void 0:j.type)===be.iU.cancel?$=H.CANCEL:(null==j?void 0:j.type)===be.iU.retry&&($=H.RETRY));let q={chain_id:a,referrer:o,source:b,network:f,eip_1559_version:R,gas_edit_type:"none",gas_edit_attempted:"none",account_type:await this.getAccountType(this.getSelectedAddress()),device_model:await this.getDeviceModel(this.getSelectedAddress()),asset_type:P,token_standard:M,transaction_type:G,transaction_speed_up:r===be.iU.retry};U===L&&(q={...q,transaction_approval_amount_type:D});let K={status:n,transaction_envelope_type:ws(e)?Ga:ja,first_seen:s,gas_limit:c,transaction_contract_method:U,transaction_replaced:$,...t,...x};return U===L&&(K={...K,transaction_approval_amount_vs_balance_ratio:B,transaction_approval_amount_vs_proposed_ratio:F}),{properties:q,sensitiveProperties:K}}_createTransactionEventFragment(e,t,r,s,n){const a=`transaction-${[be.d0.finalized,be.d0.submitted].includes(t)?"submitted":"added"}-${e.id}`;if(void 0===this.getEventFragmentById(a))switch(t){case be.d0.added:this.createEventFragment({category:re.TRANSACTIONS,initialEvent:be.d0.added,successEvent:be.d0.approved,failureEvent:be.d0.rejected,properties:r,sensitiveProperties:s,persist:!0,uniqueIdentifier:a,actionId:n});break;case be.d0.approved:case be.d0.rejected:this.createEventFragment({category:re.TRANSACTIONS,successEvent:be.d0.approved,failureEvent:be.d0.rejected,properties:r,sensitiveProperties:s,persist:!0,uniqueIdentifier:a,actionId:n});break;case be.d0.submitted:this.createEventFragment({category:re.TRANSACTIONS,initialEvent:be.d0.submitted,successEvent:be.d0.finalized,properties:r,sensitiveProperties:s,persist:!0,uniqueIdentifier:a,actionId:n});break;case be.d0.finalized:this.createEventFragment({category:re.TRANSACTIONS,successEvent:be.d0.finalized,properties:r,sensitiveProperties:s,persist:!0,uniqueIdentifier:a,actionId:n})}}async _trackTransactionMetricsEvent(e,t,r,s={}){if(!e)return;const{properties:n,sensitiveProperties:a}=await this._buildEventFragmentProperties(e,s);let o;switch(this._createTransactionEventFragment(e,t,n,a,r),t){case be.d0.approved:o=`transaction-added-${e.id}`,this.updateEventFragment(o,{properties:n,sensitiveProperties:a}),this.finalizeEventFragment(o);break;case be.d0.rejected:o=`transaction-added-${e.id}`,this.updateEventFragment(o,{properties:n,sensitiveProperties:a}),this.finalizeEventFragment(o,{abandoned:!0});break;case be.d0.finalized:o=`transaction-submitted-${e.id}`,this.updateEventFragment(o,{properties:n,sensitiveProperties:a}),this.finalizeEventFragment(`transaction-submitted-${e.id}`)}}_getTransactionCompletionTime(e){return Math.round((Date.now()-e)/1e3).toString()}_getGasValuesInGWEI(e){const t={};for(const r in e)(0,gs.isHexString)(e[r])?t[r]=Os(e[r]):t[r]=e[r];return t}_failTransaction(e,t,r){this.txStateManager.setTxStatusFailed(e,t);const s=this.txStateManager.getTransaction(e);this._trackTransactionMetricsEvent(s,be.d0.finalized,r,{error:t.message})}_dropTransaction(e){this.txStateManager.setTxStatusDropped(e);const t=this.txStateManager.getTransaction(e);this._trackTransactionMetricsEvent(t,be.d0.finalized,void 0,{dropped:!0})}}const io=3*S.EB;class co{constructor({interval:e=io,preferences:t,network:r,keyringMemStore:s,tokenList:n,tokensController:a,assetsContractController:o=null,trackMetaMetricsEvent:i}={}){var c,l,d,u,p;this.assetsContractController=o,this.tokensController=a,this.preferences=t,this.interval=e,this.network=r,this.keyringMemStore=s,this.tokenList=n,this.useTokenDetection=null===(c=this.preferences)||void 0===c?void 0:c.store.getState().useTokenDetection,this.selectedAddress=null===(l=this.preferences)||void 0===l?void 0:l.store.getState().selectedAddress,this.tokenAddresses=null===(d=this.tokensController)||void 0===d?void 0:d.state.tokens.map((e=>e.address)),this.hiddenTokens=null===(u=this.tokensController)||void 0===u?void 0:u.state.ignoredTokens,this.detectedTokens=null===(p=this.tokensController)||void 0===p?void 0:p.state.detectedTokens,this.chainId=this.getChainIdFromNetworkStore(r),this._trackMetaMetricsEvent=i,null==t||t.store.subscribe((({selectedAddress:e,useTokenDetection:t})=>{this.selectedAddress===e&&this.useTokenDetection===t||(this.selectedAddress=e,this.useTokenDetection=t,this.restartTokenDetection({selectedAddress:e}))})),null==a||a.subscribe((({tokens:e=[],ignoredTokens:t=[],detectedTokens:r=[]})=>{this.tokenAddresses=e.map((e=>e.address)),this.hiddenTokens=t,this.detectedTokens=r}))}async detectNewTokens({selectedAddress:e,chainId:t}={}){const r=null!=e?e:this.selectedAddress,s=null!=t?t:this.getChainIdFromNetworkStore(this._network);if(!this.isActive)return;if(!function(e){switch(e){case Ct.vo.MAINNET:case Ct.vo.BSC:case Ct.vo.POLYGON:case Ct.vo.AVALANCHE:return!0;default:return!1}}(s))return;if(!this.useTokenDetection&&s!==Ct.vo.MAINNET)return;const n=!this.useTokenDetection&&s===Ct.vo.MAINNET,{tokenList:a}=this._tokenList.state,o=n?Es:a,i=[];for(const e in o)this.tokenAddresses.find((t=>hs(t,e)))||this.hiddenTokens.find((t=>hs(t,e)))||this.detectedTokens.find((({address:t})=>hs(t,e)))||i.push(e);const c=[i.slice(0,1e3),i.slice(1e3,i.length-1)];for(const e of c){let t;try{t=await this.assetsContractController.getBalancesInSingleCall(r,e)}catch(e){return void(0,u.warn)("MetaMask - DetectTokensController single call balance fetch failed",e)}const n=[],a=[];if(t){const e=Object.keys(t);for(const t of e){const{address:e,symbol:r,decimals:s}=o[t];a.push(`${r} - ${e}`),n.push({address:e,symbol:r,decimals:s})}n.length>0&&(this._trackMetaMetricsEvent({event:te,category:re.WALLET,properties:{tokens:a,token_standard:be.Yn.ERC20,asset_type:be.h3.token}}),await this.tokensController.addDetectedTokens(n,{selectedAddress:r,chainId:s}))}}}restartTokenDetection({selectedAddress:e,chainId:t}={}){const r=null!=e?e:this.selectedAddress,s=null!=t?t:this.chainId;this.isActive&&r&&(this.detectNewTokens({selectedAddress:r,chainId:s}),this.interval=io)}getChainIdFromNetworkStore(e){return null==e?void 0:e.store.getState().provider.chainId}set interval(e){this._handle&&clearInterval(this._handle),e&&(this._handle=setInterval((()=>{this.detectNewTokens()}),e))}set network(e){e&&(this._network=e,this._network.store.subscribe((()=>{if(this.chainId!==this.getChainIdFromNetworkStore(e)){const t=this.getChainIdFromNetworkStore(e);this.chainId=t,this.restartTokenDetection({chainId:this.chainId})}})))}set keyringMemStore(e){e&&(this._keyringMemStore=e,this._keyringMemStore.subscribe((({isUnlocked:e})=>{this.isUnlocked!==e&&(this.isUnlocked=e,e&&this.restartTokenDetection())})))}set tokenList(e){e&&(this._tokenList=e)}get isActive(){return this.isOpen&&this.isUnlocked}}const lo=10*S.sh;var uo=r(99105);const po=[Ct.vo.GOERLI,Ct.vo.LOCALHOST],ho={"X-Client-Id":ds.$g},go=e=>Boolean(null==e?void 0:e.match(/^0x[a-f0-9]+$/u)),mo=e=>Boolean(null==e?void 0:e.length),fo=e=>mo(e)&&Boolean(e.match(/^\d+$/u));const vo=[{property:"trade",type:"object",validator:e=>e&&go(e.data)&&(0,et.Pv)(e.to,{allowNonPrefixed:!1})&&(0,et.Pv)(e.from,{allowNonPrefixed:!1})&&mo(e.value)},{property:"approvalNeeded",type:"object",validator:e=>null===e||e&&go(e.data)&&(0,et.Pv)(e.to,{allowNonPrefixed:!1})&&(0,et.Pv)(e.from,{allowNonPrefixed:!1})},{property:"sourceAmount",type:"string",validator:fo},{property:"destinationAmount",type:"string",validator:fo},{property:"sourceToken",type:"string",validator:e=>(0,et.Pv)(e,{allowNonPrefixed:!1})},{property:"destinationToken",type:"string",validator:e=>(0,et.Pv)(e,{allowNonPrefixed:!1})},{property:"aggregator",type:"string",validator:mo},{property:"aggType",type:"string",validator:mo},{property:"error",type:"object",validator:e=>null===e||"object"==typeof e},{property:"averageGas",type:"number"},{property:"maxGas",type:"number"},{property:"gasEstimate",type:"number|undefined",validator:e=>void 0===e||e>0},{property:"fee",type:"number"}],yo=function(e,t){const r=po.includes(t)?Ct.vo.MAINNET:t,s=((e,t)=>{const r=process.env.SWAPS_USE_DEV_APIS,s=r?ds.Wp:ds.TL,n=r?ds.zA:ds.$7;if(["refreshTime"].includes(e))return s;const a=t&&parseInt(t,16);return["gasPrices"].includes(e)?`${n}/networks/${a}`:`${s}/networks/${a}`})(e,r);if(!s)throw new Error(`Swaps API calls are disabled for chainId: ${r}`);switch(e){case"trade":return`${s}/trades?`;case"tokens":return`${s}/tokens`;case"token":return`${s}/token`;case"topAssets":return`${s}/topAssets`;case"aggregatorMetadata":return`${s}/aggregatorMetadata`;case"gasPrices":return`${s}/gasPrices`;case"network":return s;default:throw new Error("getBaseApi requires an api call type")}};function Co(e,t){const r=Math.pow(10,Number(t||0));return new(Yt())(String(e)).times(r)}function So({sendToken:e,data:t,to:r,amount:s,from:n,gas:a,gasPrice:o}){const i={data:t,from:n,value:"0",gas:a,gasPrice:o};return e||(i.value=s,i.to=r),function(e){return Object.keys(e).reduce(((t,r)=>({...t,[r]:(0,Fe.L_)(e[r])})),{})}(i)}async function To({slippage:e,sourceToken:t,sourceDecimals:r,destinationToken:s,value:n,fromAddress:a,exchangeList:o},{chainId:i}){const c={destinationToken:s,sourceToken:t,sourceAmount:Co(n,r).toString(10),slippage:e,timeout:10*S.sh,walletAddress:a};o&&(c.exchangeList=o),((e,t,r)=>{var s;if(!t||!r)return!1;const n=ds.AS[e],a=null===(s=ds.gG[e])||void 0===s?void 0:s.address;return hs(t,n)&&hs(r,a)||hs(t,a)&&hs(r,n)})(i,t,s)&&(c.enableDirectWrapping=!0);const l=new URLSearchParams(c).toString(),d=`${yo("trade",i)}${l}`;return(await(0,uo.Z)(d,{method:"GET",headers:ho},{cacheRefreshTime:0,timeout:15*S.sh})).reduce(((t,r)=>{if(r.trade&&!r.error&&function(e,t,r,s=!0){return e.every((({property:e,type:n,validator:a})=>{const o=n.split("|").some((r=>typeof t[e]===r))&&(!a||a(t[e]));return!o&&s&&p().error(`response to GET ${r} invalid for property ${e}; value was:`,t[e],"| type was: ",typeof t[e]),o}))}(vo,r,d)){const s=So({to:r.trade.to,from:r.trade.from,data:r.trade.data,amount:Ls(r.trade.value),gas:Ls(r.maxGas)});let{approvalNeeded:n}=r;return n&&(n=So({...n})),{...t,[r.aggregator]:{...r,slippage:e,trade:s,approvalNeeded:n}}}return t}),{})}var wo=r(67911);const ko=25e5,bo=S.EB;function Po(e=25e5,t=0,r=0){const s=new(Yt())(e,10).minus(t,10);return!s.lt(0)&&s.lt(r,16)?`0x${s.toString(16)}`:r}const Mo={quotes:{},quotesPollingLimitEnabled:!1,fetchParams:null,tokens:null,tradeTxId:null,approveTxId:null,quotesLastFetched:null,customMaxGas:"",customGasPrice:null,customMaxFeePerGas:null,customMaxPriorityFeePerGas:null,swapsUserFeeLevel:"",selectedAggId:null,customApproveTxData:"",errorKey:"",topAggId:null,routeState:"",swapsFeatureIsLive:!0,saveFetchedQuotes:!1,swapsQuoteRefreshTime:bo,swapsQuotePrefetchingRefreshTime:bo,swapsStxBatchStatusRefreshTime:lo,swapsStxGetTransactionsRefreshTime:lo,swapsStxMaxFeeMultiplier:2,swapsFeatureFlags:{}};class Eo{constructor({getBufferedGasLimit:e,networkController:t,provider:r,getProviderConfig:s,getTokenRatesState:n,fetchTradesInfo:a=To,getCurrentChainId:o,getEIP1559GasFeeEstimates:i}){this.store=new m.ObservableStore({swapsState:{...Mo}}),this.resetState=()=>{this.store.updateState({swapsState:{...Mo}})},this._fetchTradesInfo=a,this._getCurrentChainId=o,this._getEIP1559GasFeeEstimates=i,this.getBufferedGasLimit=e,this.getTokenRatesState=n,this.pollCount=0,this.getProviderConfig=s,this.indexOfNewestCallInFlight=0,this.ethersProvider=new Ks.Q(r),this._currentNetwork=t.store.getState().network,t.on(Dn,(e=>{"loading"!==e&&e!==this._currentNetwork&&(this._currentNetwork=e,this.ethersProvider=new Ks.Q(r))}))}async fetchSwapsNetworkConfig(e){const t=await(0,uo.Z)(yo("network",e),{method:"GET"},{cacheRefreshTime:6e5}),{refreshRates:r,parameters:s={}}=t||{};if(!r||"number"!=typeof r.quotes||"number"!=typeof r.quotesPrefetching)throw new Error(`MetaMask - invalid response for refreshRates: ${t}`);return{quotes:1e3*r.quotes,quotesPrefetching:1e3*r.quotesPrefetching,stxGetTransactions:1e3*r.stxGetTransactions,stxBatchStatus:1e3*r.stxBatchStatus,stxStatusDeadline:r.stxStatusDeadline,stxMaxFeeMultiplier:s.stxMaxFeeMultiplier}}async _setSwapsNetworkConfig(){var e,t,r,s,n,a;const o=this._getCurrentChainId();let i;try{i=await this.fetchSwapsNetworkConfig(o)}catch(e){console.error("Request for Swaps network config failed: ",e)}const{swapsState:c}=this.store.getState();this.store.updateState({swapsState:{...c,swapsQuoteRefreshTime:(null===(e=i)||void 0===e?void 0:e.quotes)||bo,swapsQuotePrefetchingRefreshTime:(null===(t=i)||void 0===t?void 0:t.quotesPrefetching)||bo,swapsStxGetTransactionsRefreshTime:(null===(r=i)||void 0===r?void 0:r.stxGetTransactions)||lo,swapsStxBatchStatusRefreshTime:(null===(s=i)||void 0===s?void 0:s.stxBatchStatus)||lo,swapsStxStatusDeadline:(null===(n=i)||void 0===n?void 0:n.stxStatusDeadline)||180,swapsStxMaxFeeMultiplier:(null===(a=i)||void 0===a?void 0:a.stxMaxFeeMultiplier)||2}})}pollForNewQuotes(){const{swapsState:{swapsQuoteRefreshTime:e,swapsQuotePrefetchingRefreshTime:t,quotesPollingLimitEnabled:r}}=this.store.getState(),s=r?e:t;this.pollingTimeout=setTimeout((()=>{var e;const{swapsState:t}=this.store.getState();this.fetchAndSetQuotes(t.fetchParams,null===(e=t.fetchParams)||void 0===e?void 0:e.metaData,!0)}),s)}stopPollingForQuotes(){this.pollingTimeout&&clearTimeout(this.pollingTimeout)}async fetchAndSetQuotes(e,t={},r){const{chainId:s}=t,{swapsState:{quotesPollingLimitEnabled:n,saveFetchedQuotes:a}}=this.store.getState();if(!e)return null;r||(this.pollCount=0),clearTimeout(this.pollingTimeout),r||this.setSwapsErrorKey("");const o=this.indexOfNewestCallInFlight+1;this.indexOfNewestCallInFlight=o,a||this.setSaveFetchedQuotes(!0);let[i]=await Promise.all([this._fetchTradesInfo(e,{...t}),this._setSwapsNetworkConfig()]);const{swapsState:{saveFetchedQuotes:c}}=this.store.getState();if(!c)return[{},null];i=(0,de.mapValues)(i,(e=>({...e,sourceTokenInfo:t.sourceTokenInfo,destinationTokenInfo:t.destinationTokenInfo}))),s===Ct.vo.OPTIMISM&&Object.values(i).length>0&&await Promise.all(Object.values(i).map((async e=>{if(e.trade){const t=await(0,wo.Z)({txParams:e.trade,chainId:s},this.ethersProvider);e.multiLayerL1TradeFeeTotal=t}return e})));const l=Date.now();let d=!1;if(!(0,Da.N)(e.sourceToken,s)&&Object.values(i).length){const t=await this._getERC20Allowance(e.sourceToken,e.fromAddress,s),[n]=Object.values(i);if(d=n.approvalNeeded&&t.eq(0)&&"wrappedNative"!==n.aggregator,d){if(!r){const{gasLimit:e}=await this.timedoutGasReturn(n.approvalNeeded);i=(0,de.mapValues)(i,(t=>({...t,approvalNeeded:{...t.approvalNeeded,gas:e||ds.Wn}})))}}else i=(0,de.mapValues)(i,(e=>({...e,approvalNeeded:null})))}let u=null;if(d||null!=e&&e.balanceError||(i=await this.getAllQuotesWithGasEstimates(i)),0===Object.values(i).length)this.setSwapsErrorKey(ds.yP);else{const[e,t]=await this._findTopQuoteAndCalculateSavings(i);u=e,i=t}if(this.indexOfNewestCallInFlight!==o)throw new Error(ds.AD);const{swapsState:p}=this.store.getState();let{selectedAggId:h}=p;return i[h]||(h=null),this.store.updateState({swapsState:{...p,quotes:i,fetchParams:{...e,metaData:t},quotesLastFetched:l,selectedAggId:h,topAggId:u}}),n&&(this.pollCount+=1),!n||this.pollCount<4?(this.pollForNewQuotes(),[i,u]):(this.resetPostFetchState(),this.setSwapsErrorKey(ds.ez),null)}safeRefetchQuotes(){const{swapsState:e}=this.store.getState();!this.pollingTimeout&&e.fetchParams&&this.fetchAndSetQuotes(e.fetchParams)}setSelectedQuoteAggId(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,selectedAggId:e}})}setSwapsTokens(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,tokens:e}})}clearSwapsQuotes(){const{swapsState:e}=this.store.getState();this.store.updateState({swapsState:{...e,quotes:{}}})}setSwapsErrorKey(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,errorKey:e}})}async getAllQuotesWithGasEstimates(e){const t=await Promise.all(Object.values(e).map((async e=>{const{gasLimit:t,simulationFails:r}=await this.timedoutGasReturn(e.trade);return[t,r,e.aggregator]}))),r={};return t.forEach((([t,s,n])=>{if(t&&!s){const s=Po(e[n].maxGas,e[n].estimatedRefund,t);r[n]={...e[n],gasEstimate:t,gasEstimateWithRefund:s}}else e[n].approvalNeeded&&(r[n]=e[n])})),r}timedoutGasReturn(e){return new Promise((t=>{let r=!1;const s=setTimeout((()=>{r=!0,t({gasLimit:null,simulationFails:!0})}),5*S.sh),n={data:e.data,from:e.from,to:e.to,value:e.value};this.getBufferedGasLimit({txParams:n},1).then((({gasLimit:e,simulationFails:n})=>{r||(clearTimeout(s),t({gasLimit:e,simulationFails:n}))})).catch((e=>{p().error(e),r||(clearTimeout(s),t({gasLimit:null,simulationFails:!0}))}))}))}async setInitialGasEstimate(e){const{swapsState:t}=this.store.getState(),r={...t.quotes[e]},{gasLimit:s,simulationFails:n}=await this.timedoutGasReturn(r.trade);if(s&&!n){const e=Po(r.maxGas,r.estimatedRefund,s);r.gasEstimate=s,r.gasEstimateWithRefund=e}this.store.updateState({swapsState:{...t,quotes:{...t.quotes,[e]:r}}})}setApproveTxId(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,approveTxId:e}})}setTradeTxId(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,tradeTxId:e}})}setQuotesLastFetched(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,quotesLastFetched:e}})}setSwapsTxGasPrice(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,customGasPrice:e}})}setSwapsTxMaxFeePerGas(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,customMaxFeePerGas:e}})}setSwapsUserFeeLevel(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,swapsUserFeeLevel:e}})}setSwapsQuotesPollingLimitEnabled(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,quotesPollingLimitEnabled:e}})}setSwapsTxMaxFeePriorityPerGas(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,customMaxPriorityFeePerGas:e}})}setSwapsTxGasLimit(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,customMaxGas:e}})}setCustomApproveTxData(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,customApproveTxData:e}})}setBackgroundSwapRouteState(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,routeState:e}})}setSaveFetchedQuotes(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,saveFetchedQuotes:e}})}setSwapsLiveness(e){const{swapsState:t}=this.store.getState(),{swapsFeatureIsLive:r}=e;this.store.updateState({swapsState:{...t,swapsFeatureIsLive:r}})}setSwapsFeatureFlags(e){const{swapsState:t}=this.store.getState();this.store.updateState({swapsState:{...t,swapsFeatureFlags:e}})}resetPostFetchState(){const{swapsState:e}=this.store.getState();this.store.updateState({swapsState:{...Mo,tokens:e.tokens,fetchParams:e.fetchParams,swapsFeatureIsLive:e.swapsFeatureIsLive,swapsQuoteRefreshTime:e.swapsQuoteRefreshTime,swapsQuotePrefetchingRefreshTime:e.swapsQuotePrefetchingRefreshTime,swapsFeatureFlags:e.swapsFeatureFlags}}),clearTimeout(this.pollingTimeout)}resetSwapsState(){const{swapsState:e}=this.store.getState();this.store.updateState({swapsState:{...Mo,swapsQuoteRefreshTime:e.swapsQuoteRefreshTime,swapsQuotePrefetchingRefreshTime:e.swapsQuotePrefetchingRefreshTime}}),clearTimeout(this.pollingTimeout)}async _findTopQuoteAndCalculateSavings(e={}){const{contractExchangeRates:t}=this.getTokenRatesState(),{swapsState:{customGasPrice:r,customMaxPriorityFeePerGas:s}}=this.store.getState(),n=this._getCurrentChainId();if(!Object.keys(e).length)return{};const a=(0,de.cloneDeep)(e),{gasFeeEstimates:o,gasEstimateType:i}=await this._getEIP1559GasFeeEstimates();let c="0x0";if(i===_a.feeMarket){const{high:{suggestedMaxPriorityFeePerGas:e},estimatedBaseFee:t}=o,r=Ns(e),n=new _s.D(t,10,Is.E.GWEI).toDenomination(Is.E.WEI);c=new _s.D(s||r,16).add(n).round(6).toString()}else i===_a.legacy?c=r||Ns(o.high):i===_a.ethGasPrice&&(c=r||Ns(o.gasPrice));let l=null,d=null;Object.values(a).forEach((e=>{const{aggregator:r,approvalNeeded:s,averageGas:a,destinationAmount:o=0,destinationToken:i,destinationTokenInfo:u,gasEstimateWithRefund:p,sourceAmount:h,sourceToken:g,trade:m,fee:f,multiLayerL1TradeFeeTotal:v}=e;let y=Ua((p?new(Yt())(p,16):new(Yt())(a||ko,10)).plus((null==s?void 0:s.gas)||"0x0",16).toString(16),c);null!==v&&(y=function(e,...t){const r=new _s.D(e,16);return t.reduce(((e,t)=>e.add(new _s.D(t,16))),r).toPrefixedHexString()}(y||"0x0",v||"0x0"));const C=new _s.D(y,16,Is.E.WEI).add(new _s.D(m.value,16,Is.E.WEI)),S=C.toDenomination(Is.E.ETH).round(6).value,T=(0,Da.N)(g,n)?C.minus(new _s.D(h,10)).toDenomination(Is.E.ETH).round(6).value:S,w=Fa(o,u.decimals),k=new(Yt())(100,10).minus(f,10).div(100),b=w.div(k).minus(w),P=t[Object.keys(t).find((e=>hs(e,i)))],M=P||1,E=w.times(M.toString(10),10),A=(0,Da.N)(i,n)?1:P,I=void 0===A?E:E.minus(T,10);e.ethFee=T.toString(10),void 0!==A&&(e.ethValueOfTokens=E.toString(10),e.overallValueOfQuote=I.toString(10),e.metaMaskFeeInEth=b.times(A.toString(10)).toString(10)),(null===d||I.gt(d))&&(l=r,d=I)}));let u=null;if((0,Da.N)(a[l].destinationToken,n)||Boolean(t[Object.keys(t).find((e=>{var t;return hs(e,null===(t=a[l])||void 0===t?void 0:t.destinationToken)}))])){const e=a[l];u={};const{ethFee:t,metaMaskFeeInEth:r,ethValueOfTokens:s}=Ao(Object.values(a));u.performance=new(Yt())(e.ethValueOfTokens,10).minus(s,10),u.fee=new(Yt())(t).minus(e.ethFee,10),u.metaMaskFee=e.metaMaskFeeInEth,u.total=u.performance.plus(u.fee).minus(u.metaMaskFee).toString(10),u.performance=u.performance.toString(10),u.fee=u.fee.toString(10),u.medianMetaMaskFee=r,a[l].isBestQuote=!0,a[l].savings=u}return[l,a]}async _getERC20Allowance(e,t,r){const s=new Vs.Contract(e,$a(),this.ethersProvider);return await s.allowance(t,ds.qS[r])}}function Ao(e){if(!Array.isArray(e)||0===e.length)throw new Error("Expected non-empty array param.");const t=[...e];if(t.sort(((e,t)=>{const r=new(Yt())(e.overallValueOfQuote,10),s=new(Yt())(t.overallValueOfQuote,10);return r.equals(s)?0:r.lessThan(s)?-1:1})),t.length%2==1){const e=t[(t.length-1)/2].overallValueOfQuote;return Io(t.filter((t=>e===t.overallValueOfQuote)))}const r=t.length/2,s=r-1,n=t[r].overallValueOfQuote,a=t[s].overallValueOfQuote,o=t.filter((e=>n===e.overallValueOfQuote)),i=t.filter((e=>a===e.overallValueOfQuote)),c=Io(o),l=Io(i);return{ethFee:new(Yt())(c.ethFee,10).plus(l.ethFee,10).dividedBy(2).toString(10),metaMaskFeeInEth:new(Yt())(c.metaMaskFeeInEth,10).plus(l.metaMaskFeeInEth,10).dividedBy(2).toString(10),ethValueOfTokens:new(Yt())(c.ethValueOfTokens,10).plus(l.ethValueOfTokens,10).dividedBy(2).toString(10)}}function Io(e){const t=e.reduce(((e,t)=>({ethFee:e.ethFee.plus(t.ethFee,10),metaMaskFeeInEth:e.metaMaskFeeInEth.plus(t.metaMaskFeeInEth,10),ethValueOfTokens:e.ethValueOfTokens.plus(t.ethValueOfTokens,10)})),{ethFee:new(Yt())(0,10),metaMaskFeeInEth:new(Yt())(0,10),ethValueOfTokens:new(Yt())(0,10)});return{ethFee:t.ethFee.div(e.length,10).toString(10),metaMaskFeeInEth:t.metaMaskFeeInEth.div(e.length,10).toString(10),ethValueOfTokens:t.ethValueOfTokens.div(e.length,10).toString(10)}}var _o=r(37217),No=r.n(_o),xo=r(73396),Ro=r.n(xo);const Oo={async importAccount(e,t){return(0,this.strategies[e])(...t)},strategies:{"Private Key":e=>{if(!e)throw new Error("Cannot import an empty key.");const t=(0,Fe.L_)(e),r=(0,gs.toBuffer)(t);if(!(0,gs.isValidPrivate)(r))throw new Error("Cannot import invalid private key.");return(0,et.MT)(t)},"JSON File":(e,t)=>{let r;try{r=Ro().fromEtherWallet(e,t)}catch(s){p().debug("Attempt to import as EtherWallet format failed, trying V3"),r=No().fromV3(e,t,!0)}return function(e){const t=e.getPrivateKey();return(0,gs.bufferToHex)(t)}(r)}}},Lo={async verifyAccounts(e,t){if(!e||e.length<1)throw new Error("No created accounts defined.");const r=new Ur.KeyringController({}).getKeyringBuilderForType(Gt.hdKeyTree)(),s={mnemonic:t,numberOfAccounts:e.length};await r.deserialize(s);const n=await r.getAccounts();if(p().debug(`Created accounts: ${JSON.stringify(e)}`),p().debug(`Restored accounts: ${JSON.stringify(n)}`),n.length!==e.length)throw new Error("Wrong number of accounts");for(let t=0;t<n.length;t++)if(n[t].toLowerCase()!==e[t].toLowerCase())throw new Error(`Not identical accounts! Original: ${e[t]}, Restored: ${n[t]}`)}};var Do=r(72045);function Uo(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const Fo=e=>{setTimeout((()=>{throw e}))},Bo=e=>{const t=[];return e.uniqueIdentifier&&t.push(e.uniqueIdentifier),e.actionId&&t.push(e.actionId),t.length&&e.isDuplicateAnonymizedEvent&&t.push("0x000"),t.length?t.join("-"):(0,Fe.D1)()},Go={'You must pass either an "anonymousId" or a "userId".':!0};class jo{constructor({segment:e,preferencesStore:t,onNetworkDidChange:r,getCurrentChainId:s,version:n,environment:a,initState:o,extension:i,captureException:c=Fo}){Uo(this,"_getAllNFTsFlattened",(0,de.memoize)(((e={})=>Object.values(e).reduce(((e,t)=>e.concat(...Object.values(t))),[])))),Uo(this,"_isValidTraitArray",(e=>Array.isArray(e)&&(e.every((e=>"string"==typeof e))||e.every((e=>"boolean"==typeof e))||e.every((e=>"number"==typeof e))))),Uo(this,"_isValidTraitDate",(e=>"[object Date]"===Object.prototype.toString.call(e))),this._captureException=e=>{Go[e.message]||c(e)};const l=t.getState();this.chainId=s(),this.locale=l.currentLocale.replace("_","-"),this.version="production"===a?n:`${n}-${a}`,this.extension=i,this.environment=a;const d=(0,de.omitBy)(null==o?void 0:o.fragments,"persist"),u=(null==o?void 0:o.segmentApiCalls)||{};this.store=new m.ObservableStore({participateInMetaMetrics:null,metaMetricsId:null,eventsBeforeMetricsOptIn:[],traits:{},...o,fragments:{...null==o?void 0:o.fragments},segmentApiCalls:{...u}}),t.subscribe((({currentLocale:e})=>{this.locale=e.replace("_","-")})),r((()=>{this.chainId=s()})),this.segment=e,Object.values(d).forEach((e=>{this.finalizeEventFragment(e.id,{abandoned:!0})})),ce.A&&Object.values(u).forEach((({eventType:e,payload:t})=>{this._submitSegmentAPICall(e,t)})),ce.A?(chrome.alarms.getAll((e=>{(0,Fe.zC)(e,Qn)||chrome.alarms.create(Qn,{delayInMinutes:1,periodInMinutes:1})})),chrome.alarms.onAlarm.addListener((e=>{e.name===Qn&&this.finalizeAbandonedFragments()}))):setInterval((()=>{this.finalizeAbandonedFragments()}),30*S.sh)}finalizeAbandonedFragments(){Object.values(this.store.getState().fragments).forEach((e=>{e.timeout&&Date.now()-e.lastUpdated/1e3>e.timeout&&this.finalizeEventFragment(e.id,{abandoned:!0})}))}generateMetaMetricsId(){return(0,gs.bufferToHex)((0,gs.keccak)(Buffer.from(String(Date.now())+String(Math.round(Math.random()*Number.MAX_SAFE_INTEGER)))))}createEventFragment(e){var t;if(!e.successEvent||!e.category)throw new Error(`Must specify success event and category. Success event was: ${e.event}. Category was: ${e.category}. Payload keys were: ${Object.keys(e)}. ${"object"==typeof e.properties?`Payload property keys were: ${Object.keys(e.properties)}`:""}`);const{fragments:r}=this.store.getState(),s=null!==(t=e.uniqueIdentifier)&&void 0!==t?t:(0,Do.Z)(),n={id:s,...e,lastUpdated:Date.now()};return this.store.updateState({fragments:{...r,[s]:n}}),e.initialEvent&&this.trackEvent({event:n.initialEvent,category:n.category,properties:n.properties,sensitiveProperties:n.sensitiveProperties,page:n.page,referrer:n.referrer,revenue:n.revenue,value:n.value,currency:n.currency,environmentType:n.environmentType,actionId:e.actionId,uniqueIdentifier:e.uniqueIdentifier}),n}getEventFragmentById(e){const{fragments:t}=this.store.getState();return t[e]}updateEventFragment(e,t){const{fragments:r}=this.store.getState();if(!r[e])throw new Error(`Event fragment with id ${e} does not exist.`);this.store.updateState({fragments:{...r,[e]:(0,de.merge)(r[e],{...t,lastUpdated:Date.now()})}})}finalizeEventFragment(e,{abandoned:t=!1,page:r,referrer:s}={}){var n;const a=this.store.getState().fragments[e];if(!a)throw new Error(`Funnel with id ${e} does not exist.`);const o=t?a.failureEvent:a.successEvent;this.trackEvent({event:o,category:a.category,properties:a.properties,sensitiveProperties:a.sensitiveProperties,page:null!=r?r:a.page,referrer:null!==(n=a.referrer)&&void 0!==n?n:s,revenue:a.revenue,value:a.value,currency:a.currency,environmentType:a.environmentType,actionId:a.actionId,uniqueIdentifier:a.uniqueIdentifier});const{fragments:i}=this.store.getState();delete i[e],this.store.updateState({fragments:i})}identify(e){const{metaMetricsId:t,participateInMetaMetrics:r}=this.state;if(!r||!t||!e)return;if("object"!=typeof e)return void console.warn("MetaMetricsController#identify: userTraits parameter must be an object. Received type: "+typeof e);const s=this._buildValidTraits(e);this._identify(s)}updateExtensionUninstallUrl(e,t){const r={};e&&(r.mmi=Buffer.from(t).toString("base64"),r.env=this.environment,r.av=this.version);const s=new URLSearchParams(r);this.extension&&this.extension.runtime&&this.extension.runtime.setUninstallURL(`https://metamask.io/uninstalled?${s}`)}setParticipateInMetaMetrics(e){let{metaMetricsId:t}=this.state;return e&&!t?t=this.generateMetaMetricsId():!1===e&&(t=null),this.store.updateState({participateInMetaMetrics:e,metaMetricsId:t}),e&&(this.trackEventsAfterMetricsOptIn(),this.clearEventsAfterMetricsOptIn()),this.updateExtensionUninstallUrl(e,t),t}get state(){return this.store.getState()}trackPage({name:e,params:t,environmentType:r,page:s,referrer:n,actionId:a},o){try{if(!1===this.state.participateInMetaMetrics)return;if(null===this.state.participateInMetaMetrics&&(null==o||!o.isOptInPath))return;const{metaMetricsId:i}=this.state,c=i?"userId":"anonymousId",l=null!=i?i:L;this._submitSegmentAPICall("page",{messageId:Bo({actionId:a}),[c]:l,name:e,properties:{params:t,locale:this.locale,chain_id:this.chainId,environment_type:r},context:this._buildContext(n,s)})}catch(e){this._captureException(e)}}trackEvent(e,t){this.validatePayload(e),this.submitEvent(e,t).catch((e=>this._captureException(e)))}async submitEvent(e,t){if(this.validatePayload(e),!(this.state.participateInMetaMetrics||null!=t&&t.isOptIn))return;const r=[];if(e.sensitiveProperties){if(!0===(null==t?void 0:t.excludeMetaMetricsId))throw new Error("sensitiveProperties was specified in an event payload that also set the excludeMetaMetricsId flag");const s=(0,de.merge)(e.sensitiveProperties,e.properties);r.push(this._track(this._buildEventPayload({...e,properties:s,isDuplicateAnonymizedEvent:!0}),{...t,excludeMetaMetricsId:!0}))}r.push(this._track(this._buildEventPayload(e),t)),await Promise.all(r)}validatePayload(e){if(!e.event||!e.category)throw new Error(`Must specify event and category. Event was: ${e.event}. Category was: ${e.category}. Payload keys were: ${Object.keys(e)}. ${"object"==typeof e.properties?`Payload property keys were: ${Object.keys(e.properties)}`:""}`)}handleMetaMaskStateUpdate(e){const t=this._buildUserTraitsObject(e);t&&this.identify(t)}trackEventsAfterMetricsOptIn(){const{eventsBeforeMetricsOptIn:e}=this.store.getState();e.forEach((e=>{this.trackEvent(e)}))}clearEventsAfterMetricsOptIn(){this.store.updateState({eventsBeforeMetricsOptIn:[]})}addEventBeforeMetricsOptIn(e){const t=this.store.getState().eventsBeforeMetricsOptIn;this.store.updateState({eventsBeforeMetricsOptIn:[...t,e]})}updateTraits(e){const{traits:t}=this.store.getState();this.store.updateState({traits:{...t,...e}})}_buildContext(e,t=D){return{app:{name:"MetaMask Extension",version:this.version},userAgent:window.navigator.userAgent,page:t,referrer:e}}_buildEventPayload(e){var t;const{event:r,properties:s,revenue:n,value:a,currency:o,category:i,page:c,referrer:l,environmentType:d=C.Ms}=e;return{event:r,messageId:Bo(e),properties:{...(0,de.omit)(s,["revenue","locale","currency","value"]),revenue:n,value:a,currency:o,category:i,locale:this.locale,chain_id:null!==(t=null==s?void 0:s.chain_id)&&void 0!==t?t:this.chainId,environment_type:d},context:this._buildContext(l,c)}}_buildUserTraitsObject(e){const{traits:t,previousUserTraits:r}=this.store.getState(),s={[T]:(0,de.sum)(Object.values(e.addressBook).map(de.size)),[w]:t[w]||"",[k]:e.ledgerTransportType,[b]:e.frequentRpcListDetail.map((e=>e.chainId)),[P]:e.frequentRpcListDetail.reduce(((e,t)=>(t.ticker||e.push(t.chainId),e)),[]),[M]:e.useNftDetection,[E]:Object.values(e.identities).length,[A]:this._getAllUniqueNFTAddressesLength(e.allNfts),[I]:this._getAllNFTsFlattened(e.allNfts).length,[_]:this._getNumberOfTokens(e),[N]:e.openSeaEnabled,[R]:!1,[x]:e.theme||"default",[O]:e.useTokenDetection};if(!r)return this.store.updateState({previousUserTraits:s}),s;if(r&&!(0,de.isEqual)(r,s)){const e=(0,de.pickBy)(s,((e,t)=>!(0,de.isEqual)(r[t],e)));return this.store.updateState({previousUserTraits:s}),e}return null}_buildValidTraits(e){return Object.entries(e).reduce(((e,[t,r])=>(this._isValidTraitDate(r)?e[t]=r.toISOString():this._isValidTrait(r)?e[t]=r:console.warn(`MetaMetricsController: "${t}" value is not a valid trait type`),e)),{})}_getAllUniqueNFTAddressesLength(e={}){const t=this._getAllNFTsFlattened(e).map((e=>e.address));return new Set(t).size}_getNumberOfTokens(e){return Object.values(e.allTokens).reduce(((e,t)=>e+(0,de.sum)(Object.values(t).map(de.size))),0)}_identify(e){const{metaMetricsId:t}=this.state;if(e&&0!==Object.keys(e).length)try{this._submitSegmentAPICall("identify",{userId:t,traits:e})}catch(e){this._captureException(e)}else console.warn("MetaMetricsController#_identify: No userTraits found")}_isValidTrait(e){const t=typeof e;return"string"===t||"boolean"===t||"number"===t||this._isValidTraitArray(e)||this._isValidTraitDate(e)}_track(e,t){var r;const{isOptIn:s,metaMetricsId:n,matomoEvent:a,flushImmediately:o}=t||{};let i="userId",c=this.state.metaMetricsId,l=null!==(r=null==t?void 0:t.excludeMetaMetricsId)&&void 0!==r&&r;return Boolean(e.event.match(/^send|^confirm/iu))&&(l=!0),l||s&&!n?(i="anonymousId",c=L):s&&n&&(c=n),e[i]=c,!0===a&&(e.properties.legacy_event=!0),new Promise(((t,r)=>{this._submitSegmentAPICall("track",e,(e=>{if(e){const t=new Error(e.message);return t.stack=e.stack,r(t)}return t()})),o&&this.segment.flush()}))}_submitSegmentAPICall(e,t,r){const{metaMetricsId:s,participateInMetaMetrics:n}=this.state;if(!n||!s)return;const a=t.messageId||(0,Fe.D1)();let o=new Date;if(t.timestamp){const e=new Date(t.timestamp);(0,Fe.qb)(e)&&(o=e)}const i={...t,messageId:a,timestamp:o};this.store.updateState({segmentApiCalls:{...this.store.getState().segmentApiCalls,[a]:{eventType:e,payload:{...i,timestamp:i.timestamp.toString()}}}});this.segment[e](i,(e=>{const{segmentApiCalls:t}=this.store.getState();return delete t[a],this.store.updateState({segmentApiCalls:t}),null==r?void 0:r(e)}))}}var Ho=r(15971),$o=r.n(Ho),qo=r(14830),Ko=r.n(qo),Vo=r(29367),Wo=r.n(Vo);const Qo=()=>({});var zo,Yo;const Xo=null!==(zo=process.env.SEGMENT_WRITE_KEY)&&void 0!==zo?zo:null,Jo=null!==(Yo=process.env.SEGMENT_HOST)&&void 0!==Yo?Yo:null,Zo="production"===process.env.METAMASK_ENVIRONMENT?void 0:1,ei=5*S.sh,ti=Xo?new class{constructor(e,t={}){this.writeKey=e,this.host=$o()(t.host||"https://api.segment.io"),this.flushInterval=t.flushInterval||1e4,this.flushAt=t.flushAt||Math.max(t.flushAt,1)||20,this.queue=[],this.path="/v1/batch",this.maxQueueSize=460800,this.flushed=!1,this.retryCount=3,Object.defineProperty(this,"enable",{configurable:!1,writable:!1,enumerable:!0,value:!0})}_validate(e,t){Ko()(e,t)}_message(e,t,r){return this._validate(t,e),this.enqueue(e,t,r),this}identify(e,t){return this._message("identify",e,t)}track(e,t){return this._message("track",e,t)}page(e,t){return this._message("page",e,t)}enqueue(e,t,r=Qo){if(!this.enable)return void setImmediate(r);const s={...t,type:e};if(s.context={...s.context,library:{name:"analytics-node"}},s.timestamp||(s.timestamp=new Date),s.messageId||(s.messageId=(0,Fe.D1)()),s.anonymousId&&!(0,de.isString)(s.anonymousId)&&(s.anonymousId=JSON.stringify(s.anonymousId)),s.userId&&!(0,de.isString)(s.userId)&&(s.userId=JSON.stringify(s.userId)),this.queue.push({message:s,callback:r}),!this.flushed)return this.flushed=!0,void this.flush();const n=this.queue.length>=this.flushAt,a=this.queue.reduce(((e,t)=>e+JSON.stringify(t).length),0)>=this.maxQueueSize;(n||a)&&this.flush(),this.flushInterval&&!this.timer&&(this.timer=setTimeout(this.flush.bind(this),this.flushInterval))}flush(e=Qo){if(!this.enable)return setImmediate(e),Promise.resolve();if(this.timer&&(clearTimeout(this.timer),this.timer=null),!this.queue.length)return setImmediate(e),Promise.resolve();const t=this.queue.splice(0,this.flushAt),r=t.map((e=>e.callback)),s={batch:t.map((e=>e.message)),timestamp:new Date,sentAt:new Date},n={Authorization:`Basic ${Buffer.from(this.writeKey,"utf8").toString("base64")}`};return this._sendRequest(`${this.host}${this.path}`,{method:"POST",body:JSON.stringify(s),headers:n},(t=>{setImmediate((()=>{r.forEach((e=>e(t,s))),e(t,s)}))}),0)}_retryRequest(e,t,r,s){const n=100*Math.pow(2,s);setTimeout((()=>{this._sendRequest(e,t,r,s+1)}),n)}async _sendRequest(e,t,r,s){return fetch(e,t).then((async n=>{if(n.ok)r();else if(this._isErrorRetryable({response:n})&&s<=this.retryCount)this._retryRequest(e,t,r,s);else{const e=new Error(n.statusText);r(e)}})).catch((n=>{this._isErrorRetryable(n)&&s<=this.retryCount?this._retryRequest(e,t,r,s):r(n)}))}_isErrorRetryable(e){return!!function(e){return!e.response&&Boolean(e.code)&&"ECONNABORTED"!==e.code&&Wo()(e)}(e)||!!e.response&&(e.response.status>=500&&e.response.status<=599||429===e.response.status)}}(Xo,{host:Jo,flushAt:Zo,flushInterval:ei}):((e=Zo)=>{const t={queue:[],flush(){t.queue.forEach((([e,t])=>{t()})),t.queue=[]},track(r,s=(()=>{})){t.queue.push([r,s]),t.queue.length>=e&&t.flush()},page(){},identify(){}};return t})(Zo),ri=(e,t,r,s)=>async n=>{if(t._writableState.ended)return;if(!e[n.method])return void t.write({jsonrpc:"2.0",error:y.ethErrors.rpc.methodNotFound({message:`${n.method} not found`}),id:n.id});let a,o;try{a=await e[n.method](...n.params)}catch(e){o=e}finally{ce.A&&r&&"getState"!==n.method&&s.set(r.getState())}t._writableState.ended?o&&console.error(o):o?t.write({jsonrpc:"2.0",error:(0,y.serializeError)(o,{shouldIncludeStack:!0}),id:n.id}):t.write({jsonrpc:"2.0",result:a,id:n.id})};function si({getPendingNonce:e}){return(0,Or.createAsyncMiddleware)((async(t,r,s)=>{const{method:n,params:a}=t;if("eth_getTransactionCount"!==n)return void s();const[o,i]=a;"pending"===i?r.result=await e(o):s()}))}function ni({getPendingTransactionByHash:e}){return(0,Or.createAsyncMiddleware)((async(t,r,s)=>{const{method:n,params:a}=t;if("eth_getTransactionByHash"!==n)return void s();const[o]=a,i=e(o);i?r.result=(0,Fe.cv)(i):s()}))}var ai=r(76412);const oi=Object.freeze({...us.Gz}),ii=Object.freeze({[us.Ky.restrictReturnedAccounts]:e=>({type:us.Ky.restrictReturnedAccounts,value:e})}),ci=({getIdentities:e})=>({[us.Ky.restrictReturnedAccounts]:{type:us.Ky.restrictReturnedAccounts,decorator:(e,t)=>async r=>(await e(r)).filter((e=>t.value.includes(e))).slice(0,1),validator:(t,r,s)=>function(e,t){if(!Array.isArray(e)||0===e.length)throw new Error(`${oi.eth_accounts} error: Expected non-empty array of Ethereum addresses.`);const r=t();e.forEach((e=>{if(!e||"string"!=typeof e)throw new Error(`${oi.eth_accounts} error: Expected an array of Ethereum addresses. Received: "${e}".`);if(!r[e])throw new Error(`${oi.eth_accounts} error: Received unrecognized address: "${e}".`)}))}(t.value,e)},...ai.caveatSpecifications,...cs.endowmentCaveatSpecifications}),li=({getAllAccounts:e,getIdentities:t,captureKeyringTypesWithMissingIdentities:r})=>({[oi.eth_accounts]:{permissionType:ss.PermissionType.RestrictedMethod,targetKey:oi.eth_accounts,allowedCaveats:[us.Ky.restrictReturnedAccounts],factory:(e,t)=>{if(Array.isArray(e.caveats))throw new Error(`${oi.eth_accounts} error: Received unexpected caveats. Any permitted caveats will be added automatically.`);if(!t.approvedAccounts)throw new Error(`${oi.eth_accounts} error: No approved accounts specified.`);return(0,ss.constructPermission)({...e,caveats:[ii[us.Ky.restrictReturnedAccounts](t.approvedAccounts)]})},methodImplementation:async s=>{const n=await e(),a=t();return n.sort(((e,t)=>{if(!a[e])throw r(a,n),new Error(`Missing identity for address: "${e}".`);if(!a[t])throw r(a,n),new Error(`Missing identity for address: "${t}".`);return a[e].lastSelected===a[t].lastSelected?0:void 0===a[e].lastSelected?1:void 0===a[t].lastSelected?-1:a[t].lastSelected-a[e].lastSelected}))},validator:(e,t,r)=>{const{caveats:s}=e;if(!s||1!==s.length||s[0].type!==us.Ky.restrictReturnedAccounts)throw new Error(`${oi.eth_accounts} error: Invalid caveats. There must be a single caveat of type "${us.Ky.restrictReturnedAccounts}".`)}}});const di=Object.freeze(["eth_blockNumber","eth_call","eth_chainId","eth_coinbase","eth_decrypt","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getEncryptionPublicKey","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleByBlockHashAndIndex","eth_getUncleByBlockNumberAndIndex","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_getWork","eth_hashrate","eth_mining","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_protocolVersion","eth_sendRawTransaction","eth_sendTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v1","eth_signTypedData_v3","eth_signTypedData_v4","eth_subscribe","eth_submitHashrate","eth_submitWork","eth_syncing","eth_uninstallFilter","eth_unsubscribe","metamask_getProviderState","metamask_watchAsset","net_listening","net_peerCount","net_version","personal_ecRecover","personal_sign","wallet_watchAsset","web3_clientVersion","web3_sha3"]),ui="wallet_",pi="metamask_accountsChanged",hi="metamask_unlockStateChanged",gi="metamask_chainChanged",mi=["wallet_registerOnboarding","wallet_watchAsset"],fi="restricted",vi="internal";class yi{constructor({restrictedMethods:e,initState:t}){this.restrictedMethods=e,this.store=new m.ObservableStore({permissionHistory:{},permissionActivityLog:[],...t})}getActivityLog(){return this.store.getState().permissionActivityLog}updateActivityLog(e){this.store.updateState({permissionActivityLog:e})}getHistory(){return this.store.getState().permissionHistory}updateHistory(e){this.store.updateState({permissionHistory:e})}updateAccountsHistory(e,t){if(0===t.length)return;const r=Ci(t,Date.now());this.commitNewHistory(e,{eth_accounts:{accounts:r}})}createMiddleware(){return(e,t,r,s)=>{let n,a;const{origin:o,method:i}=e,c=i.startsWith(ui);if(mi.includes(i)||!c&&!this.restrictedMethods.has(i)){if("eth_requestAccounts"!==i)return void r();n=this.logRequest(e,c),a=["eth_accounts"]}else n=this.logRequest(e,c),"wallet_requestPermissions"===i&&(a=this.getRequestedMethods(e));r((e=>{const r=Date.now();this.logResponse(n,t,r),a&&!t.error&&t.result&&this.logPermissionsHistory(a,o,t.result,r,"eth_requestAccounts"===i),e()}))}}logRequest(e,t){const r={id:e.id,method:e.method,methodType:t?vi:fi,origin:e.origin,requestTime:Date.now(),responseTime:null,success:null};return this.commitNewActivity(r),r}logResponse(e,t,r){e&&t&&(e.success=Object.hasOwnProperty.call(t,"result"),e.responseTime=r)}commitNewActivity(e){const t=this.getActivityLog();t.push(e),t.length>100&&t.shift(),this.updateActivityLog(t)}logPermissionsHistory(e,t,r,s,n){let a,o;if(n){a=r;o={eth_accounts:{accounts:Ci(a,s),lastApproved:s}}}else o=r.map((e=>("eth_accounts"===e.parentCapability&&(a=this.getAccountsFromPermission(e)),e.parentCapability))).reduce(((t,r)=>{if(e.includes(r))if("eth_accounts"===r){const e=Ci(a,s);t[r]={lastApproved:s,accounts:e}}else t[r]={lastApproved:s};return t}),{});Object.keys(o).length>0&&this.commitNewHistory(t,o)}commitNewHistory(e,t){const r=this.getHistory(),s={...r[e],...t},n=r[e]&&r[e].eth_accounts,a=t.eth_accounts;if(n&&a){const e=a.lastApproved||n.lastApproved;s.eth_accounts={lastApproved:e,accounts:{...n.accounts,...a.accounts}}}r[e]=s,this.updateHistory(r)}getRequestedMethods(e){return e.params&&e.params[0]&&"object"==typeof e.params[0]&&!Array.isArray(e.params[0])?Object.keys(e.params[0]):null}getAccountsFromPermission(e){if("eth_accounts"!==e.parentCapability||!e.caveats)return[];const t=new Set;for(const r of e.caveats)if(r.type===us.Ky.restrictReturnedAccounts&&Array.isArray(r.value))for(const e of r.value)t.add(e);return[...t]}}function Ci(e,t){return e.reduce(((e,r)=>({...e,[r]:t})),{})}const Si=(0,r(42279).P1)((e=>e.subjects),(e=>Object.values(e).reduce(((e,t)=>{var r,s;const n=null===(r=t.permissions)||void 0===r||null===(s=r.eth_accounts)||void 0===s?void 0:s.caveats.find((({type:e})=>e===us.Ky.restrictReturnedAccounts));return n&&e.set(t.origin,n.value),e}),new Map)));function Ti(e){return{addPermittedAccount:(t,r)=>{const s=e.getCaveat(t,us.Gz.eth_accounts,us.Ky.restrictReturnedAccounts);s.value.includes(r)||e.updateCaveat(t,us.Gz.eth_accounts,us.Ky.restrictReturnedAccounts,[...s.value,r])},removePermittedAccount:(t,r)=>{const s=e.getCaveat(t,us.Gz.eth_accounts,us.Ky.restrictReturnedAccounts);if(!s.value.includes(r))return;const n=s.value.filter((e=>e!==r));0===n.length?e.revokePermission(t,us.Gz.eth_accounts):e.updateCaveat(t,us.Gz.eth_accounts,us.Ky.restrictReturnedAccounts,n)},requestAccountsPermissionWithId:async t=>{const r=zr()();return e.requestPermissions({origin:t},{eth_accounts:{}},{id:r}),r}}}const wi={[us.Ky.restrictReturnedAccounts]:{removeAccount:function(e,t){const r=t.filter((t=>t!==e));if(r.length===t.length)return{operation:ss.CaveatMutatorOperation.noop};if(r.length>0)return{operation:ss.CaveatMutatorOperation.updateValue,value:r};return{operation:ss.CaveatMutatorOperation.revokePermission}}}};const ki="rate_limited",bi="blocked",Pi="non_rate_limited",Mi={[C.C7.ETH_SIGN]:Pi,[C.C7.ETH_SIGN_TYPED_DATA]:Pi,[C.C7.ETH_SIGN_TYPED_DATA_V3]:Pi,[C.C7.ETH_SIGN_TYPED_DATA_V4]:Pi,[C.C7.PERSONAL_SIGN]:Pi,[C.C7.ETH_DECRYPT]:Pi,[C.C7.ETH_GET_ENCRYPTION_PUBLIC_KEY]:Pi,[C.C7.ETH_REQUEST_ACCOUNTS]:ki,[C.C7.WALLET_REQUEST_PERMISSIONS]:ki,[C.C7.SEND_METADATA]:bi,[C.C7.GET_PROVIDER_STATE]:bi},Ei={[C.C7.ETH_SIGN]:{APPROVED:J,REJECTED:Z,REQUESTED:ee},[C.C7.ETH_SIGN_TYPED_DATA]:{APPROVED:J,REJECTED:Z,REQUESTED:ee},[C.C7.ETH_SIGN_TYPED_DATA_V3]:{APPROVED:J,REJECTED:Z,REQUESTED:ee},[C.C7.ETH_SIGN_TYPED_DATA_V4]:{APPROVED:J,REJECTED:Z,REQUESTED:ee},[C.C7.PERSONAL_SIGN]:{APPROVED:J,REJECTED:Z,REQUESTED:ee},[C.C7.ETH_DECRYPT]:{APPROVED:G,REJECTED:j,REQUESTED:H},[C.C7.ETH_GET_ENCRYPTION_PUBLIC_KEY]:{APPROVED:$,REJECTED:q,REQUESTED:K},[C.C7.ETH_REQUEST_ACCOUNTS]:{APPROVED:W,REJECTED:Q,REQUESTED:z},[C.C7.WALLET_REQUEST_PERMISSIONS]:{APPROVED:W,REJECTED:Q,REQUESTED:z}},Ai={};var Ii=r(84528);function _i(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const Ni={UPDATE_BADGE:"updateBadge",APPROVAL_STATE_CHANGE:"ApprovalController:stateChange"};class xi extends(n()){constructor(e){var t,r;super(),_i(this,"removePermissionsFor",(e=>{try{this.permissionController.revokePermissions(e)}catch(e){if(!(e instanceof ss.PermissionsRequestNotFoundError))throw e}})),_i(this,"rejectPermissionsRequest",(e=>{try{this.permissionController.rejectPermissionsRequest(e)}catch(e){if(!(e instanceof ss.PermissionsRequestNotFoundError))throw e}})),_i(this,"acceptPermissionsRequest",(e=>{try{this.permissionController.acceptPermissionsRequest(e)}catch(e){if(!(e instanceof ss.PermissionsRequestNotFoundError))throw e}})),_i(this,"resolvePendingApproval",((e,t)=>{try{this.approvalController.accept(e,t)}catch(e){if(!(e instanceof Xr.ApprovalRequestNotFoundError))throw e}})),_i(this,"rejectPendingApproval",((e,t)=>{try{this.approvalController.reject(e,new y.EthereumRpcError(t.code,t.message,t.data))}catch(e){if(!(e instanceof Xr.ApprovalRequestNotFoundError))throw e}})),this.defaultMaxListeners=20,this.sendUpdate=(0,de.debounce)(this.privateSendUpdate.bind(this),200*S.KP),this.opts=e,this.extension=e.browser,this.platform=e.platform,this.notificationManager=e.notificationManager;const s=e.initState||{},n=this.platform.getVersion();this.recordFirstTimeInfo(s),this.activeControllerConnections=0,this.getRequestAccountTabIds=e.getRequestAccountTabIds,this.getOpenMetamaskTabsIds=e.getOpenMetamaskTabsIds,this.controllerMessenger=new Jr.ControllerMessenger,this.localStoreApiWrapper=e.localStore,this.store=new Hs({state:s,controllerMessenger:this.controllerMessenger,persist:!0}),this.connections={},this.createVaultMutex=new Fr.W,this.extension.runtime.onInstalled.addListener((e=>{"update"===e.reason&&"8.1.0"===n&&this.platform.openExtensionInBrowser()})),this.approvalController=new Xr.ApprovalController({messenger:this.controllerMessenger.getRestricted({name:"ApprovalController"}),showApprovalRequest:e.showUserConfirmation}),this.networkController=new Gn({state:s.NetworkController,infuraProjectId:e.infuraProjectId}),this.networkController.initializeProvider(),this.provider=this.networkController.getProviderAndBlockTracker().provider,this.blockTracker=this.networkController.getProviderAndBlockTracker().blockTracker;const a=this.controllerMessenger.getRestricted({name:"TokenListController"});this.tokenListController=new Zr.TokenListController({chainId:Ds(this.networkController.store.getState().provider.chainId),preventPollingOnNetworkRestart:!s.TokenListController||s.TokenListController.preventPollingOnNetworkRestart,onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:Ds(t.provider.chainId)}};return e(r)}))},messenger:a,state:s.TokenListController}),this.preferencesController=new Vn({initState:s.PreferencesController,initLangCode:e.initLangCode,openPopup:e.openPopup,network:this.networkController,tokenListController:this.tokenListController,provider:this.provider}),this.tokensController=new Zr.TokensController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)})),config:{provider:this.provider},state:s.TokensController}),this.assetsContractController=new Zr.AssetsContractController({onPreferencesStateChange:e=>this.preferencesController.store.subscribe(e),onNetworkStateChange:e=>this.networkController.on(Dn,(()=>{const t=this.networkController.store.getState(),r={...t,providerConfig:{...t.provider,chainId:Ds(t.provider.chainId)}};return e(r)}))},{provider:this.provider},s.AssetsContractController),this.nftController=new Zr.NftController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:Ds(t.provider.chainId)}};return e(r)})),getERC721AssetName:this.assetsContractController.getERC721AssetName.bind(this.assetsContractController),getERC721AssetSymbol:this.assetsContractController.getERC721AssetSymbol.bind(this.assetsContractController),getERC721TokenURI:this.assetsContractController.getERC721TokenURI.bind(this.assetsContractController),getERC721OwnerOf:this.assetsContractController.getERC721OwnerOf.bind(this.assetsContractController),getERC1155BalanceOf:this.assetsContractController.getERC1155BalanceOf.bind(this.assetsContractController),getERC1155TokenURI:this.assetsContractController.getERC1155TokenURI.bind(this.assetsContractController),onNftAdded:({address:e,symbol:t,tokenId:r,standard:s,source:n})=>this.metaMetricsController.trackEvent({event:V,category:re.WALLET,properties:{token_contract_address:e,token_symbol:t,asset_type:be.h3.NFT,token_standard:s,source:n},sensitiveProperties:{tokenId:r}})},{},s.NftController),this.nftController.setApiKey(process.env.OPENSEA_KEY),process.env.NFTS_V1&&(this.nftDetectionController=new Zr.NftDetectionController({onNftsStateChange:e=>this.nftController.subscribe(e),onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:Ds(t.provider.chainId)}};return e(r)})),getOpenSeaApiKey:()=>this.nftController.openSeaApiKey,getBalancesInSingleCall:this.assetsContractController.getBalancesInSingleCall.bind(this.assetsContractController),addNft:this.nftController.addNft.bind(this.nftController),getNftState:()=>this.nftController.state})),this.metaMetricsController=new jo({segment:ti,preferencesStore:this.preferencesController.store,onNetworkDidChange:this.networkController.on.bind(this.networkController,Dn),getNetworkIdentifier:()=>{const{type:e,rpcUrl:t}=this.networkController.store.getState().provider;return e===Ct.Qv.RPC?t:e},getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,version:this.platform.getVersion(),environment:process.env.METAMASK_ENVIRONMENT,extension:this.extension,initState:s.MetaMetricsController,captureException:Sr.Tb}),this.on("update",(e=>{this.metaMetricsController.handleMetaMaskStateUpdate(e)}));const o=this.controllerMessenger.getRestricted({name:"GasFeeController"}),i=process.env.SWAPS_USE_DEV_APIS?ds.zA:ds.$7;this.gasFeeController=new rs.GasFeeController({state:s.GasFeeController,interval:1e4,messenger:o,clientId:ds.$g,getProvider:()=>this.networkController.getProviderAndBlockTracker().provider,onNetworkStateChange:this.networkController.on.bind(this.networkController,Dn),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),legacyAPIEndpoint:`${i}/networks/<chain_id>/gasPrices`,EIP1559APIEndpoint:`${i}/networks/<chain_id>/suggestedGasFees`,getCurrentNetworkLegacyGasAPICompatibility:()=>{const{chainId:e}=this.networkController.store.getState().provider;return process.env.IN_TEST||e===Ct.vo.MAINNET},getChainId:()=>process.env.IN_TEST?Ct.vo.MAINNET:this.networkController.store.getState().provider.chainId}),this.qrHardwareKeyring=new Kr.MetaMaskKeyring,this.appStateController=new zn({addUnlockListener:this.on.bind(this,"unlock"),isUnlocked:this.isUnlocked.bind(this),initState:s.AppStateController,onInactiveTimeout:()=>this.setLocked(),showUnlockRequest:e.showUserConfirmation,preferencesStore:this.preferencesController.store,qrHardwareStore:this.qrHardwareKeyring.getMemStore()});const c=this.controllerMessenger.getRestricted({name:"CurrencyRateController"});this.currencyRateController=new Zr.CurrencyRateController({includeUsdRate:!0,messenger:c,state:{...s.CurrencyController,nativeCurrency:this.networkController.providerStore.getState().ticker}}),this.phishingController=new es.PhishingController({},s.PhishingController),this.phishingController.maybeUpdatePhishingLists(),process.env.IN_TEST&&this.phishingController.setRefreshInterval(5*S.sh),this.announcementController=new ts.AnnouncementController({allAnnouncements:ps},s.AnnouncementController),this.tokenRatesController=new Zr.TokenRatesController({onTokensStateChange:e=>this.tokensController.subscribe(e),onCurrencyRateStateChange:e=>this.controllerMessenger.subscribe(`${this.currencyRateController.name}:stateChange`,e),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:Ds(t.provider.chainId)}};return e(r)}))},{disabled:!this.preferencesController.store.getState().useCurrencyRateCheck},s.TokenRatesController),this.preferencesController.store.subscribe((0,Fe.HB)(((e,t)=>{const{useCurrencyRateCheck:r}=e,{useCurrencyRateCheck:s}=t;s&&!r?(this.currencyRateController.start(),this.tokenRatesController.configure({disabled:!1},!1,!1)):!s&&r&&(this.currencyRateController.stop(),this.tokenRatesController.configure({disabled:!0},!1,!1))}),this.preferencesController.store.getState())),this.ensController=new Sn({provider:this.provider,getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,onNetworkDidChange:this.networkController.on.bind(this.networkController,Dn)}),this.onboardingController=new sa({initState:s.OnboardingController}),this.incomingTransactionsController=new ca({blockTracker:this.blockTracker,onNetworkDidChange:this.networkController.on.bind(this.networkController,Dn),getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,preferencesController:this.preferencesController,onboardingController:this.onboardingController,initState:s.IncomingTransactionsController}),this.accountTracker=new zs({provider:this.provider,blockTracker:this.blockTracker,getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,getNetworkIdentifier:()=>{const{type:e,rpcUrl:t}=this.networkController.store.getState().provider;return e===Ct.Qv.RPC?t:e},preferencesController:this.preferencesController,onboardingController:this.onboardingController}),this.on("controllerConnectionChanged",(e=>{const{completedOnboarding:t}=this.onboardingController.store.getState();e>0&&t?this.triggerNetworkrequests():this.stopNetworkRequests()})),this.onboardingController.store.subscribe((0,Fe.HB)((async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:s}=t;!r&&s&&this.triggerNetworkrequests()}),this.onboardingController.store.getState())),this.cachedBalancesController=new Yn({accountTracker:this.accountTracker,getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,initState:s.CachedBalancesController}),this.tokensController.hub.on("pendingSuggestedAsset",(async()=>{await e.openPopup()}));let l=[(0,Ur.keyringBuilderFactory)(Kr.MetaMaskKeyring)];if(this.canUseHardwareWallets()){var d;const e=null===(d=this.opts.overrides)||void 0===d?void 0:d.keyrings;l=[(null==e?void 0:e.trezor)||Gr(),(null==e?void 0:e.ledger)||Hr(),(null==e?void 0:e.lattice)||qr(),Kr.MetaMaskKeyring].map((e=>(0,Ur.keyringBuilderFactory)(e)))}this.keyringController=new Ur.KeyringController({keyringBuilders:l,initState:s.KeyringController,encryptor:e.encryptor||void 0,cacheEncryptionKey:ce.A}),this.keyringController.memStore.subscribe((e=>this._onKeyringControllerUpdate(e))),this.keyringController.on("unlock",(()=>this._onUnlock())),this.keyringController.on("lock",(()=>this._onLock()));const u=()=>this.preferencesController.store.getState().identities;this.permissionController=new ss.PermissionController({messenger:this.controllerMessenger.getRestricted({name:"PermissionController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`]}),state:s.PermissionController,caveatSpecifications:ci({getIdentities:u}),permissionSpecifications:{...li({getIdentities:u,getAllAccounts:this.keyringController.getAccounts.bind(this.keyringController),captureKeyringTypesWithMissingIdentities:(e={},t=[])=>{const r=t.filter((t=>!e[t])).map((e=>{var t;return null===(t=this.keyringController.getKeyringForAccount(e))||void 0===t?void 0:t.type})),s=Object.keys(e||{}).length,n=Object.keys(this.accountTracker.store.getState().accounts||{}).length;(0,Sr.Tb)(new Error(`Attempt to get permission specifications failed because their were ${t.length} accounts, but ${s} identities, and the ${r} keyrings included accounts with missing identities. Meanwhile, there are ${n} accounts in the account tracker.`))}}),...this.getSnapPermissionSpecifications()},unrestrictedMethods:di}),this.permissionLogController=new yi({restrictedMethods:new Set(Object.keys(us.Gz)),initState:s.PermissionLogController}),this.subjectMetadataController=new rr.SubjectMetadataController({messenger:this.controllerMessenger.getRestricted({name:"SubjectMetadataController",allowedActions:[`${this.permissionController.name}:hasPermissions`]}),state:s.SubjectMetadataController,subjectCacheLimit:100});const p={iframeUrl:new URL("https://metamask.github.io/iframe-execution-environment/0.12.0"),messenger:this.controllerMessenger.getRestricted({name:"ExecutionService"}),setupSnapProvider:this.setupSnapProvider.bind(this)};this.snapExecutionService=(null===(t=this.opts.overrides)||void 0===t||null===(r=t.createSnapExecutionService)||void 0===r?void 0:r.call(t,p))||new cs.IframeExecutionService(p);const h=this.controllerMessenger.getRestricted({name:"SnapController",allowedEvents:["ExecutionService:unhandledError","ExecutionService:outboundRequest","ExecutionService:outboundResponse"],allowedActions:[`${this.permissionController.name}:getEndowments`,`${this.permissionController.name}:getPermissions`,`${this.permissionController.name}:hasPermission`,`${this.permissionController.name}:hasPermissions`,`${this.permissionController.name}:requestPermissions`,`${this.permissionController.name}:revokeAllPermissions`,`${this.permissionController.name}:revokePermissions`,`${this.permissionController.name}:revokePermissionForAllSubjects`,`${this.approvalController.name}:addRequest`,`${this.permissionController.name}:grantPermissions`,`${this.subjectMetadataController.name}:getSubjectMetadata`,"ExecutionService:executeSnap","ExecutionService:getRpcRequestHandler","ExecutionService:terminateSnap","ExecutionService:terminateAllSnaps","ExecutionService:handleRpcRequest"]});this.snapController=new cs.SnapController({environmentEndowmentPermissions:Object.values(us.TS),excludedPermissions:{...us.Y8,...us.J9},closeAllConnections:this.removeAllConnections.bind(this),state:s.SnapController,messenger:h,featureFlags:{dappsCanUpdateSnaps:!0,allowLocalSnaps:Fs,requireAllowlist:Us}}),this.notificationController=new as.NotificationController({messenger:this.controllerMessenger.getRestricted({name:"NotificationController"}),state:s.NotificationController}),this.rateLimitController=new ns.RateLimitController({state:s.RateLimitController,messenger:this.controllerMessenger.getRestricted({name:"RateLimitController"}),implementations:{showNativeNotification:(e,t)=>{var r;const s=this.controllerMessenger.call("SubjectMetadataController:getState").subjectMetadata[e];return this.platform._showNotification(null!==(r=null==s?void 0:s.name)&&void 0!==r?r:e,t),null},showInAppNotification:(e,t)=>(this.controllerMessenger.call("NotificationController:show",e,t),null)}});const m=this.controllerMessenger.getRestricted({name:"CronjobController",allowedEvents:["SnapController:snapInstalled","SnapController:snapUpdated","SnapController:snapRemoved"],allowedActions:[`${this.permissionController.name}:getPermissions`,"SnapController:handleRequest","SnapController:getAll"]});this.cronjobController=new cs.CronjobController({state:s.CronjobController,messenger:m}),this.detectTokensController=new co({preferences:this.preferencesController,tokensController:this.tokensController,assetsContractController:this.assetsContractController,network:this.networkController,keyringMemStore:this.keyringController.memStore,tokenList:this.tokenListController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.addressBookController=new Yr.AddressBookController(void 0,s.AddressBookController),this.alertController=new ta({initState:s.AlertController,preferencesStore:this.preferencesController.store}),this.backupController=new na({preferencesController:this.preferencesController,addressBookController:this.addressBookController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.txController=new oo({initState:s.TransactionController||s.TransactionManager,getPermittedAccounts:this.getPermittedAccounts.bind(this),getProviderConfig:()=>this.networkController.store.getState().provider,getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),getNetworkState:()=>this.networkController.store.getState().network,onNetworkStateChange:e=>this.networkController.networkStore.subscribe(e),getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,preferencesStore:this.preferencesController.store,txHistoryLimit:60,signTransaction:this.keyringController.signTransaction.bind(this.keyringController),provider:this.provider,blockTracker:this.blockTracker,createEventFragment:this.metaMetricsController.createEventFragment.bind(this.metaMetricsController),updateEventFragment:this.metaMetricsController.updateEventFragment.bind(this.metaMetricsController),finalizeEventFragment:this.metaMetricsController.finalizeEventFragment.bind(this.metaMetricsController),getEventFragmentById:this.metaMetricsController.getEventFragmentById.bind(this.metaMetricsController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getParticipateInMetrics:()=>this.metaMetricsController.state.participateInMetaMetrics,getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getExternalPendingTransactions:this.getExternalPendingTransactions.bind(this),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getTokenStandardAndDetails:this.assetsContractController.getTokenStandardAndDetails.bind(this.assetsContractController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.txController.on("newUnapprovedTx",(()=>e.showUserConfirmation())),this.txController.on("tx:status-update",(async(e,t)=>{if(t===be.LN.confirmed||t===be.LN.failed){const t=this.txController.txStateManager.getTransaction(e),i=this.preferencesController.getFrequentRpcListDetail();let c={};if(t.chainId){var r;const e=i.find((e=>t.chainId===e.chainId));c=null!==(r=null==e?void 0:e.rpcPrefs)&&void 0!==r?r:{}}this.platform.showTransactionNotification(t,c);const{txReceipt:l}=t;if(t.type===be.iU.tokenMethodTransferFrom&&void 0!==t.txParams){var s,n,a;const{data:e,to:r,from:o}=t.txParams,{chainId:i}=t,c=ks(e),l=null!==(s=function(e={}){var t,r,s,n,a;return null!==(t=null==e||null===(r=e.args)||void 0===r||null===(s=r._tokenId)||void 0===s?void 0:s.toString())&&void 0!==t?t:null==e||null===(n=e.args)||void 0===n||null===(a=n.id)||void 0===a?void 0:a.toString()}(c))&&void 0!==s?s:(0,As.d)(c),{allNfts:d}=this.nftController.state,u=Ds(i),p=null==d||null===(n=d[o])||void 0===n||null===(a=n[u])||void 0===a?void 0:a.find((({address:e,tokenId:t})=>hs(e,r)&&t===l));p&&this.nftController.checkAndUpdateSingleNftOwnershipStatus(p,!1,{userAddress:o,chainId:u})}const d=this.getState();var o;if(l&&"0x0"===l.status)this.metaMetricsController.trackEvent({event:"Tx Status Update: On-Chain Failure",category:re.BACKGROUND,properties:{action:"Transactions",errorMessage:null===(o=t.simulationFails)||void 0===o?void 0:o.reason,numberOfTokens:d.tokens.length,numberOfAccounts:Object.keys(d.accounts).length}},{matomoEvent:!0})}})),this.networkController.on(Dn,(async()=>{const{ticker:e}=this.networkController.store.getState().provider;try{await this.currencyRateController.setNativeCurrency(e)}catch(e){console.error(e)}})),this.networkController.lookupNetwork(),this.messageManager=new la({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.personalMessageManager=new va({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.decryptMessageManager=new pa({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.encryptionPublicKeyManager=new ha({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.typedMessageManager=new Ca({getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.swapsController=new Eo({getBufferedGasLimit:this.txController.txGasUtil.getBufferedGasLimit.bind(this.txController.txGasUtil),networkController:this.networkController,provider:this.provider,getProviderConfig:()=>this.networkController.store.getState().provider,getTokenRatesState:()=>this.tokenRatesController.state,getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController)}),this.smartTransactionsController=new(is())({onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)}))},getNetwork:()=>this.networkController.store.getState().network,getNonceLock:this.txController.nonceTracker.getNonceLock.bind(this.txController.nonceTracker),confirmExternalTransaction:this.txController.confirmExternalTransaction.bind(this.txController),provider:this.provider,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)},{supportedChainIds:[Ct.vo.MAINNET,Ct.vo.GOERLI]},s.SmartTransactionsController),this.desktopController=new Ii.kN({initState:s.DesktopController}),this.networkController.on(Dn,(()=>{this.accountTracker._updateAccounts()})),this.networkController.on(Un,(()=>{this.txController.txStateManager.clearUnapprovedTxs(),this.encryptionPublicKeyManager.clearUnapproved(),this.personalMessageManager.clearUnapproved(),this.typedMessageManager.clearUnapproved(),this.decryptMessageManager.clearUnapproved(),this.messageManager.clearUnapproved()})),this.metamaskMiddleware=function({version:e,getAccounts:t,processTransaction:r,processEthSignMessage:s,processTypedMessage:n,processTypedMessageV3:a,processTypedMessageV4:o,processPersonalMessage:i,processDecryptMessage:c,processEncryptionPublicKey:l,getPendingNonce:d,getPendingTransactionByHash:u}){return(0,Or.mergeMiddleware)([(0,Or.createScaffoldMiddleware)({eth_syncing:!1,web3_clientVersion:`MetaMask/v${e}`}),(0,Dr.createWalletMiddleware)({getAccounts:t,processTransaction:r,processEthSignMessage:s,processTypedMessage:n,processTypedMessageV3:a,processTypedMessageV4:o,processPersonalMessage:i,processDecryptMessage:c,processEncryptionPublicKey:l}),si({getPendingNonce:d}),ni({getPendingTransactionByHash:u})])}({static:{eth_syncing:!1,web3_clientVersion:`MetaMask/v${n}`},version:n,getAccounts:async({origin:e},{suppressUnauthorizedError:t=!0}={})=>{if(e===C.jr){const e=this.preferencesController.getSelectedAddress();return e?[e]:[]}return this.isUnlocked()?await this.getPermittedAccounts(e,{suppressUnauthorizedError:t}):[]},processTransaction:this.newUnapprovedTransaction.bind(this),processEthSignMessage:this.newUnsignedMessage.bind(this),processTypedMessage:this.newUnsignedTypedMessage.bind(this),processTypedMessageV3:this.newUnsignedTypedMessage.bind(this),processTypedMessageV4:this.newUnsignedTypedMessage.bind(this),processPersonalMessage:this.newUnsignedPersonalMessage.bind(this),processDecryptMessage:this.newRequestDecryptMessage.bind(this),processEncryptionPublicKey:this.newRequestEncryptionPublicKey.bind(this),getPendingNonce:this.getPendingNonce.bind(this),getPendingTransactionByHash:e=>this.txController.getTransactions({searchCriteria:{hash:e,status:be.LN.submitted}})[0]}),this.on("update",(e=>this._onStateUpdate(e)));const f={AccountTracker:this.accountTracker.store,TxController:this.txController.memStore,TokenRatesController:this.tokenRatesController,MessageManager:this.messageManager.memStore,PersonalMessageManager:this.personalMessageManager.memStore,DecryptMessageManager:this.decryptMessageManager.memStore,EncryptionPublicKeyManager:this.encryptionPublicKeyManager.memStore,TypesMessageManager:this.typedMessageManager.memStore,SwapsController:this.swapsController.store,EnsController:this.ensController.store,ApprovalController:this.approvalController};this.store.updateStructure({AppStateController:this.appStateController.store,TransactionController:this.txController.store,KeyringController:this.keyringController.store,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,PhishingController:this.phishingController,SnapController:this.snapController,CronjobController:this.cronjobController,NotificationController:this.notificationController,DesktopController:this.desktopController.store,...f}),this.memStore=new Hs({config:{AppStateController:this.appStateController.store,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,KeyringController:this.keyringController.memStore,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,SnapController:this.snapController,CronjobController:this.cronjobController,NotificationController:this.notificationController,DesktopController:this.desktopController.store,...f},controllerMessenger:this.controllerMessenger});const v=[this.accountTracker.resetState,this.txController.resetState,this.messageManager.resetState,this.personalMessageManager.resetState,this.decryptMessageManager.resetState,this.encryptionPublicKeyManager.resetState,this.typedMessageManager.resetState,this.swapsController.resetState,this.ensController.resetState,this.approvalController.clear.bind(this.approvalController)];ce.A?!0===globalThis.isFirstTimeProfileLoaded&&this.resetStates(v):this.resetStates(v),!this.isUnlocked()&&this.onboardingController.store.getState().completedOnboarding?this._loginUser():this._startUISync(),this.extension.runtime.getPlatformInfo().then((({os:e})=>{this.appStateController.setBrowserEnvironment(e,void 0===this.extension.runtime.getBrowserInfo?"chrome":"firefox")})),this.setupControllerEventSubscriptions(),this.publicConfigStore=this.createPublicConfigStore(),this.extension.runtime.onMessageExternal.addListener(Gs),(async()=>{if((0,Fe.Xf)()!==C.ck&&(0,Fe.Xf)()!==C.q$)return;const e=(0,Fe.Xf)()===C.ck?C.aq:C.zj,t=g().runtime.id;for(const r of e)if(r!==t)try{await g().runtime.sendMessage(r,Bs)}catch(e){}})()}triggerNetworkrequests(){this.accountTracker.start(),this.incomingTransactionsController.start(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.start(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.start()}stopNetworkRequests(){this.accountTracker.stop(),this.incomingTransactionsController.stop(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.stop(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.stop()}canUseHardwareWallets(){var e;return!ce.A||(null===(e=process.env.CONF)||void 0===e?void 0:e.HARDWARE_WALLETS_MV3)}resetStates(e){e.forEach((e=>{try{e()}catch(e){console.error(e)}})),globalThis.isFirstTimeProfileLoaded=!1}getSnapPermissionSpecifications(){return{...Object.values(cs.endowmentPermissionBuilders).reduce(((e,{targetKey:t,specificationBuilder:r})=>(Object.keys(us.J9).includes(t)||(e[t]=r()),e)),{}),...(e={clearSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:clearSnapState"),getMnemonic:this.getPrimaryKeyringMnemonic.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),getSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:get"),handleSnapRpcRequest:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:handleRequest"),getSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getSnapState"),showConfirmation:(e,t)=>this.approvalController.addAndShowApprovalRequest({origin:e,type:C.C7.SNAP_DIALOG_CONFIRMATION,requestData:t}),showDialog:(e,t,r,s)=>this.approvalController.addAndShowApprovalRequest({origin:e,type:C.$6[t],requestData:{content:r,placeholder:s}}),showNativeNotification:(e,t)=>this.controllerMessenger.call("RateLimitController:call",e,"showNativeNotification",e,t.message),showInAppNotification:(e,t)=>this.controllerMessenger.call("RateLimitController:call",e,"showInAppNotification",e,t.message),updateSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:updateSnapState")},Object.values(ai.restrictedMethodPermissionBuilders).reduce(((t,{targetKey:r,specificationBuilder:s,methodHooks:n})=>(Object.keys(us.Y8).includes(r)||(t[r]=s({methodHooks:(0,ai.selectHooks)(e,n)})),t)),{}))};var e}dismissNotifications(e){this.notificationController.dismiss(e)}markNotificationsAsRead(e){this.notificationController.markRead(e)}setupControllerEventSubscriptions(){const e=async(e,t)=>{this.isUnlocked()&&this.notifyConnections(e,{method:pi,params:t.length<2?t:await this.getPermittedAccounts(e)}),this.permissionLogController.updateAccountsHistory(e,t)};let t;this.preferencesController.store.subscribe((async({selectedAddress:r})=>{if(r&&r!==t){t=r;const s=Si(this.permissionController.state);for(const[t,n]of s.entries())n.includes(r)&&e(t,n)}})),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,(async(t,r)=>{const s=((e,t)=>{if(void 0===t)return e;const r=new Map;if(e===t)return r;const s=new Set([...e.keys()]);for(const a of t.keys()){var n;const o=null!==(n=e.get(a))&&void 0!==n?n:[];t.get(a)!==o&&r.set(a,o),s.delete(a)}for(const t of s.keys())r.set(t,e.get(t));return r})(t,r);for(const[t,r]of s.entries())e(t,r)}),Si),this.controllerMessenger.subscribe(`${this.snapController.name}:snapAdded`,((e,t=null)=>{const{manifest:{proposedName:r},version:s}=e;this.subjectMetadataController.addSubjectMetadata({subjectType:rr.SubjectType.Snap,name:r,origin:e.id,version:s,svgIcon:t})})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapInstalled`,(e=>{this.metaMetricsController.trackEvent({event:"Snap Installed",category:re.SNAPS,properties:{snap_id:e.id,version:e.version}})})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapUpdated`,((e,t)=>{this.metaMetricsController.trackEvent({event:"Snap Updated",category:re.SNAPS,properties:{snap_id:e.id,old_version:t,new_version:e.version}})})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapTerminated`,(e=>{const t=Object.values(this.approvalController.state.pendingApprovals).filter((t=>t.origin===e.id&&t.type.startsWith(us.Gz.snap_dialog)));for(const e of t)this.approvalController.reject(e.id,new Error("Snap was terminated."))})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapRemoved`,(e=>{const t=Object.values(this.notificationController.state.notifications).reduce(((t,r)=>(r.origin===e.id&&t.push(r.id),t)),[]);this.dismissNotifications(t)}))}createPublicConfigStore(){const e=new m.ObservableStore,{networkController:t}=this;function r(r){const{chainId:s}=t.store.getState().provider;"loading"!==r.network&&e.putState(function(e,{isUnlocked:t,network:r}){return{isUnlocked:t,chainId:e,networkVersion:r}}(s,r))}return this.on("update",r),r(this.getState()),e}async getProviderState(e){return{isUnlocked:this.isUnlocked(),...this.getProviderNetworkState(),accounts:await this.getPermittedAccounts(e)}}getProviderNetworkState(e){const{network:t}=e||this.getState();return{chainId:this.networkController.store.getState().provider.chainId,networkVersion:t}}getState(){const{vault:e}=this.keyringController.store.getState();return{isInitialized:Boolean(e),...this.memStore.getFlatState()}}getApi(){const{addressBookController:e,alertController:t,appStateController:r,nftController:s,nftDetectionController:n,currencyRateController:a,detectTokensController:o,ensController:i,gasFeeController:c,metaMetricsController:l,networkController:d,announcementController:u,onboardingController:p,permissionController:h,preferencesController:g,qrHardwareKeyring:m,swapsController:f,tokensController:v,smartTransactionsController:y,txController:C,assetsContractController:S,backupController:T}=this;return{getState:this.getState.bind(this),setCurrentCurrency:a.setCurrentCurrency.bind(a),setUseBlockie:g.setUseBlockie.bind(g),setUseNonceField:g.setUseNonceField.bind(g),setUsePhishDetect:g.setUsePhishDetect.bind(g),setUseMultiAccountBalanceChecker:g.setUseMultiAccountBalanceChecker.bind(g),setUseTokenDetection:g.setUseTokenDetection.bind(g),setUseNftDetection:g.setUseNftDetection.bind(g),setUseCurrencyRateCheck:g.setUseCurrencyRateCheck.bind(g),setOpenSeaEnabled:g.setOpenSeaEnabled.bind(g),setIpfsGateway:g.setIpfsGateway.bind(g),setParticipateInMetaMetrics:l.setParticipateInMetaMetrics.bind(l),setCurrentLocale:g.setCurrentLocale.bind(g),markPasswordForgotten:this.markPasswordForgotten.bind(this),unMarkPasswordForgotten:this.unMarkPasswordForgotten.bind(this),getRequestAccountTabIds:this.getRequestAccountTabIds,getOpenMetamaskTabsIds:this.getOpenMetamaskTabsIds,markNotificationPopupAsAutomaticallyClosed:()=>this.notificationManager.markAsAutomaticallyClosed(),addNewAccount:this.addNewAccount.bind(this),verifySeedPhrase:this.verifySeedPhrase.bind(this),resetAccount:this.resetAccount.bind(this),removeAccount:this.removeAccount.bind(this),importAccountWithStrategy:this.importAccountWithStrategy.bind(this),connectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this),setLedgerTransportPreference:this.setLedgerTransportPreference.bind(this),attemptLedgerTransportCreation:this.attemptLedgerTransportCreation.bind(this),establishLedgerTransportPreference:this.establishLedgerTransportPreference.bind(this),submitQRHardwareCryptoHDKey:m.submitCryptoHDKey.bind(m),submitQRHardwareCryptoAccount:m.submitCryptoAccount.bind(m),cancelSyncQRHardware:m.cancelSync.bind(m),submitQRHardwareSignature:m.submitSignature.bind(m),cancelQRHardwareSignRequest:m.cancelSignRequest.bind(m),fetchInfoToSync:this.fetchInfoToSync.bind(this),submitPassword:this.submitPassword.bind(this),verifyPassword:this.verifyPassword.bind(this),setProviderType:d.setProviderType.bind(d),rollbackToPreviousProvider:d.rollbackToPreviousProvider.bind(d),setCustomRpc:this.setCustomRpc.bind(this),updateAndSetCustomRpc:this.updateAndSetCustomRpc.bind(this),delCustomRpc:this.delCustomRpc.bind(this),addCustomNetwork:this.addCustomNetwork.bind(this),requestAddNetworkApproval:this.requestAddNetworkApproval.bind(this),setSelectedAddress:g.setSelectedAddress.bind(g),addToken:v.addToken.bind(v),rejectWatchAsset:v.rejectWatchAsset.bind(v),acceptWatchAsset:v.acceptWatchAsset.bind(v),updateTokenType:v.updateTokenType.bind(v),setAccountLabel:g.setAccountLabel.bind(g),setFeatureFlag:g.setFeatureFlag.bind(g),setPreference:g.setPreference.bind(g),addKnownMethodData:g.addKnownMethodData.bind(g),setDismissSeedBackUpReminder:g.setDismissSeedBackUpReminder.bind(g),setDisabledRpcMethodPreference:g.setDisabledRpcMethodPreference.bind(g),getRpcMethodPreferences:g.getRpcMethodPreferences.bind(g),setAdvancedGasFee:g.setAdvancedGasFee.bind(g),setTheme:g.setTheme.bind(g),setTransactionSecurityCheckEnabled:g.setTransactionSecurityCheckEnabled.bind(g),getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),addNft:s.addNft.bind(s),addNftVerifyOwnership:s.addNftVerifyOwnership.bind(s),removeAndIgnoreNft:s.removeAndIgnoreNft.bind(s),removeNft:s.removeNft.bind(s),checkAndUpdateAllNftsOwnershipStatus:s.checkAndUpdateAllNftsOwnershipStatus.bind(s),checkAndUpdateSingleNftOwnershipStatus:s.checkAndUpdateSingleNftOwnershipStatus.bind(s),isNftOwner:s.isNftOwner.bind(s),setAddressBook:e.set.bind(e),removeFromAddressBook:e.delete.bind(e),setLastActiveTime:r.setLastActiveTime.bind(r),setDefaultHomeActiveTabName:r.setDefaultHomeActiveTabName.bind(r),setConnectedStatusPopoverHasBeenShown:r.setConnectedStatusPopoverHasBeenShown.bind(r),setRecoveryPhraseReminderHasBeenShown:r.setRecoveryPhraseReminderHasBeenShown.bind(r),setRecoveryPhraseReminderLastShown:r.setRecoveryPhraseReminderLastShown.bind(r),setOutdatedBrowserWarningLastShown:r.setOutdatedBrowserWarningLastShown.bind(r),setShowTestnetMessageInDropdown:r.setShowTestnetMessageInDropdown.bind(r),setShowBetaHeader:r.setShowBetaHeader.bind(r),updateNftDropDownState:r.updateNftDropDownState.bind(r),setFirstTimeUsedNetwork:r.setFirstTimeUsedNetwork.bind(r),tryReverseResolveAddress:i.reverseResolveAddress.bind(i),setLocked:this.setLocked.bind(this),createNewVaultAndKeychain:this.createNewVaultAndKeychain.bind(this),createNewVaultAndRestore:this.createNewVaultAndRestore.bind(this),exportAccount:this.exportAccount.bind(this),cancelTransaction:C.cancelTransaction.bind(C),updateTransaction:C.updateTransaction.bind(C),updateAndApproveTransaction:C.updateAndApproveTransaction.bind(C),approveTransactionsWithSameNonce:C.approveTransactionsWithSameNonce.bind(C),createCancelTransaction:this.createCancelTransaction.bind(this),createSpeedUpTransaction:this.createSpeedUpTransaction.bind(this),estimateGas:this.estimateGas.bind(this),getNextNonce:this.getNextNonce.bind(this),addUnapprovedTransaction:C.addUnapprovedTransaction.bind(C),createTransactionEventFragment:C.createTransactionEventFragment.bind(C),getTransactions:C.getTransactions.bind(C),updateEditableParams:C.updateEditableParams.bind(C),updateTransactionGasFees:C.updateTransactionGasFees.bind(C),updateTransactionSendFlowHistory:C.updateTransactionSendFlowHistory.bind(C),updateSwapApprovalTransaction:C.updateSwapApprovalTransaction.bind(C),updateSwapTransaction:C.updateSwapTransaction.bind(C),updatePreviousGasParams:C.updatePreviousGasParams.bind(C),signMessage:this.signMessage.bind(this),cancelMessage:this.cancelMessage.bind(this),signPersonalMessage:this.signPersonalMessage.bind(this),cancelPersonalMessage:this.cancelPersonalMessage.bind(this),signTypedMessage:this.signTypedMessage.bind(this),cancelTypedMessage:this.cancelTypedMessage.bind(this),decryptMessage:this.decryptMessage.bind(this),decryptMessageInline:this.decryptMessageInline.bind(this),cancelDecryptMessage:this.cancelDecryptMessage.bind(this),encryptionPublicKey:this.encryptionPublicKey.bind(this),cancelEncryptionPublicKey:this.cancelEncryptionPublicKey.bind(this),setSeedPhraseBackedUp:p.setSeedPhraseBackedUp.bind(p),completeOnboarding:p.completeOnboarding.bind(p),setFirstTimeFlowType:p.setFirstTimeFlowType.bind(p),setAlertEnabledness:t.setAlertEnabledness.bind(t),setUnconnectedAccountAlertShown:t.setUnconnectedAccountAlertShown.bind(t),setWeb3ShimUsageAlertDismissed:t.setWeb3ShimUsageAlertDismissed.bind(t),removePermissionsFor:this.removePermissionsFor,approvePermissionsRequest:this.acceptPermissionsRequest,rejectPermissionsRequest:this.rejectPermissionsRequest,...Ti(h),removeSnapError:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:removeSnapError"),disableSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:disable"),enableSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:enable"),removeSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:remove"),handleSnapRequest:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:handleRequest"),dismissNotifications:this.dismissNotifications.bind(this),markNotificationsAsRead:this.markNotificationsAsRead.bind(this),fetchAndSetQuotes:f.fetchAndSetQuotes.bind(f),setSelectedQuoteAggId:f.setSelectedQuoteAggId.bind(f),resetSwapsState:f.resetSwapsState.bind(f),setSwapsTokens:f.setSwapsTokens.bind(f),clearSwapsQuotes:f.clearSwapsQuotes.bind(f),setApproveTxId:f.setApproveTxId.bind(f),setTradeTxId:f.setTradeTxId.bind(f),setSwapsTxGasPrice:f.setSwapsTxGasPrice.bind(f),setSwapsTxGasLimit:f.setSwapsTxGasLimit.bind(f),setSwapsTxMaxFeePerGas:f.setSwapsTxMaxFeePerGas.bind(f),setSwapsTxMaxFeePriorityPerGas:f.setSwapsTxMaxFeePriorityPerGas.bind(f),safeRefetchQuotes:f.safeRefetchQuotes.bind(f),stopPollingForQuotes:f.stopPollingForQuotes.bind(f),setBackgroundSwapRouteState:f.setBackgroundSwapRouteState.bind(f),resetPostFetchState:f.resetPostFetchState.bind(f),setSwapsErrorKey:f.setSwapsErrorKey.bind(f),setInitialGasEstimate:f.setInitialGasEstimate.bind(f),setCustomApproveTxData:f.setCustomApproveTxData.bind(f),setSwapsLiveness:f.setSwapsLiveness.bind(f),setSwapsFeatureFlags:f.setSwapsFeatureFlags.bind(f),setSwapsUserFeeLevel:f.setSwapsUserFeeLevel.bind(f),setSwapsQuotesPollingLimitEnabled:f.setSwapsQuotesPollingLimitEnabled.bind(f),setSmartTransactionsOptInStatus:y.setOptInState.bind(y),fetchSmartTransactionFees:y.getFees.bind(y),clearSmartTransactionFees:y.clearFees.bind(y),submitSignedTransactions:y.submitSignedTransactions.bind(y),cancelSmartTransaction:y.cancelSmartTransaction.bind(y),fetchSmartTransactionsLiveness:y.fetchLiveness.bind(y),updateSmartTransaction:y.updateSmartTransaction.bind(y),setStatusRefreshInterval:y.setStatusRefreshInterval.bind(y),trackMetaMetricsEvent:l.trackEvent.bind(l),trackMetaMetricsPage:l.trackPage.bind(l),createEventFragment:l.createEventFragment.bind(l),updateEventFragment:l.updateEventFragment.bind(l),finalizeEventFragment:l.finalizeEventFragment.bind(l),resolvePendingApproval:this.resolvePendingApproval,rejectPendingApproval:this.rejectPendingApproval,updateViewedNotifications:u.updateViewed.bind(u),getGasFeeEstimatesAndStartPolling:c.getGasFeeEstimatesAndStartPolling.bind(c),disconnectGasFeeEstimatePoller:c.disconnectPoller.bind(c),getGasFeeTimeEstimate:c.getTimeEstimate.bind(c),addPollingTokenToAppState:r.addPollingToken.bind(r),removePollingTokenFromAppState:r.removePollingToken.bind(r),backupUserData:T.backupUserData.bind(T),restoreUserData:T.restoreUserData.bind(T),detectNewTokens:o.detectNewTokens.bind(o),detectNfts:process.env.NFTS_V1?n.detectNfts.bind(n):null,addDetectedTokens:v.addDetectedTokens.bind(v),addImportedTokens:v.addTokens.bind(v),ignoreTokens:v.ignoreTokens.bind(v),getBalancesInSingleCall:S.getBalancesInSingleCall.bind(S),getDesktopEnabled:this.desktopController.getDesktopEnabled.bind(this.desktopController),setDesktopEnabled:this.desktopController.setDesktopEnabled.bind(this.desktopController),generateOtp:this.desktopController.generateOtp.bind(this.desktopController),testDesktopConnection:this.desktopController.testDesktopConnection.bind(this.desktopController),disableDesktop:this.desktopController.disableDesktop.bind(this.desktopController)}}async exportAccount(e,t){return await this.verifyPassword(t),this.keyringController.exportAccount(e,t)}async getTokenStandardAndDetails(e,t,r){var s,n;const a=await this.assetsContractController.getTokenStandardAndDetails(e,t,r);return{...a,decimals:null==a||null===(s=a.decimals)||void 0===s?void 0:s.toString(10),balance:null==a||null===(n=a.balance)||void 0===n?void 0:n.toString(10)}}async createNewVaultAndKeychain(e){const t=await this.createVaultMutex.acquire();try{let r;if((await this.keyringController.getAccounts()).length>0)r=await this.keyringController.fullUpdate();else{r=await this.keyringController.createNewVaultAndKeychain(e);const t=await this.keyringController.getAccounts();this.preferencesController.setAddresses(t),this.selectFirstIdentity()}return r}finally{t()}}async requestAddNetworkApproval(e,t){try{await this.approvalController.addAndShowApprovalRequest({origin:"metamask",type:"wallet_addEthereumChain",requestData:{chainId:e.chainId,blockExplorerUrl:e.rpcPrefs.blockExplorerUrl,chainName:e.nickname,rpcUrl:e.rpcUrl,ticker:e.ticker,imageUrl:e.rpcPrefs.imageUrl}})}catch(e){if(!t||"User rejected the request."!==e.message)throw e}}async addCustomNetwork(e,t){const{chainId:r,chainName:s,rpcUrl:n,ticker:a,blockExplorerUrl:o}=e;this.preferencesController.upsertToFrequentRpcList(n,r,a,s,{blockExplorerUrl:o}),this.metaMetricsController.trackEvent({event:"Custom Network Added",category:re.NETWORK,referrer:{url:C.jr},properties:{chain_id:r,symbol:a,source:se.NETWORK.POPULAR_NETWORK_LIST},actionId:t})}async createNewVaultAndRestore(e,t){const r=await this.createVaultMutex.acquire();try{let s,n;const a=Buffer.from(t),{keyringController:o}=this;this.preferencesController.setAddresses([]),this.permissionController.clearState(),this.snapController.clearState(),this.notificationController.clear(),this.accountTracker.clearAccounts(),this.cachedBalancesController.clearCachedBalances(),this.txController.txStateManager.clearUnapprovedTxs();const i=await o.createNewVaultAndRestore(e,a),c=new(Wr())(this.provider);s=await o.getAccounts(),n=await this.getBalance(s[s.length-1],c);const[l]=o.getKeyringsByType(Gt.hdKeyTree);if(!l)throw new Error("MetamaskController - No HD Key Tree found");for(;"0x0"!==n;)await o.addNewAccount(l),s=await o.getAccounts(),n=await this.getBalance(s[s.length-1],c);s.length>1&&"0x0"===n&&(await this.removeAccount(s[s.length-1]),s=await o.getAccounts());const d=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(d),this.preferencesController.setAddresses(s),this.selectFirstIdentity(),i}finally{r()}}getBalance(e,t){return new Promise(((r,s)=>{const n=this.accountTracker.store.getState().accounts[e];n&&n.balance?r(n.balance):t.getBalance(e,((e,t)=>{e?(s(e),p().error(e)):r(t||"0x0")}))}))}async fetchInfoToSync(){const{currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:s,useTokenDetection:n}=this.preferencesController.store.getState(),a=!n&&this.networkController.store.getState().provider.chainId===Ct.vo.MAINNET,{tokenList:o}=this.tokenListController.state,i=a?Es:o,c={currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:s},{allTokens:l,allIgnoredTokens:d}=this.tokensController.state,u={};Object.keys(l).forEach((e=>{u[e]={},Object.keys(l[e]).forEach((t=>{const r=(0,et.QG)(t);u[e][r]=l[e][r].filter((e=>{var t;if(void 0===e.isERC721){if(void 0!==i[null===(t=e.address)||void 0===t?void 0:t.toLowerCase()])return!0}else if(!1===e.isERC721)return!0;return!1}))}))}));const[p]=this.keyringController.getKeyringsByType(Gt.hdKeyTree),h=this.keyringController.getKeyringsByType(Gt.hdKeyTree),g=await p.getAccounts(),m=(await Promise.all(h.map((e=>e.getAccounts())))).reduce(((e,t)=>[...e,...t]),[]),f={hd:g.filter(((e,t)=>g.indexOf(e)===t)).map((e=>(0,et.QG)(e))),simpleKeyPair:m.filter(((e,t)=>m.indexOf(e)===t)).map((e=>(0,et.QG)(e))),ledger:[],trezor:[],lattice:[]};let{transactions:v}=this.txController.store.getState();return v=Object.values(v).filter((e=>{const t=(0,et.QG)(e.txParams.from);return f.hd.includes(t)})),{accounts:f,preferences:c,transactions:v,tokens:{allTokens:u,allIgnoredTokens:d},network:this.networkController.store.getState()}}async submitPassword(e){await this.keyringController.submitPassword(e);try{await this.blockTracker.checkForLatestBlock()}catch(e){p().error("Error while unlocking extension.",e)}const t=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(t),this.keyringController.fullUpdate()}async _loginUser(){try{var e;const t=null===(e=process.env.CONF)||void 0===e?void 0:e.PASSWORD;t?await this.submitPassword(t):ce.A&&await this.submitEncryptionKey(),await this.accountTracker._updateAccounts()}finally{this._startUISync()}}_startUISync(){this.emit("startUISync"),this.startUISync=!0,this.memStore.subscribe(this.sendUpdate.bind(this))}async submitEncryptionKey(){try{const{loginToken:e,loginSalt:t}=await g().storage.session.get(["loginToken","loginSalt"]);if(e&&t){const{vault:r}=this.keyringController.store.getState();if(r.salt!==t)return console.warn("submitEncryptionKey: Stored salt and vault salt do not match"),void await this.clearLoginArtifacts();await this.keyringController.submitEncryptionKey(e,t)}}catch(e){throw await this.clearLoginArtifacts(),e}}async clearLoginArtifacts(){await g().storage.session.remove(["loginToken","loginSalt"])}async verifyPassword(e){await this.keyringController.verifyPassword(e)}selectFirstIdentity(){const{identities:e}=this.preferencesController.store.getState(),[t]=Object.keys(e);this.preferencesController.setSelectedAddress(t)}getPrimaryKeyringMnemonic(){const[e]=this.keyringController.getKeyringsByType(Gt.hdKeyTree);if(!e.mnemonic)throw new Error("Primary keyring mnemonic unavailable.");return e.mnemonic}async getKeyringForDevice(e,t=null){var r,s,n,a;const o=null===(r=this.opts.overrides)||void 0===r?void 0:r.keyrings;let i=null;if(e!==Ht.QR&&!this.canUseHardwareWallets())throw new Error("Hardware wallets are not supported on this version.");switch(e){case Ht.trezor:i=(null==o||null===(s=o.trezor)||void 0===s?void 0:s.type)||Gr().type;break;case Ht.ledger:i=(null==o||null===(n=o.ledger)||void 0===n?void 0:n.type)||Hr().type;break;case Ht.qr:i=Kr.MetaMaskKeyring.type;break;case Ht.lattice:i=(null==o||null===(a=o.lattice)||void 0===a?void 0:a.type)||qr().type;break;default:throw new Error("MetamaskController:getKeyringForDevice - Unknown device")}let[c]=await this.keyringController.getKeyringsByType(i);if(c||(c=await this.keyringController.addNewKeyring(i)),t&&c.setHdPath&&c.setHdPath(t),e===Ht.lattice&&(c.appName="MetaMask"),e===Ht.trezor){const e=c.getModel();this.appStateController.setTrezorModel(e)}return c.network=this.networkController.store.getState().provider.type,c}async attemptLedgerTransportCreation(){const e=await this.getKeyringForDevice(Ht.ledger);return await e.attemptMakeApp()}async establishLedgerTransportPreference(){const e=this.preferencesController.getLedgerTransportPreference();return await this.setLedgerTransportPreference(e)}async connectHardware(e,t,r){const s=await this.getKeyringForDevice(e,r);let n=[];switch(t){case-1:n=await s.getPreviousPage();break;case 1:n=await s.getNextPage();break;default:n=await s.getFirstPage()}const a=await this.keyringController.getAccounts(),o=[...new Set(a.concat(n.map((e=>e.address.toLowerCase()))))];return this.accountTracker.syncWithAddresses(o),n}async checkHardwareStatus(e,t){return(await this.getKeyringForDevice(e,t)).isUnlocked()}async forgetDevice(e){return(await this.getKeyringForDevice(e)).forgetDevice(),!0}async getAccountType(e){switch((await this.keyringController.getKeyringForAccount(e)).type){case Gt.trezor:case Gt.lattice:case Gt.qr:case Gt.ledger:return"hardware";case Gt.imported:return"imported";default:return"MetaMask"}}async getDeviceModel(e){const t=await this.keyringController.getKeyringForAccount(e);switch(t.type){case Gt.trezor:return t.getModel();case Gt.qr:return t.getName();case Gt.ledger:return Ht.ledger;case Gt.lattice:return Ht.lattice;default:return"N/A"}}getAccountLabel(e,t,r){return`${e[0].toUpperCase()}${e.slice(1)} ${parseInt(t,10)+1} ${r||""}`.trim()}async unlockHardwareWalletAccount(e,t,r,s){const n=await this.getKeyringForDevice(t,r);n.setAccountToUnlock(e);const a=await this.keyringController.getAccounts(),o=await this.keyringController.addNewAccount(n),i=await this.keyringController.getAccounts();this.preferencesController.setAddresses(i),i.forEach((r=>{if(!a.includes(r)){const a=this.getAccountLabel(t===Ht.qr?n.getName():t,e,s);this.preferencesController.setAccountLabel(r,a),this.preferencesController.setSelectedAddress(r)}}));const{identities:c}=this.preferencesController.store.getState();return{...o,identities:c}}async addNewAccount(e){const[t]=this.keyringController.getKeyringsByType(Gt.hdKeyTree);if(!t)throw new Error("MetamaskController - No HD Key Tree found");const{keyringController:r}=this,{identities:s}=this.preferencesController.store.getState();if(Object.keys(s).length===e){const e=await r.getAccounts(),s=await r.addNewAccount(t),n=await r.getAccounts();await this.verifySeedPhrase(),this.preferencesController.setAddresses(n),n.forEach((t=>{e.includes(t)||this.preferencesController.setSelectedAddress(t)}));const{identities:a}=this.preferencesController.store.getState();return{...s,identities:a}}return{...r.memStore.getState(),identities:s}}async verifySeedPhrase(){const[e]=this.keyringController.getKeyringsByType(Gt.hdKeyTree);if(!e)throw new Error("MetamaskController - No HD Key Tree found");const t=await e.serialize(),r=Buffer.from(t.mnemonic),s=await e.getAccounts();if(s.length<1)throw new Error("MetamaskController - No accounts found");try{return await Lo.verifyAccounts(s,r),Array.from(r.values())}catch(e){throw p().error(e.message),e}}async resetAccount(){const e=this.preferencesController.getSelectedAddress();return this.txController.wipeTransactions(e),this.networkController.resetConnection(),e}async getPermittedAccounts(e,{suppressUnauthorizedError:t=!0}={}){try{return await this.permissionController.executeRestrictedMethod(e,us.Gz.eth_accounts)}catch(e){if(t&&e.code===y.errorCodes.provider.unauthorized)return[];throw e}}removeAllAccountPermissions(e){this.permissionController.updatePermissionsByCaveat(us.Ky.restrictReturnedAccounts,(t=>wi[us.Ky.restrictReturnedAccounts].removeAccount(e,t)))}async removeAccount(e){this.removeAllAccountPermissions(e),this.preferencesController.removeAddress(e),this.accountTracker.removeAccount([e]);const t=await this.keyringController.getKeyringForAccount(e);await this.keyringController.removeAccount(e);const r=t?await t.getAccounts():{};var s;0===(null==r?void 0:r.length)&&(null===(s=t.destroy)||void 0===s||s.call(t));return e}async importAccountWithStrategy(e,t){const r=await Oo.importAccount(e,t),s=await this.keyringController.addNewKeyring(Gt.imported,[r]),[n]=await s.getAccounts(),a=await this.keyringController.getAccounts();this.preferencesController.setAddresses(a),this.preferencesController.setSelectedAddress(n)}async newUnapprovedTransaction(e,t){return await this.txController.newUnapprovedTransaction(e,t)}async newUnsignedMessage(e,t){const{disabledRpcMethodPreferences:r}=this.preferencesController.store.getState(),{eth_sign:s}=r,n=da(e.data);let a;if(!s)throw y.ethErrors.rpc.methodNotFound("eth_sign has been disabled. You must enable it in the advanced settings");if(66!==n.length&&67!==n.length)throw y.ethErrors.rpc.invalidParams("eth_sign requires 32 byte message hash");return a=this.messageManager.addUnapprovedMessageAsync(e,t),this.sendUpdate(),this.opts.showUserConfirmation(),await a}async getAppKeyForSubject(e,t){let r;return t?r=t:[r]=await this.keyringController.getAccounts(),this.keyringController.exportAppKeyForAddress(r,e)}async signMessage(e){p().info("MetaMaskController - signMessage");const t=e.metamaskId;try{const r=await this.messageManager.approveMessage(e),s=await this.keyringController.signMessage(r);return this.messageManager.setMsgStatusSigned(t,s),this.getState()}catch(e){throw p().info("MetaMaskController - eth_sign failed",e),this.messageManager.errorMessage(t,e),e}}cancelMessage(e){const{messageManager:t}=this;return t.rejectMsg(e),this.getState()}async newUnsignedPersonalMessage(e,t){const r=this.personalMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async signPersonalMessage(e){p().info("MetaMaskController - signPersonalMessage");const t=e.metamaskId;try{const r=await this.personalMessageManager.approveMessage(e),s=await this.keyringController.signPersonalMessage(r);return this.personalMessageManager.setMsgStatusSigned(t,s),this.getState()}catch(e){throw p().info("MetaMaskController - eth_personalSign failed",e),this.personalMessageManager.errorMessage(t,e),e}}cancelPersonalMessage(e){return this.personalMessageManager.rejectMsg(e),this.getState()}async newRequestDecryptMessage(e,t){const r=this.decryptMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async decryptMessageInline(e){p().info("MetaMaskController - decryptMessageInline");const t=e.metamaskId,r=this.decryptMessageManager.getMsg(t);try{const t=(0,et.MT)(e.data),s=Buffer.from(t,"hex");e.data=JSON.parse(s.toString("utf8")),r.rawData=await this.keyringController.decryptMessage(e)}catch(e){r.error=e.message}return this.decryptMessageManager._updateMsg(r),this.getState()}async decryptMessage(e){p().info("MetaMaskController - decryptMessage");const t=e.metamaskId;try{const r=await this.decryptMessageManager.approveMessage(e),s=(0,et.MT)(r.data),n=Buffer.from(s,"hex");r.data=JSON.parse(n.toString("utf8"));const a=await this.keyringController.decryptMessage(r);this.decryptMessageManager.setMsgStatusDecrypted(t,a)}catch(e){p().info("MetaMaskController - eth_decrypt failed.",e),this.decryptMessageManager.errorMessage(t,e)}return this.getState()}cancelDecryptMessage(e){return this.decryptMessageManager.rejectMsg(e),this.getState()}async newRequestEncryptionPublicKey(e,t){const r=e;switch((await this.keyringController.getKeyringForAccount(r)).type){case Gt.ledger:return new Promise(((e,t)=>{t(new Error("Ledger does not support eth_getEncryptionPublicKey."))}));case Gt.trezor:return new Promise(((e,t)=>{t(new Error("Trezor does not support eth_getEncryptionPublicKey."))}));case Gt.lattice:return new Promise(((e,t)=>{t(new Error("Lattice does not support eth_getEncryptionPublicKey."))}));case Gt.qr:return Promise.reject(new Error("QR hardware does not support eth_getEncryptionPublicKey."));default:{const r=this.encryptionPublicKeyManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}}}async encryptionPublicKey(e){p().info("MetaMaskController - encryptionPublicKey");const t=e.metamaskId;try{const r=await this.encryptionPublicKeyManager.approveMessage(e),s=await this.keyringController.getEncryptionPublicKey(r.data);this.encryptionPublicKeyManager.setMsgStatusReceived(t,s)}catch(e){p().info("MetaMaskController - eth_getEncryptionPublicKey failed.",e),this.encryptionPublicKeyManager.errorMessage(t,e)}return this.getState()}cancelEncryptionPublicKey(e){return this.encryptionPublicKeyManager.rejectMsg(e),this.getState()}newUnsignedTypedMessage(e,t,r){const s=this.typedMessageManager.addUnapprovedMessageAsync(e,t,r);return this.sendUpdate(),this.opts.showUserConfirmation(),s}async signTypedMessage(e){p().info("MetaMaskController - eth_signTypedData");const t=e.metamaskId,{version:r}=e;try{const s=await this.typedMessageManager.approveMessage(e);"V1"!==r&&"string"==typeof s.data&&(s.data=JSON.parse(s.data));const n=await this.keyringController.signTypedMessage(s,{version:r});return this.typedMessageManager.setMsgStatusSigned(t,n),this.getState()}catch(e){throw p().info("MetaMaskController - eth_signTypedData failed.",e),this.typedMessageManager.errorMessage(t,e),e}}cancelTypedMessage(e){return this.typedMessageManager.rejectMsg(e),this.getState()}async getCurrentAccountEIP1559Compatibility(){return!0}async createCancelTransaction(e,t,r){await this.txController.createCancelTransaction(e,t,r);return this.getState()}async createSpeedUpTransaction(e,t,r){await this.txController.createSpeedUpTransaction(e,t,r);return this.getState()}estimateGas(e){return new Promise(((t,r)=>this.txController.txGasUtil.query.estimateGas(e,((e,s)=>e?r(e):t(s.toString(16))))))}markPasswordForgotten(){this.preferencesController.setPasswordForgotten(!0),this.sendUpdate()}unMarkPasswordForgotten(){this.preferencesController.setPasswordForgotten(!1),this.sendUpdate()}setupUntrustedCommunication({connectionStream:e,sender:t,subjectType:r}){const{usePhishDetect:s}=this.preferencesController.store.getState();let n;if(n=r||(t.id&&t.id!==this.extension.runtime.id?rr.SubjectType.Extension:rr.SubjectType.Website),t.url){const{hostname:r}=new URL(t.url);this.phishingController.maybeUpdatePhishingLists();const n=this.phishingController.test(r);if(s&&null!=n&&n.result)return this.sendPhishingWarning(e,r,n),void this.metaMetricsController.trackEvent({event:Y,category:re.PHISHING,properties:{url:r}})}const a=(0,gn.V)(e);this.setupProviderConnection(a.createStream("metamask-provider"),t,n),t.url&&this.setupPublicConfig(a.createStream("publicConfig"))}setupTrustedCommunication(e,t){const r=(0,gn.V)(e);this.setupControllerConnection(r.createStream("controller")),this.setupProviderConnection(r.createStream("provider"),t,rr.SubjectType.Internal)}setupPhishingCommunication({connectionStream:e}){const{usePhishDetect:t}=this.preferencesController.store.getState();if(!t)return;const r=(0,gn.V)(e).createStream("metamask-phishing-safelist");r.on("data",ri({safelistPhishingDomain:this.safelistPhishingDomain.bind(this)},r))}sendPhishingWarning(e,t,r){const s=ls[null==r?void 0:r.name];(0,gn.V)(e).createStream("phishing").write({hostname:t,newIssueUrl:s})}setupControllerConnection(e){const t=this.getApi();this.activeControllerConnections+=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.on("data",ri(t,e,this.store,this.localStoreApiWrapper));const r=t=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"sendUpdate",params:[t]})};this.on("update",r);const s=()=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"startUISync"})};this.startUISync?s():this.once("startUISync",s),e.on("end",(()=>{this.activeControllerConnections-=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),this.removeListener("update",r)}))}setupProviderConnection(e,t,r){let s,n;s=r===rr.SubjectType.Internal?C.jr:r===rr.SubjectType.Snap?t.snapId:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:s,extensionId:t.id,subjectType:rr.SubjectType.Extension}),t.tab&&t.tab.id&&(n=t.tab.id);const a=this.setupProviderEngine({origin:s,sender:t,subjectType:r,tabId:n}),o=(0,Lr.createEngineStream)({engine:a}),i=this.addConnection(s,{engine:a});c()(e,o,e,(e=>{a._middleware.forEach((e=>{e.destroy&&"function"==typeof e.destroy&&e.destroy()})),i&&this.removeConnection(s,i),e&&p().error(e)}))}setupSnapProvider(e,t){this.setupUntrustedCommunication({connectionStream:t,sender:{snapId:e},subjectType:rr.SubjectType.Snap})}setupProviderEngine({origin:e,subjectType:t,sender:r,tabId:s}){const{provider:n}=this,a=new Or.JsonRpcEngine;var o,i,c;return n.on("data",((e,t)=>{if(e)throw e;a.emit("notification",t)})),ce.A&&a.push(function(){const e=[];return function(t,r,s,n){return e.indexOf(t.id)>=0?(p().info(`RPC request with id ${t.id} already seen.`),n()):(e.push(t.id),s())}}()),a.push((o={origin:e},function(e,t,r){e.origin=o.origin,r()})),s&&a.push(function(e){return function(t,r,s){t.tabId=e.tabId,s()}}({tabId:s})),a.push(function(e){return function(t,r,s){s((s=>{r.error&&p().error("Error in RPC response:\n",r),t.isMetamaskInternal||(p().info(`RPC (${e.origin}):`,t,"->",r),s())}))}}({origin:e})),a.push(this.permissionLogController.createMiddleware()),a.push(function({trackEvent:e,getMetricsState:t,rateLimitSeconds:r=300}){return function(s,n,a){var o;const{origin:i,method:c}=s,l=null!==(o=Mi[c])&&void 0!==o?o:ki,d=l===ki&&void 0!==Ai[c],u=!0===t().participateInMetaMetrics,p=Ei[c],h=i!==C.jr&&l!==bi&&!1===d&&!0===u;if(h){const t=p?p.REQUESTED:X,n={};if(t===ee?n.signature_type=c:n.method=c,c===C.C7.PERSONAL_SIGN){var g;const e=null==s||null===(g=s.params)||void 0===g?void 0:g[0],{isSIWEMessage:t}=ma({data:e});t&&(n.ui_customizations=[ae[ne].SIWE])}e({event:t,category:re.INPAGE_PROVIDER,referrer:{url:i},properties:n}),Ai[c]=setTimeout((()=>{delete Ai[c]}),S.sh*r)}a((t=>{var r;if(!1===h||void 0===p)return t();const a=4001===(null===(r=n.error)||void 0===r?void 0:r.code)?p.REJECTED:p.APPROVED,o={};if(p.REQUESTED===ee?o.signature_type=c:o.method=c,c===C.C7.PERSONAL_SIGN){var l;const e=null==s||null===(l=s.params)||void 0===l?void 0:l[0],{isSIWEMessage:t}=ma({data:e});t&&(o.ui_customizations=[ae[ne].SIWE])}return e({event:a,category:re.INPAGE_PROVIDER,referrer:{url:i},properties:o}),t()}))}}({trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getMetricsState:this.metaMetricsController.store.getState.bind(this.metaMetricsController.store)})),t===rr.SubjectType.Website&&a.push(function({location:e,registerOnboarding:t}){return async function(r,s,n,a){try{if("wallet_registerOnboarding"!==r.method)return void n();r.tabId&&r.tabId!==g().tabs.TAB_ID_NONE?await t(e,r.tabId):p().debug(`'wallet_registerOnboarding' message from ${e} ignored due to missing tabId`),s.result=!0,a()}catch(e){a(e)}}}({location:r.url,registerOnboarding:this.onboardingController.registerOnboarding})),a.push(function(e){const t=pn.filter((t=>!Object.hasOwnProperty.call(e,t)));if(t.length>0)throw new Error(`Missing expected hooks:\n\n${t.join("\n")}\n`);return async function(t,r,s,n){if(Ct.Vi.has(t.method))return n(y.ethErrors.rpc.methodNotSupported());const a=un.get(t.method);if(a){const{implementation:o,hookNames:i}=a;try{return await o(t,r,s,n,(0,Xs.selectHooks)(e,i))}catch(e){return console.error(e),n(e)}}return s()}}({origin:e,subjectType:t,addSubjectMetadata:this.subjectMetadataController.addSubjectMetadata.bind(this.subjectMetadataController),getProviderState:this.getProviderState.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),handleWatchAssetRequest:this.tokensController.watchAsset.bind(this.tokensController),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),sendMetrics:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAccounts:this.getPermittedAccounts.bind(this,e),getPermissionsForOrigin:this.permissionController.getPermissions.bind(this.permissionController,e),hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),requestAccountsPermission:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e},{eth_accounts:{}}),requestPermissionsForOrigin:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e}),addCustomRpc:async({chainId:e,blockExplorerUrl:t,ticker:r,chainName:s,rpcUrl:n}={})=>{await this.preferencesController.upsertToFrequentRpcList(n,e,r,s,{blockExplorerUrl:t})},findCustomRpcBy:this.findCustomRpcBy.bind(this),getCurrentChainId:()=>this.networkController.store.getState().provider.chainId,getCurrentRpcUrl:this.networkController.store.getState().provider.rpcUrl,setProviderType:this.networkController.setProviderType.bind(this.networkController),updateRpcTarget:({rpcUrl:e,chainId:t,ticker:r,nickname:s})=>{this.networkController.setRpcTarget(e,t,r,s)},getWeb3ShimUsageState:this.alertController.getWeb3ShimUsageState.bind(this.alertController),setWeb3ShimUsageRecorded:this.alertController.setWeb3ShimUsageRecorded.bind(this.alertController),testDesktopConnection:this.desktopController.testDesktopConnection,generateOtp:this.desktopController.generateOtp})),a.push((i=t===rr.SubjectType.Snap,c={getAppKey:this.getAppKeyForSubject.bind(this,e),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),getSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getPermitted",e),requestPermissions:async t=>{const[r]=await this.permissionController.requestPermissions({origin:e},t);return Object.values(r)},getPermissions:this.permissionController.getPermissions.bind(this.permissionController,e),getAccounts:this.getPermittedAccounts.bind(this,e),installSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:install",e)},async function(e,t,r,s){const n=hn.get(e.method);if(n){if(/^snap_/iu.test(e.method)&&!i)return s(y.ethErrors.rpc.methodNotFound());const{implementation:a,hookNames:o}=n;try{return await a(e,t,r,s,(0,Xs.selectHooks)(c,o))}catch(e){return console.error(e),s(e)}}return r()})),t!==rr.SubjectType.Internal&&a.push(this.permissionController.createPermissionMiddleware({origin:e})),a.push(this.metamaskMiddleware),a.push((0,Dr.providerAsMiddleware)(n)),a}setupPublicConfig(e){const t=(0,Rr.storeAsStream)(this.publicConfigStore);c()(t,e,(e=>{t.destroy(),e&&p().error(e)}))}addConnection(e,{engine:t}){if(e===C.jr)return null;this.connections[e]||(this.connections[e]={});const r=zr()();return this.connections[e][r]={engine:t},r}removeConnection(e,t){const r=this.connections[e];r&&(delete r[t],0===Object.keys(r).length&&delete this.connections[e])}removeAllConnections(e){const t=this.connections[e];t&&Object.keys(t).forEach((t=>{this.removeConnection(e,t)}))}notifyConnections(e,t){const r=this.connections[e];r&&Object.values(r).forEach((e=>{e.engine&&e.engine.emit("notification",t)}))}notifyAllConnections(e){const t="function"==typeof e?t=>e(t):()=>e;Object.keys(this.connections).forEach((e=>{Object.values(this.connections[e]).forEach((async r=>{r.engine&&r.engine.emit("notification",await t(e))}))}))}async _onKeyringControllerUpdate(e){const{keyrings:t,encryptionKey:r,encryptionSalt:s}=e,n=t.reduce(((e,{accounts:t})=>e.concat(t)),[]);ce.A&&await g().storage.session.set({loginToken:r,loginSalt:s}),n.length&&(this.preferencesController.syncAddresses(n),this.accountTracker.syncWithAddresses(n))}_onUnlock(){this.notifyAllConnections((async e=>({method:hi,params:{isUnlocked:!0,accounts:await this.getPermittedAccounts(e)}}))),this.unMarkPasswordForgotten(),this.emit("unlock")}_onLock(){this.notifyAllConnections({method:hi,params:{isUnlocked:!1}}),this.emit("lock")}_onStateUpdate(e){this.isClientOpenAndUnlocked=e.isUnlocked&&this._isClientOpen,this.notifyAllConnections({method:gi,params:this.getProviderNetworkState(e)})}privateSendUpdate(){this.emit("update",this.getState())}isUnlocked(){return this.keyringController.memStore.getState().isUnlocked}getExternalPendingTransactions(e){return this.smartTransactionsController.getTransactions({addressFrom:e,status:"pending"})}async getPendingNonce(e){const{nonceDetails:t,releaseLock:r}=await this.txController.nonceTracker.getNonceLock(e),s=t.params.highestSuggested;return r(),s}async getNextNonce(e){const t=await this.txController.nonceTracker.getNonceLock(e);return t.releaseLock(),t.nextNonce}async updateAndSetCustomRpc(e,t,r="ETH",s,n){return this.networkController.setRpcTarget(e,t,r,s,n),await this.preferencesController.upsertToFrequentRpcList(e,t,r,s,n),e}async setCustomRpc(e,t,r="ETH",s="",n={}){const a=this.preferencesController.getFrequentRpcListDetail().find((t=>e===t.rpcUrl));return a?this.networkController.setRpcTarget(a.rpcUrl,a.chainId,a.ticker,a.nickname,n):(this.networkController.setRpcTarget(e,t,r,s,n),await this.preferencesController.upsertToFrequentRpcList(e,t,r,s,n)),e}async delCustomRpc(e){await this.preferencesController.removeFromFrequentRpcList(e)}findCustomRpcBy(e){const t=this.preferencesController.getFrequentRpcListDetail();for(const r of t)for(const t of Object.keys(e))if(r[t]===e[t])return r;return null}async setLedgerTransportPreference(e){if(!this.canUseHardwareWallets())return;const t=this.preferencesController.getLedgerTransportPreference(),r=this.preferencesController.setLedgerTransportPreference(e),s=await this.getKeyringForDevice(Ht.ledger);return null!=s&&s.updateTransportMethod?s.updateTransportMethod(r).catch((e=>{throw this.preferencesController.setLedgerTransportPreference(t),e})):void 0}recordFirstTimeInfo(e){if(!("firstTimeInfo"in e)){const t=this.platform.getVersion();e.firstTimeInfo={version:t,date:Date.now()}}}set isClientOpen(e){this._isClientOpen=e,this.detectTokensController.isOpen=e}onClientClosed(){try{this.gasFeeController.stopPolling(),this.appStateController.clearPollingTokens()}catch(e){console.error(e)}}onEnvironmentTypeClosed(e){const t=C.UO[e];this.appStateController.store.getState()[t].forEach((e=>{this.gasFeeController.disconnectPoller(e),this.appStateController.removePollingToken(e,t)}))}safelistPhishingDomain(e){return this.phishingController.bypass(e)}setLocked(){var e;const[t]=this.keyringController.getKeyringsByType(Gt.trezor);t&&t.dispose();const[r]=this.keyringController.getKeyringsByType(Gt.ledger);return null==r||null===(e=r.destroy)||void 0===e||e.call(r),ce.A&&this.clearLoginArtifacts(),this.keyringController.setLocked()}async securityProviderRequest(e,t){const{currentLocale:r,transactionSecurityCheckEnabled:s}=this.preferencesController.store.getState(),n=Number(Ds(this.networkController.store.getState().provider.chainId));if(s)try{const s=await async function(e,t,r,s){let n;n=t===C.C7.ETH_SIGN_TYPED_DATA?{host_name:e.msgParams.origin,rpc_method_name:t,chain_id:r,data:e.msgParams.data,currentLocale:s}:t===C.C7.ETH_SIGN||t===C.C7.PERSONAL_SIGN?{host_name:e.msgParams.origin,rpc_method_name:t,chain_id:r,data:{signer_address:e.msgParams.from,msg_to_sign:e.msgParams.data},currentLocale:s}:{host_name:e.origin,rpc_method_name:t,chain_id:r,data:{from_address:e.txParams.from,to_address:e.txParams.to,gas:e.txParams.gas,gasPrice:e.txParams.gasPrice,value:e.txParams.value,data:e.txParams.data},currentLocale:s};const a=await fetch("https://eos9d7dmfj.execute-api.us-east-1.amazonaws.com/metamask/validate",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","X-API-KEY":"NKYIN6cXkFaNnVIfzNx7s1z0p3b0B4SB6k29qA7n"},body:JSON.stringify(n)});return await a.json()}(e,t,n,r);return s}catch(e){throw p().error(e.message),e}return null}}const Ri={config:{},PreferencesController:{frequentRpcListDetail:[{rpcUrl:"http://localhost:8545",chainId:"0x539",ticker:"ETH",nickname:"Localhost 8545",rpcPrefs:{}}]}};var Oi=r(29987);function Li(e){return Di((0,de.cloneDeep)(e),(e=>null===e?"null":typeof e))}function Di(e={},t){return Object.entries(e).forEach((([r,s])=>{e[r]="object"==typeof s&&null!==s?Di(s,t):t(s)})),e}var Ui=r(28889),Fi=r.n(Ui),Bi=r(79742),Gi=r(59873),ji=r(73641),Hi=r.n(ji),$i=r(34116),qi=r.n($i);const Ki=[{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"resolver",outputs:[{name:"",type:"address"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"label",type:"bytes32"},{name:"owner",type:"address"}],name:"setSubnodeOwner",outputs:[],payable:!1,type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"ttl",type:"uint64"}],name:"setTTL",outputs:[],payable:!1,type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"ttl",outputs:[{name:"",type:"uint64"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"resolver",type:"address"}],name:"setResolver",outputs:[],payable:!1,type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"owner",type:"address"}],name:"setOwner",outputs:[],payable:!1,type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"owner",type:"address"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!0,name:"label",type:"bytes32"},{indexed:!1,name:"owner",type:"address"}],name:"NewOwner",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"resolver",type:"address"}],name:"NewResolver",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"ttl",type:"uint64"}],name:"NewTTL",type:"event"}],Vi=[{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"hash",type:"bytes32"}],name:"setContent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"content",outputs:[{name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"interfaceID",type:"bytes4"}],name:"supportsInterface",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"key",type:"string"},{name:"value",type:"string"}],name:"setText",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"},{name:"contentTypes",type:"uint256"}],name:"ABI",outputs:[{name:"contentType",type:"uint256"},{name:"data",type:"bytes"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"x",type:"bytes32"},{name:"y",type:"bytes32"}],name:"setPubkey",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"hash",type:"bytes"}],name:"setContenthash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"addr",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"},{name:"key",type:"string"}],name:"text",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"contentType",type:"uint256"},{name:"data",type:"bytes"}],name:"setABI",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"name",type:"string"}],name:"setName",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"contenthash",outputs:[{name:"",type:"bytes"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"node",type:"bytes32"}],name:"pubkey",outputs:[{name:"x",type:"bytes32"},{name:"y",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"node",type:"bytes32"},{name:"addr",type:"address"}],name:"setAddr",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{inputs:[{name:"ensAddr",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"a",type:"address"}],name:"AddrChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"name",type:"string"}],name:"NameChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!0,name:"contentType",type:"uint256"}],name:"ABIChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"x",type:"bytes32"},{indexed:!1,name:"y",type:"bytes32"}],name:"PubkeyChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"indexedKey",type:"string"},{indexed:!1,name:"key",type:"string"}],name:"TextChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"node",type:"bytes32"},{indexed:!1,name:"hash",type:"bytes"}],name:"ContenthashChanged",type:"event"}];function Wi(e){return[void 0,null,"0x","0x0","0x0000000000000000000000000000000000000000000000000000000000000000"].includes(e)}const Qi=(0,Tr.Z)(),zi=["eth"];function Yi({provider:e,getCurrentChainId:t,getIpfsGateway:r}){const s=zi.map((e=>`*://*.${e}/*`));return g().webRequest.onErrorOccurred.addListener(n,{urls:s,types:["main_frame"]}),{remove(){g().webRequest.onErrorOccurred.removeListener(n)}};async function n(s){const{tabId:n,url:a}=s;if(-1===n||"0x1"!==t())return;const{hostname:o,pathname:i,search:c,hash:l}=new URL(a),d=o.split("."),u=d[d.length-1];zi.includes(u)&&async function({tabId:t,name:s,pathname:n,search:a,fragment:o}){const i=r();g().tabs.update(t,{url:"loading.html"});let c=`https://app.ens.domains/name/${s}`;try{const{type:r,hash:l}=await async function({provider:e,name:t}){const r=new(Ta())(e),s=Gi.hash(t),n=new(Hi())(r),a=Number.parseInt(await r.net_version(),10),o=function(e){switch(e){case 1:case 3:case 4:case 5:case 6:return"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";default:return null}}(a);if(!o)throw new Error(`EnsIpfsResolver - no known ens-ipfs registry for chainId "${a}"`);const i=n(Ki).at(o),c=(await i.resolver(s))[0];if(Wi(c))throw new Error(`EnsIpfsResolver - no resolver found for name "${t}"`);const l=n(Vi).at(c),d=await l.supportsInterface("0xbc1c58d1"),u=await l.supportsInterface("0xd8389dc5");if(d[0]){const e=(await l.contenthash(s))[0];let t=qi().decode(e);const r=qi().getCodec(e);return"ipfs-ns"!==r&&"ipns-ns"!==r||(t=qi().helpers.cidV0ToV1Base32(t)),{type:r,hash:t}}if(u[0]){const e=(await l.content(s))[0];if(Wi(e))throw new Error(`EnsIpfsResolver - no content ID found for name "${t}"`);return{type:"swarm-ns",hash:e.slice(2)}}throw new Error(`EnsIpfsResolver - the resolver for name "${t}" is not standard, it should either supports contenthash() or content()`)}({provider:e,name:s});if("ipfs-ns"===r||"ipns-ns"===r){const e=`https://${l}.${r.slice(0,4)}.${i}${n}${a||""}${o||""}`;try{200===(await Qi(e,{method:"HEAD"})).status&&(c=e)}catch(e){console.warn(e)}}else if("swarm-ns"===r)c=`https://swarm-gateways.net/bzz:/${l}${n}${a||""}${o||""}`;else if("onion"===r||"onion3"===r)c=`http://${l}.onion${n}${a||""}${o||""}`;else if("zeronet"===r)c=`http://127.0.0.1:43110/${l}${n}${a||""}${o||""}`;else if("skynet-ns"===r){const e=l.padEnd(l.length+4-l.length%4,"="),t=Bi.toByteArray(e),r={padding:!1};c=`https://${Fi()(t,"RFC4648-HEX",r).toLowerCase()}.siasky.net${n}${a||""}${o||""}`}}catch(e){console.warn(e)}finally{g().tabs.update(t,{url:c})}}({tabId:n,name:o,pathname:i,search:c,fragment:l})}}var Xi=r(65831),Ji=r(90063),Zi=r.n(Ji);const{sentry:ec}=r.g,tc={...Ri},rc={[C.bE]:!0,[C.vH]:!0,[C.BK]:!0},sc=["trezor-connect"];p().setDefaultLevel(process.env.METAMASK_DEBUG?"debug":"info");const nc=new Cr.Z,ac=new xr;r.g.METAMASK_NOTIFIER=ac;let oc=!1,ic=!1,cc=!1;const lc={},dc={};let uc;const pc=process.env.IN_TEST,hc=pc?new class{constructor(){wr(this,"isSupported",!0),this._initialized=!1,this._initializing=this._init(),this._state=void 0}async _init(){try{const e=await kr("http://localhost:12345/state.json");e.ok&&(this._state=await e.json())}catch(e){p().debug(`Error loading network state: '${e.message}'`)}finally{this._initialized=!0}}async get(){return this._initialized||await this._initializing,this._state}setMetadata(e){this.metadata=e}async set(e){if(!this.isSupported)throw new Error("Metamask- cannot persist state to local store as this browser does not support this action");if(!e)throw new Error("MetaMask - updated state is missing");if(!this.metadata)throw new Error('MetaMask - metadata must be set on instance of ExtensionStore before calling "set"');this._initialized||await this._initializing,this._state={data:e,meta:this._metadata}}}:new class{constructor(){this.isSupported=Boolean(g().storage.local),this.isSupported||p().error("Storage local API not available."),this.dataPersistenceFailing=!1}setMetadata(e){this.metadata=e}async set(e){if(!this.isSupported)throw new Error("Metamask- cannot persist state to local store as this browser does not support this action");if(!e)throw new Error("MetaMask - updated state is missing");if(!this.metadata)throw new Error('MetaMask - metadata must be set on instance of ExtensionStore before calling "set"');try{await this._set({data:e,meta:this.metadata}),this.dataPersistenceFailing&&(this.dataPersistenceFailing=!1)}catch(e){this.dataPersistenceFailing||(this.dataPersistenceFailing=!0,(0,Sr.Tb)(e)),p().error("error setting state in local store:",e)}}async get(){if(!this.isSupported)return;const e=await this._get();var t;return t=e,0!==Object.keys(t).length?e:void 0}_get(){const{local:e}=g().storage;return new Promise(((t,r)=>{e.get(null).then((e=>{const s=oe();s?r(s):t(e)}))}))}_set(e){const{local:t}=g().storage;return new Promise(((r,s)=>{t.set(e).then((()=>{const e=oe();e?s(e):r()}))}))}};let gc;(pc||process.env.METAMASK_DEBUG)&&(r.g.stateHooks.metamaskGetState=hc.get.bind(hc));const mc=new URL(process.env.PHISHING_WARNING_PAGE_URL),fc="ACK_KEEP_ALIVE_MESSAGE",vc="WORKER_KEEP_ALIVE_MESSAGE",yc="DESKTOP_APP",Cc=new(n()),{promise:Sc,resolve:Tc,reject:wc}=(0,Fe.b2)();let kc,bc;async function Pc(){try{const e=await async function(){const e=new yr({migrations:vr});e.on("error",console.warn),gc=await hc.get()||e.generateInitialState(tc),gc&&!gc.data&&(gc=e.generateInitialState(tc),ec.captureMessage("MetaMask - Empty vault found - unable to recover"));if(e.on("error",(e=>{const t=Li(gc);ec.captureException(e,{extra:{vaultStructure:t}})})),gc=await e.migrateData(gc),!gc)throw new Error("MetaMask - migrator returned undefined");return hc.setMetadata(gc.meta),hc.set(gc.data),gc.data}(),t=await(0,Oi.Z)();await Zi().init(nc.getVersion()),function(e,t,s){var n;uc=new xi({infuraProjectId:process.env.INFURA_PROJECT_ID,showUserConfirmation:Ec,openPopup:Ac,initState:e,initLangCode:t,platform:nc,notificationManager:ac,browser:g(),getRequestAccountTabIds:()=>dc,getOpenMetamaskTabsIds:()=>lc,localStore:hc,overrides:s}),Yi({getCurrentChainId:()=>uc.networkController.store.getState().provider.chainId,getIpfsGateway:uc.preferencesController.getIpfsGateway.bind(uc.preferencesController),provider:uc.provider}),c()((0,m.storeAsStream)(uc.store),d()(1e3),(i=async e=>{await hc.set(e),Cc.emit("state-persisted",e)},new Ar(i,l)),(e=>{p().error("MetaMask - Persistence pipeline failed",e)})),a=uc,r.g.stateHooks.getSentryState=function(){const e=a.getState(),t=(0,le.Q)({metamask:e},br.pW);return{browser:window.navigator.userAgent,store:t,version:nc.getVersion()}};var a;var i,l;const u=()=>oc||Boolean(Object.keys(lc).length)||ic,h=(e,t)=>{if(!1===e)uc.onClientClosed();else{if(t===C.BK&&Boolean(Object.keys(lc).length))return;uc.onEnvironmentTypeClosed(t)}};kc=async e=>{var t,r;if(Zi().isDesktopEnabled()&&yc!==(null==s||null===(t=s.getOrigin)||void 0===t?void 0:t.call(s)))return void Zi().createStream(e,Xi.CONNECTION_TYPE_INTERNAL).then((()=>{ce.A&&e.postMessage({name:"CONNECTION_READY"})}));const n=e.name;if(sc.includes(e.name))return;let a=!1;const i=(0,Fe.Xf)(),c=null!==(r=e.sender)&&void 0!==r&&r.url?new URL(e.sender.url):null;if(a=i===C.q$?rc[n]:(null==c?void 0:c.origin)===`chrome-extension://${g().runtime.id}`,a){var l;const t=(null==s||null===(l=s.getPortStream)||void 0===l?void 0:l.call(s,e))||new(v())(e);if(uc.isClientOpen=!0,uc.setupTrustedCommunication(t,e.sender),ce.A&&e.onMessage.addListener((t=>{t.name===vc&&e.postMessage({name:fc})})),n===C.bE&&(oc=!0,o()(t,(()=>{oc=!1;const e=u();uc.isClientOpen=e,h(e,C.bE)}))),n===C.vH&&(ic=!0,o()(t,(()=>{ic=!1;const e=u();uc.isClientOpen=e,h(e,C.vH)}))),n===C.BK){const r=e.sender.tab.id;lc[r]=!0,o()(t,(()=>{delete lc[r];const e=u();uc.isClientOpen=e,h(e,C.BK)}))}}else if(c&&c.origin===mc.origin&&c.pathname===mc.pathname){var d;const t=(null==s||null===(d=s.getPortStream)||void 0===d?void 0:d.call(s,e))||new(v())(e);uc.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:s}=r;e.onMessage.addListener((e=>{e.data&&"eth_requestAccounts"===e.data.method&&(dc[s]=t)}))}bc(e)}},bc=e=>{var t,r;if(Zi().isDesktopEnabled()&&yc!==(null==s||null===(t=s.getOrigin)||void 0===t?void 0:t.call(s)))return void Zi().createStream(e,Xi.CONNECTION_TYPE_EXTERNAL);const n=(null==s||null===(r=s.getPortStream)||void 0===r?void 0:r.call(s,e))||new(v())(e);uc.setupUntrustedCommunication({connectionStream:n,sender:e.sender})},null!=s&&s.registerConnectListeners&&s.registerConnectListeners(kc,bc);function f(){let e="";const t=S();t&&(e=String(t)),ce.A?(g().action.setBadgeText({text:e}),g().action.setBadgeBackgroundColor({color:"#037DD6"})):(g().browserAction.setBadgeText({text:e}),g().browserAction.setBadgeBackgroundColor({color:"#037DD6"}))}function S(){const e=uc.txController.getUnapprovedTxCount(),{unapprovedMsgCount:t}=uc.messageManager,{unapprovedPersonalMsgCount:r}=uc.personalMessageManager,{unapprovedDecryptMsgCount:s}=uc.decryptMessageManager,{unapprovedEncryptionPublicKeyMsgCount:n}=uc.encryptionPublicKeyManager,{unapprovedTypedMessagesCount:a}=uc.typedMessageManager;return e+t+r+s+n+a+uc.approvalController.getTotalApprovalCount()+uc.appStateController.waitingForUnlock.length}function T(){Object.keys(uc.txController.txStateManager.getUnapprovedTxList()).forEach((e=>uc.txController.txStateManager.setTxStatusRejected(e))),uc.messageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>uc.messageManager.rejectMsg(e.id,F))),uc.personalMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>uc.personalMessageManager.rejectMsg(e.id,F))),uc.typedMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>uc.typedMessageManager.rejectMsg(e.id,F))),uc.decryptMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>uc.decryptMessageManager.rejectMsg(e.id,U))),uc.encryptionPublicKeyManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>uc.encryptionPublicKeyManager.rejectMsg(e.id,U))),Object.values(uc.approvalController.state.pendingApprovals).forEach((({id:e,type:t})=>{switch(t){case C.C7.SNAP_DIALOG_ALERT:case C.C7.SNAP_DIALOG_PROMPT:uc.approvalController.accept(e,null);break;case C.C7.SNAP_DIALOG_CONFIRMATION:uc.approvalController.accept(e,!1);break;default:uc.approvalController.reject(e,y.ethErrors.provider.userRejectedRequest())}})),f()}f(),uc.txController.on(Ni.UPDATE_BADGE,f),uc.messageManager.on(Ni.UPDATE_BADGE,f),uc.personalMessageManager.on(Ni.UPDATE_BADGE,f),uc.decryptMessageManager.on(Ni.UPDATE_BADGE,f),uc.encryptionPublicKeyManager.on(Ni.UPDATE_BADGE,f),uc.typedMessageManager.on(Ni.UPDATE_BADGE,f),uc.appStateController.on(Ni.UPDATE_BADGE,f),uc.controllerMessenger.subscribe(Ni.APPROVAL_STATE_CHANGE,f),ac.on(Nr,(({automaticallyClosed:e})=>{e?S()>0&&Ec():T()})),yc!==(null==s||null===(n=s.getOrigin)||void 0===n?void 0:n.call(s))&&uc.store.subscribe((e=>{Zi().setState(e)}))}(e,t),ce.A||await async function(){let e;try{const t=new URL(process.env.PHISHING_WARNING_PAGE_URL);let r,s;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const n=new Promise(((e,t)=>{r=e,s=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>s(new Mc)),1e3),await n}catch(e){e instanceof Mc?console.warn("Phishing warning page timeout; page not guaraneteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await(async()=>{const e=await g().tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>(ie(),e))).catch((()=>{ie()}));for(const t of e)g().tabs.sendMessage(t.id,{name:C.sM.READY}).then((()=>{ie()})).catch((()=>{ie()}))})(),p().info("MetaMask initialization complete."),Tc()}catch(e){wc(e)}}g().runtime.onConnect.addListener((async(...e)=>{await Sc,kc(...e)})),g().runtime.onConnectExternal.addListener((async(...e)=>{await Sc,bc(...e)}));class Mc extends Error{constructor(){super("Timeout failed")}}async function Ec(){const e=await nc.getActiveTabs(),t=Boolean(e.find((e=>lc[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!cc&&(r||!oc)&&!t){cc=!0;try{await ac.showPopup()}finally{cc=!1}}}async function Ac(){await Ec(),await new Promise((e=>{const t=setInterval((()=>{ic||(clearInterval(t),e())}),S.sh)}))}const Ic=()=>{if(uc)return uc.metaMetricsController.updateTraits({[w]:(new Date).toISOString().split("T")[0]}),void uc.metaMetricsController.addEventBeforeMetricsOptIn({category:re.APP,event:B,properties:{}});setTimeout((()=>{Ic()}),1e3)};g().runtime.onInstalled.addListener((({reason:e})=>{"install"!==e||process.env.METAMASK_DEBUG||process.env.IN_TEST||(Ic(),nc.openExtensionInBrowser())})),process.env.SKIP_BACKGROUND_INITIALIZATION||Pc().catch(p().error)},97125:(e,t,r)=>{"use strict";r.d(t,{B9:()=>f,D1:()=>C,HB:()=>w,L_:()=>m,Wu:()=>g,Xf:()=>p,b2:()=>T,cv:()=>k,kD:()=>u,mh:()=>h,qb:()=>S,zC:()=>v});var s=r(13550),n=r.n(s),a=r(96486),o=r(30157),i=r(75152),c=r(94280),l=r(33700);const d=(0,a.memoize)((e=>{const t=new URL(e);return"/popup.html"===t.pathname?i.bE:["/home.html"].includes(t.pathname)?i.BK:"/notification.html"===t.pathname?i.vH:i.Ms})),u=(e=window.location.href)=>d(e),p=()=>{const{navigator:e}=window,{userAgent:t}=e;return t.includes("Firefox")?i.q$:"brave"in e?i.Sk:t.includes("Edg/")?i.PC:t.includes("OPR")?i.Qv:i.ck};function h(e){return new(n())((0,c.MT)(e),16)}function g(e,t,r){const s=new(n())(t),a=new(n())(r);return e.mul(s).div(a)}const m=e=>"string"!=typeof e||e.match(/^-?0x/u)?e:e.match(/^-?0X/u)?e.replace("0X","0x"):e.startsWith("-")?e.replace("-","-0x"):`0x${e}`;function f(e){return e===o.vo.MAINNET?"mainnet":o.mT.includes(e)?"testnet":"custom"}function v(e,t){return e.some((e=>e.name===t))}const y="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",C=()=>{let e="";const t=y.length;for(let r=0;r<20;r++)e+=y.charAt(Math.floor(Math.random()*t));return e},S=e=>e instanceof Date;function T(){let e,t;return{promise:new Promise(((r,s)=>{e=r,t=s})),resolve:e,reject:t}}function w(e,t){let r,s=!0;return n=>{try{return s?(s=!1,e(null!=t?t:n,n)):e(r,n)}finally{r=n}}}function k(e){const{r:t,s:r,v:s,hash:n,txReceipt:a,txParams:o}=e,{to:i,data:c,nonce:d,gas:u,from:p,value:h,gasPrice:g,accessList:m,maxFeePerGas:f,maxPriorityFeePerGas:v}=o,y={v:s,r:t,s:r,to:i,gas:u,from:p,hash:n,nonce:`${d}`,input:c||"0x",value:h||"0x0",accessList:m||null,blockHash:(null==a?void 0:a.blockHash)||null,blockNumber:(null==a?void 0:a.blockNumber)||null,transactionIndex:(null==a?void 0:a.transactionIndex)||null,type:f&&v?l.dE.feeMarket:l.dE.legacy};return f&&v?(y.gasPrice=f,y.maxFeePerGas=f,y.maxPriorityFeePerGas=v):y.gasPrice=g,y}},75152:(e,t,r)=>{"use strict";r.d(t,{$6:()=>m,BK:()=>i,C7:()=>g,Ms:()=>c,PC:()=>u,Qv:()=>h,Sk:()=>l,UO:()=>v,aq:()=>C,bE:()=>a,ck:()=>d,hQ:()=>T,jr:()=>y,q$:()=>p,sM:()=>f,vH:()=>o,zj:()=>S});var s=r(76412),n=r(32426);const a="popup",o="notification",i="fullscreen",c="background",l="Brave",d="Chrome",u="Edge",p="Firefox",h="Opera",g={ADD_ETHEREUM_CHAIN:"wallet_addEthereumChain",ETH_ACCOUNTS:n.Gz.eth_accounts,ETH_DECRYPT:"eth_decrypt",ETH_GET_ENCRYPTION_PUBLIC_KEY:"eth_getEncryptionPublicKey",ETH_REQUEST_ACCOUNTS:"eth_requestAccounts",ETH_SIGN:"eth_sign",ETH_SIGN_TYPED_DATA:"eth_signTypedData",ETH_SIGN_TYPED_DATA_V3:"eth_signTypedData_v3",ETH_SIGN_TYPED_DATA_V4:"eth_signTypedData_v4",GET_PROVIDER_STATE:"metamask_getProviderState",LOG_WEB3_SHIM_USAGE:"metamask_logWeb3ShimUsage",PERSONAL_SIGN:"personal_sign",SEND_METADATA:"metamask_sendDomainMetadata",SWITCH_ETHEREUM_CHAIN:"wallet_switchEthereumChain",WALLET_REQUEST_PERMISSIONS:"wallet_requestPermissions",WATCH_ASSET:"wallet_watchAsset",WATCH_ASSET_LEGACY:"metamask_watchAsset",SNAP_DIALOG_ALERT:`${n.Gz.snap_dialog}:alert`,SNAP_DIALOG_CONFIRMATION:`${n.Gz.snap_dialog}:confirmation`,SNAP_DIALOG_PROMPT:`${n.Gz.snap_dialog}:prompt`,ENABLE_DESKTOP:"metamask_enableDesktop"},m={[s.DialogType.Alert]:g.SNAP_DIALOG_ALERT,[s.DialogType.Confirmation]:g.SNAP_DIALOG_CONFIRMATION,[s.DialogType.Prompt]:g.SNAP_DIALOG_PROMPT},f={CONNECTION_READY:"CONNECTION_READY",READY:"METAMASK_EXTENSION_READY"},v={[a]:"popupGasPollTokens",[o]:"notificationGasPollTokens",[i]:"fullScreenGasPollTokens",[c]:"none"},y="metamask",C=["pbbkamfgmaedccnfkmjcofcecjhfgldn","nkbihfbeogaeaoehlefnkodbefgpgknn","ljfoeinjpaedjfecbmggjgodbgkmjkjk"],S=["webextension-beta@metamask.io","webextension@metamask.io","webextension-flask@metamask.io"],T="UNKNOWN"},30157:(e,t,r)=>{"use strict";r.d(t,{By:()=>H,CE:()=>T,Dt:()=>J,EQ:()=>Y,Fk:()=>b,IT:()=>$,Jl:()=>B,Jz:()=>S,Nc:()=>k,QB:()=>j,Qe:()=>P,Qv:()=>n,RM:()=>f,Sf:()=>L,V$:()=>d,VL:()=>F,Vi:()=>X,Xm:()=>E,YV:()=>Q,b0:()=>K,fI:()=>q,iB:()=>z,kW:()=>G,mT:()=>D,qW:()=>M,vo:()=>l});var s=r(96486);const n={GOERLI:"goerli",LOCALHOST:"localhost",MAINNET:"mainnet",RPC:"rpc",SEPOLIA:"sepolia"},a="1",o="5",i="1337",c="11155111",l={MAINNET:"0x1",GOERLI:"0x5",LOCALHOST:"0x539",BSC:"0x38",BSC_TESTNET:"0x61",OPTIMISM:"0xa",OPTIMISM_TESTNET:"0x1a4",POLYGON:"0x89",POLYGON_TESTNET:"0x13881",AVALANCHE:"0xa86a",AVALANCHE_TESTNET:"0xa869",FANTOM:"0xfa",FANTOM_TESTNET:"0xfa2",CELO:"0xa4ec",ARBITRUM:"0xa4b1",HARMONY:"0x63564c40",PALM:"0x2a15c308d",SEPOLIA:"0xaa36a7",AURORA:"0x4e454152",MOONBEAM:"0x504",MOONBEAM_TESTNET:"0x507",MOONRIVER:"0x505"},d=0xfffffffffffec,u="Ethereum Mainnet",p="Goerli",h="Sepolia",g="Localhost 8545",m=process.env.INFURA_PROJECT_ID,f=({network:e,excludeProjectId:t=!1})=>`https://${e}.infura.io/v3/${t?"":m}`,v=f({network:n.MAINNET}),y=f({network:n.GOERLI}),C=f({network:n.SEPOLIA}),S="http://localhost:8545",T={ARBITRUM:"ETH",AURORA:"Aurora ETH",AVALANCHE:"AVAX",BNB:"BNB",BUSD:"BUSD",CELO:"CELO",DAI:"DAI",ETH:"ETH",FANTOM:"FTM",HARMONY:"ONE",PALM:"PALM",MATIC:"MATIC",TEST_ETH:"TESTETH",USDC:"USDC",USDT:"USDT",WETH:"WETH",OPTIMISM:"OP"},w={...T,"1INCH":"1INCH",AAVE:"AAVE",ABT:"ABT",ACH:"ACH",AGEUR:"AGEUR",AGLD:"AGLD",AMP:"AMP",ANKR:"ANKR",APE:"APE",ARPA:"ARPA",ASM:"ASM",AUCTION:"AUCTION",AXS:"AXS",AVAX:"AVAX",AVAXC:"AVAXC",AVAXCUSDC:"AVAXCUSDC",BADGER:"BADGER",BAL:"BAL",BAND:"BAND",BAT:"BAT",BNT:"BNT",BOBA:"BOBA",BOND:"BOND",BTRST:"BTRST",CHAIN:"CHAIN",CHZ:"CHZ",CLV:"CLV",COMP:"COMP",COTI:"COTI",CRO:"CRO",CRV:"CRV",CTSI:"CTSI",CVC:"CVC",DAO:"DAO",DDX:"DDX",DNT:"DNT",ENJ:"ENJ",ENS:"ENS",EURT:"EURT",FARM:"FARM",FET:"FET",FORTH:"FORTH",FX:"FX",GNO:"GNO",GRT:"GRT",GTC:"GTC",GTH:"GTH",GUSD:"GUSD",GYEN:"GYEN",HEX:"HEX",IOTX:"IOTX",IMX:"IMX",JASMY:"JASMY",KEEP:"KEEP",KNC:"KNC",KRL:"KRL",LCX:"LCX",LINK:"LINK",LPT:"LPT",LRC:"LRC",MANA:"MANA",MASK:"MASK",MINDS:"MINDS",MIR:"MIR",MKR:"MKR",MLN:"MLN",MTL:"MTL",MUSDC:"mUSDC",NKN:"NKN",NMR:"NMR",NU:"NU",OGN:"OGN",OMG:"OMG",ORN:"ORN",OXT:"OXT",PAX:"PAX",PERP:"PERP",PLA:"PLA",POLS:"POLS",POLY:"POLY",QNT:"QNT",QUICK:"QUICK",RAD:"RAD",RAI:"RAI",RARI:"RARI",REN:"REN",REP:"REP",REQ:"REQ",RLC:"RLC",RLY:"RLY",SAND:"SAND",SHIB:"SHIB",SKL:"SKL",SNX:"SNX",SPA:"SPA",STETH:"STETH",STORJ:"STORJ",SUKU:"SUKU",SUSHI:"SUSHI",SWAP:"SWAP",SWFTC:"SWFTC",TRAC:"TRAC",TRB:"TRB",TRIBE:"TRIBE",TRU:"TRU",TXL:"TXL",UMA:"UMA",UNI:"UNI",USDS:"USDS",VRA:"VRA",WBTC:"WBTC",WCFG:"WCFG",XYO:"XYO",YFII:"YFII",YFI:"YFI",YLD:"YLD",ZRX:"ZRX",ZUSD:"ZUSD"},k="./images/eth_logo.svg",b="./images/black-eth-logo.svg",P="./images/bnb.png",M="./images/matic-token.png",E="./images/avax-token.png",A="./images/arbitrum.svg",I="./images/fantom-opera.svg",_="./images/harmony-one.svg",N="./images/optimism.svg",x="./images/palm.svg",R="./images/aurora.png",O="./images/celo.svg",L=[n.MAINNET,n.GOERLI,n.SEPOLIA],D=[l.GOERLI,l.SEPOLIA,l.LOCALHOST],U=e=>(0,s.capitalize)(e),F={[n.GOERLI]:`${U(n.GOERLI)}${T.ETH}`,[n.SEPOLIA]:`${U(n.SEPOLIA)}${T.ETH}`},B={[n.GOERLI]:{networkId:o,chainId:l.GOERLI,ticker:F[n.GOERLI]},[n.SEPOLIA]:{networkId:c,chainId:l.SEPOLIA,ticker:F[n.SEPOLIA]},[n.MAINNET]:{networkId:a,chainId:l.MAINNET},[n.LOCALHOST]:{networkId:i,chainId:l.LOCALHOST}},G={[n.MAINNET]:u,[n.GOERLI]:p,[n.SEPOLIA]:h,[n.LOCALHOST]:g,[o]:p,[c]:h,[a]:u,[i]:g,[l.GOERLI]:p,[l.SEPOLIA]:h,[l.MAINNET]:u,[l.LOCALHOST]:g},j={[l.MAINNET]:n.MAINNET,[l.GOERLI]:n.GOERLI,[l.SEPOLIA]:n.SEPOLIA,[l.LOCALHOST]:n.LOCALHOST},H={[l.GOERLI]:y,[l.SEPOLIA]:C,[l.MAINNET]:v,[l.LOCALHOST]:S},$=(l.MAINNET,l.AVALANCHE,l.BSC,l.POLYGON,l.ARBITRUM,l.FANTOM,l.HARMONY,l.OPTIMISM,l.PALM,l.AURORA,l.CELO,{[o]:n.GOERLI,[c]:n.SEPOLIA,[a]:"homestead"}),q={[l.MAINNET]:a,[l.GOERLI]:o,[l.SEPOLIA]:c,[l.LOCALHOST]:i},K=(T.ETH,T.TEST_ETH,T.BNB,T.MATIC,T.AVALANCHE,T.OPTIMISM,T.CELO,"countryBlocked"),V="etherscan.io",W="api",Q={[l.GOERLI]:{domain:V,subdomain:`api-${j[l.GOERLI]}`,networkId:q[l.GOERLI]},[l.MAINNET]:{domain:V,subdomain:W,networkId:q[l.MAINNET]},[l.SEPOLIA]:{domain:V,subdomain:`api-${j[l.SEPOLIA]}`,networkId:q[l.SEPOLIA]},[l.BSC]:{domain:"bscscan.com",subdomain:W,networkId:parseInt(l.BSC,16).toString()},[l.BSC_TESTNET]:{domain:"bscscan.com",subdomain:"api-testnet",networkId:parseInt(l.BSC_TESTNET,16).toString()},[l.OPTIMISM]:{domain:V,subdomain:"api-optimistic",networkId:parseInt(l.OPTIMISM,16).toString()},[l.OPTIMISM_TESTNET]:{domain:V,subdomain:"api-goerli-optimistic",networkId:parseInt(l.OPTIMISM_TESTNET,16).toString()},[l.POLYGON]:{domain:"polygonscan.com",subdomain:W,networkId:parseInt(l.POLYGON,16).toString()},[l.POLYGON_TESTNET]:{domain:"polygonscan.com",subdomain:"api-mumbai",networkId:parseInt(l.POLYGON_TESTNET,16).toString()},[l.AVALANCHE]:{domain:"snowtrace.io",subdomain:W,networkId:parseInt(l.AVALANCHE,16).toString()},[l.AVALANCHE_TESTNET]:{domain:"snowtrace.io",subdomain:"api-testnet",networkId:parseInt(l.AVALANCHE_TESTNET,16).toString()},[l.FANTOM]:{domain:"ftmscan.com",subdomain:W,networkId:parseInt(l.FANTOM,16).toString()},[l.FANTOM_TESTNET]:{domain:"ftmscan.com",subdomain:"api-testnet",networkId:parseInt(l.FANTOM_TESTNET,16).toString()},[l.MOONBEAM]:{domain:"moonscan.io",subdomain:"api-moonbeam",networkId:parseInt(l.MOONBEAM,16).toString()},[l.MOONBEAM_TESTNET]:{domain:"moonscan.io",subdomain:"api-moonbase",networkId:parseInt(l.MOONBEAM_TESTNET,16).toString()},[l.MOONRIVER]:{domain:"moonscan.io",subdomain:"api-moonriver",networkId:parseInt(l.MOONRIVER,16).toString()}},z={BERLIN:"berlin",LONDON:"london"},Y={[l.OPTIMISM]:1,[l.OPTIMISM_TESTNET]:1},X=new Set(["eth_signTransaction"]),J="dweb.link",Z="ethereum";l.MAINNET,T.ETH,w.ETH,w["1INCH"],w.AAVE,w.AGEUR,w.BUSD,w.CHAIN,w.CLV,w.COMP,w.CTSI,w.DAI,w.DAO,w.ENJ,w.EURT,w.GTH,w.HEX,w.LINK,w.MANA,w.MASK,w.MINDS,w.MKR,w.PLA,w.POLS,w.SAND,w.STETH,w.SUSHI,w.SWAP,w.TXL,w.UNI,w.USDC,w.USDT,w.VRA,w.WBTC,w.YLD,w.ETH,w.ETH,w.USDT,w.USDC,w.DAI,w.MATIC,w.ORN,w.WETH,w.IMX,T.ETH,w.ETH,w.AAVE,w.BAT,w.BUSD,w.COMP,w.CRV,w.DAI,w.GUSD,w.GYEN,w.LINK,w.MKR,w.PAX,w.RAI,w.SNX,w.UMA,w.UNI,w.USDC,w.USDS,w.USDT,w.WBTC,w.WETH,w.YFI,w.ZUSD,w.ETH,w["1INCH"],w.AAVE,w.ABT,w.ACH,w.AGLD,w.AMP,w.ANKR,w.APE,w.ARPA,w.ASM,w.AUCTION,w.AXS,w.BADGER,w.BAL,w.BAND,w.BAT,w.BNT,w.BOBA,w.BOND,w.BTRST,w.CHZ,w.CLV,w.COMP,w.COTI,w.CRO,w.CRV,w.CTSI,w.CVC,w.DAI,w.DDX,w.DNT,w.ENJ,w.ENS,w.FARM,w.FET,w.FORTH,w.FX,w.GNO,w.GRT,w.GTC,w.IOTX,w.JASMY,w.KEEP,w.KNC,w.KRL,w.LCX,w.LINK,w.LPT,w.LRC,w.MANA,w.MASK,w.MATIC,w.MIR,w.MKR,w.MLN,w.MTL,w.NKN,w.NMR,w.NU,w.OGN,w.OMG,w.OXT,w.PAX,w.PERP,w.PLA,w.POLY,w.QNT,w.QUICK,w.RAD,w.RAI,w.RARI,w.REN,w.REP,w.REQ,w.RLC,w.RLY,w.SAND,w.SHIB,w.SKL,w.SNX,w.STORJ,w.SUKU,w.SUSHI,w.SWFTC,w.TRAC,w.TRB,w.TRIBE,w.TRU,w.UMA,w.UNI,w.USDC,w.USDT,w.WBTC,w.WCFG,w.XYO,w.YFII,w.ZRX,l.GOERLI,F[n.GOERLI],l.SEPOLIA,F[n.SEPOLIA],l.BSC,T.BNB,w.BNB,w.BUSD,w.BNB,w.BNB,w.BUSD,l.POLYGON,T.MATIC,w.MATIC,w.USDT,w.USDC,w.DAI,w.BNB,w.MATIC,w.USDC,T.MATIC,w.MATIC,w.MUSDC,l.AVALANCHE,T.AVALANCHE,w.AVALANCHE,w.AVAX,w.AVAX,T.AVALANCHE,w.AVALANCHE,w.AVAXC,w.AVAXCUSDC,w.AVALANCHE,l.FANTOM,T.FANTOM,w.FANTOM,l.CELO,T.CELO,w.CELO,w.CELO,w.CELO,l.OPTIMISM,T.ETH,w.ETH,w.USDC,l.ARBITRUM,T.ARBITRUM,w.ARBITRUM,w.SPA,w.USDC,w.USDS,l.AURORA,T.AURORA,w.AURORA,l.ARBITRUM,T.ARBITRUM,l.AURORA,T.AURORA,l.AVALANCHE,T.AVALANCHE,l.BSC,T.BNB,l.FANTOM,T.FANTOM,l.HARMONY,T.HARMONY,l.OPTIMISM,T.ETH,l.PALM,T.PALM,l.POLYGON,(0,s.capitalize)(n.MAINNET),T.MATIC,l.CELO,T.CELO},32426:(e,t,r)=>{"use strict";r.d(t,{Gz:()=>n,J9:()=>i,Ky:()=>s,TS:()=>a,Y8:()=>o});const s=Object.freeze({restrictReturnedAccounts:"restrictReturnedAccounts"}),n=Object.freeze({eth_accounts:"eth_accounts",snap_confirm:"snap_confirm",snap_dialog:"snap_dialog",snap_notify:"snap_notify",snap_manageState:"snap_manageState",snap_getBip32PublicKey:"snap_getBip32PublicKey",snap_getBip32Entropy:"snap_getBip32Entropy",snap_getBip44Entropy:"snap_getBip44Entropy",snap_getEntropy:"snap_getEntropy","wallet_snap_*":"wallet_snap_*"}),a=(Object.freeze({wallet_snap_:"wallet_snap_*"}),Object.freeze({"endowment:network-access":"endowment:network-access","endowment:transaction-insight":"endowment:transaction-insight","endowment:cronjob":"endowment:cronjob","endowment:ethereum-provider":"endowment:ethereum-provider","endowment:rpc":"endowment:rpc","endowment:long-running":"endowment:long-running"})),o=Object.freeze({eth_accounts:"eth_accounts is disabled. For more information please see https://github.com/MetaMask/snaps-monorepo/issues/990."}),i=Object.freeze({"endowment:keyring":"This endowment is still in development therefore not available."})},74530:(e,t,r)=>{"use strict";r.d(t,{$7:()=>w,$g:()=>E,AD:()=>o,AS:()=>P,TL:()=>S,Wn:()=>f,Wp:()=>T,ez:()=>n,gG:()=>M,qS:()=>b,yP:()=>a,zA:()=>k});var s=r(30157);const n="quotes-expired",a="quotes-not-avilable",o="swaps-fetch-order-conflict",i="0x0000000000000000000000000000000000000000",c={symbol:s.CE.ETH,name:"Ether",address:i,decimals:18,iconUrl:s.Nc},l={symbol:s.CE.BNB,name:"Binance Coin",address:i,decimals:18,iconUrl:s.Qe},d={symbol:s.CE.MATIC,name:"Matic",address:i,decimals:18,iconUrl:s.qW},u={symbol:s.CE.AVALANCHE,name:"Avalanche",address:i,decimals:18,iconUrl:s.Xm},p={symbol:s.CE.TEST_ETH,name:"Test Ether",address:i,decimals:18,iconUrl:s.Fk},h={symbol:s.CE.ETH,name:"Ether",address:i,decimals:18,iconUrl:s.Fk},g={...c},m={...c},f="0x1d4c0",v="0x881d40237659c251811cec9c364ef91dc08d300c",y="0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",C="0x539",S="https://swap.metaswap.codefi.network",T="https://swap.metaswap-dev.codefi.network",w="https://gas-api.metaswap.codefi.network",k="https://gas-api.metaswap-dev.codefi.network",b=(s.vo.MAINNET,s.vo.BSC,s.vo.POLYGON,s.vo.AVALANCHE,s.vo.OPTIMISM,s.vo.ARBITRUM,s.vo.GOERLI,s.vo.MAINNET,s.vo.GOERLI,{[s.vo.MAINNET]:"0x881d40237659c251811cec9c364ef91dc08d300c",[C]:v,[s.vo.BSC]:"0x1a1ec25dc08e98e5e93f1104b5e5cdd298707d31",[s.vo.POLYGON]:"0x1a1ec25dc08e98e5e93f1104b5e5cdd298707d31",[s.vo.GOERLI]:v,[s.vo.AVALANCHE]:"0x1a1ec25dc08e98e5e93f1104b5e5cdd298707d31",[s.vo.OPTIMISM]:"0x9dda6ef3d919c9bc8885d5560999a3640431e8e6",[s.vo.ARBITRUM]:"0x9dda6ef3d919c9bc8885d5560999a3640431e8e6"}),P={[s.vo.MAINNET]:y,[C]:y,[s.vo.BSC]:"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",[s.vo.POLYGON]:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",[s.vo.GOERLI]:"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",[s.vo.AVALANCHE]:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7",[s.vo.OPTIMISM]:"0x4200000000000000000000000000000000000006",[s.vo.ARBITRUM]:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1"},M=(s.vo.MAINNET,b[s.vo.MAINNET],P[s.vo.MAINNET],b["0x539"],P["0x539"],s.vo.GOERLI,b[s.vo.GOERLI],P[s.vo.GOERLI],s.vo.BSC,b[s.vo.BSC],P[s.vo.BSC],s.vo.POLYGON,b[s.vo.POLYGON],P[s.vo.POLYGON],s.vo.AVALANCHE,b[s.vo.AVALANCHE],P[s.vo.AVALANCHE],s.vo.OPTIMISM,b[s.vo.OPTIMISM],P[s.vo.OPTIMISM],s.vo.ARBITRUM,b[s.vo.ARBITRUM],P[s.vo.ARBITRUM],{[s.vo.MAINNET]:c,[C]:p,[s.vo.BSC]:l,[s.vo.POLYGON]:d,[s.vo.GOERLI]:h,[s.vo.AVALANCHE]:u,[s.vo.OPTIMISM]:m,[s.vo.ARBITRUM]:g}),E=(s.vo.BSC,s.vo.MAINNET,s.vo.POLYGON,s.vo.GOERLI,s.vo.AVALANCHE,s.vo.OPTIMISM,s.vo.ARBITRUM,"extension");let A,I;!function(e){e.owned="owned",e.top="top"}(A||(A={})),function(e){e[e.default=2]="default",e[e.high=3]="high"}(I||(I={}))},17102:(e,t,r)=>{"use strict";r.d(t,{EB:()=>a,KP:()=>s,sh:()=>n});const s=1,n=1e3*s,a=60*n},33700:(e,t,r)=>{"use strict";let s,n,a;r.d(t,{LN:()=>a,Rq:()=>c,Yn:()=>p,d0:()=>d,dE:()=>n,h3:()=>u,iU:()=>s}),function(e){e.cancel="cancel",e.contractInteraction="contractInteraction",e.deployContract="contractDeployment",e.ethDecrypt="eth_decrypt",e.ethGetEncryptionPublicKey="eth_getEncryptionPublicKey",e.incoming="incoming",e.personalSign="personal_sign",e.retry="retry",e.sign="eth_sign",e.signTypedData="eth_signTypedData",e.simpleSend="simpleSend",e.smart="smart",e.swap="swap",e.swapApproval="swapApproval",e.tokenMethodApprove="approve",e.tokenMethodSafeTransferFrom="safetransferfrom",e.tokenMethodTransfer="transfer",e.tokenMethodTransferFrom="transferfrom",e.tokenMethodSetApprovalForAll="setapprovalforall"}(s||(s={})),function(e){e.legacy="0x0",e.accessList="0x1",e.feeMarket="0x2"}(n||(n={})),function(e){e.unapproved="unapproved",e.approved="approved",e.rejected="rejected",e.signed="signed",e.submitted="submitted",e.failed="failed",e.dropped="dropped",e.confirmed="confirmed",e.pending="pending"}(a||(a={}));a.unapproved,a.approved,a.signed,a.submitted,a.pending;let o,i,c,l,d,u,p;!function(e){e.cancelled="cancelled",e.pending="pending"}(o||(o={})),function(e){e.cancelled="cancelled",e.pending="pending",e.success="success"}(i||(i={})),function(e){e.custom="custom",e.revoke="revoke",e.dappProposed="dapp_proposed"}(c||(c={})),function(e){e.approval="approval",e.interaction="interaction",e.receive="receive",e.send="send",e.signatureRequest="signature-request",e.swap="swap"}(l||(l={})),function(e){e.added="Transaction Added",e.approved="Transaction Approved",e.finalized="Transaction Finalized",e.rejected="Transaction Rejected",e.submitted="Transaction Submitted"}(d||(d={})),function(e){e.native="NATIVE",e.token="TOKEN",e.NFT="NFT",e.unknown="UNKNOWN"}(u||(u={})),function(e){e.ERC20="ERC20",e.ERC721="ERC721",e.ERC1155="ERC1155",e.none="NONE"}(p||(p={}))},94280:(e,t,r)=>{"use strict";r.d(t,{MT:()=>o,Pv:()=>n,QG:()=>a});var s=r(22751);(0,s.zeroAddress)();function n(e,{allowNonPrefixed:t=!0,mixedCaseUseChecksum:r=!1}={}){const n=t?(0,s.addHexPrefix)(e):e;if(!(0,s.isHexString)(n))return!1;if(r){const e=n.slice(2),t=e.toLowerCase(),r=e.toUpperCase();if(!(e===t||e===r))return(0,s.isValidChecksumAddress)(n)}return(0,s.isValidAddress)(n)}function a(e){if(!e)return"";const t=(0,s.addHexPrefix)(e);return(0,s.isHexString)(t)?(0,s.toChecksumAddress)(t):t}function o(e){return"string"!=typeof e?e:(0,s.isHexPrefixed)(e)?e.slice(2):e}},92147:(e,t,r)=>{"use strict";r.d(t,{Cs:()=>n});r(74971),r(64914),r(44431),r(22751),r(71370),r(40571),r(45564),r(96486),r(51206);function s(e){try{return new URL(e)}catch(e){return""}}function n(e){var t;return(null===(t=s(e))||void 0===t?void 0:t.hostname)||""}(()=>{const e=Array.from(new Array(32)).map(((e,t)=>"int"+8*(t+1))),t=Array.from(new Array(32)).map(((e,t)=>"uint"+8*(t+1))),r=Array.from(new Array(32)).map(((e,t)=>`bytes${t+1}`)),s=Array.from(new Array(32)).map(((e,t)=>"fixed"+8*(t+1))),n=Array.from(new Array(32)).map(((e,t)=>"ufixed"+8*(t+1))),a=Array.from(new Array(80)).map(((e,t)=>s.map((e=>`${e}x${t+1}`)))),o=Array.from(new Array(80)).map(((e,t)=>n.map((e=>`${e}x${t+1}`))));a.flat(),o.flat()})()},94139:()=>{},34711:()=>{},56718:()=>{},5566:()=>{},34498:()=>{},70737:()=>{},55024:()=>{}},r={};function s(e){var n=r[e];if(void 0!==n)return n.exports;var a=r[e]={id:e,loaded:!1,exports:{}};return t[e].call(a.exports,a,a.exports,s),a.loaded=!0,a.exports}s.m=t,s.amdD=function(){throw new Error("define cannot be used indirect")},s.amdO={},e=[],s.O=(t,r,n,a)=>{if(!r){var o=1/0;for(d=0;d<e.length;d++){for(var[r,n,a]=e[d],i=!0,c=0;c<r.length;c++)(!1&a||o>=a)&&Object.keys(s.O).every((e=>s.O[e](r[c])))?r.splice(c--,1):(i=!1,a<o&&(o=a));if(i){e.splice(d--,1);var l=n();void 0!==l&&(t=l)}}return t}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[r,n,a]},s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={352:0};s.O.j=t=>0===e[t];var t=(t,r)=>{var n,a,[o,i,c]=r,l=0;if(o.some((t=>0!==e[t]))){for(n in i)s.o(i,n)&&(s.m[n]=i[n]);if(c)var d=c(s)}for(t&&t(r);l<o.length;l++)a=o[l],s.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return s.O(d)},r=self.webpackChunkmetamask_crx=self.webpackChunkmetamask_crx||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var n=s.O(void 0,[722,693,344,760],(()=>s(59144)));n=s.O(n)})();